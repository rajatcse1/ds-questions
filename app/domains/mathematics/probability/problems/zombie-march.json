{
    "status": true, 
    "model": {
        "onboarding": null, 
        "tagAncestry": [], 
        "solved_count": 279, 
        "leaderboard_out_of_sync_message": null, 
        "public_test_cases": true, 
        "checker_program": null, 
        "topics": [], 
        "time_left": null, 
        "updated_at": "2017-07-11T15:41:45.000Z", 
        "author_name": "dheeraj", 
        "has_started": true, 
        "epoch_starttime": null, 
        "has_all_test_cases_public": false, 
        "difficulty_name": "Hard", 
        "require_unlock": true, 
        "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>Zombies have placed themselves at every junction in Bucharest. Each junction 'i' initially has a presence of ai number of zombies. Every timestep, each zombie randomly chooses one of its neighboring junctions and walks towards it. Each neighboring junction is choosen by the zombie with an equal probability. In order to safegaurd the citizens of Bucharest we need to find out the expected number of zombies at every junction after 'k' timesteps. </p>\n\n<p>The network of Bucharest is given as an edge list.  </p>\n\n<p><strong>Input Format</strong>  </p>\n\n<ul>\n<li>t - the number of test cases. 't' cases follow.</li>\n<li>n, m, k - 'n' junctions (nodes) in Bucharest, 'm' roads (edges) and 'k' time steps. </li>\n<li>This is followed by m lines containing 1 edge on each line. Each edge is denoted by 2 integers representing the nodes it connects, which can range from 0 to n-1.  All the edges are bidirectional. A node cannot connect itself. </li>\n<li>This is followed by n lines, where the i<sup>th</sup> line contains the initial number of Zombies at the location ai.</li>\n</ul>\n\n<p><strong>Output Format</strong> <br>\nOutput the number of zombies (rounded of to its nearest integer) in the 5 most highly populated junctions after 'k' timesteps.</p>\n\n<p><strong>Constraints</strong> <br>\n1&lt;=t&lt;=5</p>\n\n<p>5&lt;=n&lt;=100000</p>\n\n<p>1&lt;=m&lt;= 200000</p>\n\n<p>1&lt;=k&lt;=10000000</p>\n\n<p>1&lt;=ai&lt;=1000</p>\n\n<p><strong>Sample Input</strong>  </p>\n\n<p>1</p>\n\n<p>10 18 100</p>\n\n<p>0 8 </p>\n\n<p>0 5 </p>\n\n<p>1 2 </p>\n\n<p>1 5 </p>\n\n<p>2 8 </p>\n\n<p>2 4 </p>\n\n<p>2 5 </p>\n\n<p>2 6 </p>\n\n<p>3 5 </p>\n\n<p>4 8 </p>\n\n<p>4 6 </p>\n\n<p>4 7 </p>\n\n<p>5 8 </p>\n\n<p>5 9 </p>\n\n<p>6 8 </p>\n\n<p>6 9 </p>\n\n<p>7 9 </p>\n\n<p>8 9 </p>\n\n<p>1</p>\n\n<p>1</p>\n\n<p>1</p>\n\n<p>1</p>\n\n<p>1</p>\n\n<p>1</p>\n\n<p>1</p>\n\n<p>1</p>\n\n<p>1</p>\n\n<p>1</p>\n\n<p><strong>Sample Output</strong> <br>\n2 2 1 1 1</p></div></div></div>", 
        "hacker": {
            "username": "HackerRank", 
            "is_admin": true, 
            "id": 15055, 
            "avatar": "https://hrcdn.net/s3_pub/hr-avatars/4c95f96b-1ff9-46ed-98f8-cb3cb4ed8834/150x150.png"
        }, 
        "id": 109, 
        "leaderboard_out_of_sync": null, 
        "has_ended": false, 
        "languages": [
            "bash", 
            "c", 
            "cpp", 
            "java", 
            "csharp", 
            "php", 
            "ruby", 
            "python", 
            "perl", 
            "haskell", 
            "clojure", 
            "scala", 
            "lua", 
            "go", 
            "javascript", 
            "erlang", 
            "sbcl", 
            "d", 
            "ocaml", 
            "pascal", 
            "python3", 
            "groovy", 
            "objectivec", 
            "fsharp", 
            "visualbasic", 
            "lolcode", 
            "smalltalk", 
            "tcl", 
            "java8", 
            "r", 
            "racket", 
            "rust", 
            "swift", 
            "elixir", 
            "cpp14", 
            "kotlin", 
            "julia"
        ], 
        "is_custom": false, 
        "compile_and_test": true, 
        "default_language": null, 
        "migrated_resource": null, 
        "submit_disabled": null, 
        "expert_solution_status": false, 
        "can_solve": true, 
        "company_id": null, 
        "custom": null, 
        "can_be_viewed": true, 
        "track": {
            "name": "Probability", 
            "taxonomy": 1, 
            "track_slug": "mathematics", 
            "track_id": 22, 
            "track_name": "Mathematics", 
            "id": 53, 
            "rewards_system_enabled": null, 
            "slug": "probability"
        }, 
        "primary_contest": null, 
        "factor": 80, 
        "is_solution_unlocked": false, 
        "preview": "Zombies randomly appear in a city and begin walking around randomly. Determine the expected value of the most popular zombie junctions.", 
        "is_editorial_available": false, 
        "status": null, 
        "category": "algorithm", 
        "public_solutions": true, 
        "color": null, 
        "deleted": false, 
        "dynamic": true, 
        "company": null, 
        "moderator_or_support": false, 
        "is_text": false, 
        "solved_score": 0.5, 
        "difficulty_score": "0.528", 
        "difficulty": 0.4757630161579892, 
        "active": true, 
        "show_skeliton": null, 
        "max_score": 80, 
        "slug": "zombie-march", 
        "contest_slug": "master", 
        "user_score": 0, 
        "real_dynamic": false, 
        "kind": "code", 
        "player_count": 2, 
        "submitted_hackers_count": 566, 
        "name": "Zombie March***", 
        "is_preview_contest": false, 
        "level": 62, 
        "success_ratio": 0.4929328621908127, 
        "total_count": 566, 
        "created_at": "2013-01-04T20:29:43.000Z", 
        "epoch_endtime": null, 
        "judgebot": null, 
        "available_translations": [], 
        "codechecker_handle": "", 
        "countdown_time": 0, 
        "author_avatar": "https://hrcdn.net/s3_pub/hr-avatars/d4bf0710-8eca-4d8e-b84b-e86ffd41db3b/150x150.png", 
        "custom_tabs": null, 
        "judgebot_language": null, 
        "custom_case": true, 
        "requirements_description": null, 
        "is_skip_band_challenge": false, 
        "custom_checker_language": null
    }
}