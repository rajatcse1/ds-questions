{
    "status": true, 
    "model": {
        "onboarding": null, 
        "tagAncestry": [], 
        "solved_count": 42, 
        "leaderboard_out_of_sync_message": null, 
        "public_test_cases": true, 
        "checker_program": "\n\nimport json\nimport difflib\nimport math\nfrom sys import stdin\n\n \ndef check_inputs (inputs, outputs, signals):\n    scores = []\n    valid = []\n \n    total_count = len(inputs)\n    total_score = 0.0\n    iter_signal = 0\n    for inps, outps in zip(inputs, outputs):\n        inps = inps.strip()\n        outps = outps.strip()\n\n        if signals[iter_signal] != 0:\n            valid.append(0)\n        else:\n            diff = abs(float(inps) - float(outps))\n            if (diff <= 1e-4 or abs(diff / float(inps)) <= 1e-4):\n                valid.append(1)\n                total_score += 1.0\n            else:\n                valid.append(0)\n        iter_signal += 1\n\n    return valid, total_score/total_count\n \ndef process(data):\n    # Whatever you do, I am not giving any marks!\n    valid, score = check_inputs(data[\"expected_outputs\"], data[\"outputs\"], data[\"signals\"])\n    if score <= 0:\n        score = 0\n    return score, valid\n \nif __name__ ==  '__main__':\n    stdin = stdin.read().split('\\n')\n \n    # Get the run directory for the submission we need to evaluate. I know,\n    # hackish right?\n \n    run_directory = stdin[0]\n \n    # request.json contains the data submitted for the current.\n    request = json.load(open(run_directory + \"request.json\"))\n \n \n    data = {\n        # The submitted source code\n        \"source\": request[\"source\"],\n        # The list of test cases\n        \"testcases\": request[\"testcase_sources\"],\n        # The submitted language key (Eg: 5 for python)\n        \"lang\": request[\"lang\"],\n        # I'll tell you how to fill this next\n        \"expected_outputs\": request[\"expected_outputs\"],\n        \"outputs\": [],\n        \"signals\": []\n    }\n \n    data[\"signals\"] = map(int, open( \"signal00.sig\" ).read().strip().split())\n    # print \" \".join(str(i) for i in data[\"signals\"])\n    for index in range(len(request[\"testcase_sources\"])):\n        output = open(run_directory + \"output%05d.out\" %(index)).read()\n        data[\"outputs\"].append(output)\n \n \n    # Gathered all the data we could, lets process it\n    score, testcase_status = process(data)\n \n    print score\n    print \" \".join(str(i) for i in testcase_status)\n", 
        "topics": [], 
        "time_left": null, 
        "updated_at": "2017-07-11T15:43:01.000Z", 
        "author_name": "idlecool", 
        "has_started": true, 
        "epoch_starttime": null, 
        "has_all_test_cases_public": false, 
        "difficulty_name": "Hard", 
        "require_unlock": true, 
        "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>Given an array 'D' with n elements: d[0], d[1], ..., d[n-1], you can perform the following two steps on the array.  </p>\n\n<ol>\n<li>Randomly choose two indexes (l, r) with l &lt; r, swap (d[l], d[r])   </li>\n<li>Randomly choose two indexes (l, r) with l &lt; r, reverse (d[l...r]) (both inclusive)   </li>\n</ol>\n\n<p>After you perform the first operation <strong>a</strong> times and the second operation <strong>b</strong> times, you randomly choose two indices <em>l</em> &amp; <em>r</em> with <em>l</em> &lt; <em>r</em> and calculate the S = sum(d[l...r]) (both inclusive).  </p>\n\n<p>Now, you are to find the expected value of S.</p>\n\n<p><strong>Input Format</strong> <br>\nThe first line of the input contains 3 space separated integers - n, a and b. <br>\nThe next line contains n space separated integers which are the elements of the array <em>d</em>.   </p>\n\n<pre><code>n a b\nd[0] d[1] ... d[n-1]\n</code></pre>\n\n<p><strong>Output Format</strong> <br>\nPrint the expected value of S.  </p>\n\n<pre><code>E(S)\n</code></pre>\n\n<p><strong>Constraints</strong>  </p>\n\n<p>2 &lt;= n &lt;= 1000 <br>\n1 &lt;= a &lt;= 10<sup>9</sup> <br>\n1 &lt;= b &lt;= 10  </p>\n\n<p>The answer will be considered correct, if the absolute or relative error doesn't exceed 10<sup>-4</sup>.  </p>\n\n<p><strong>Sample Input #00:</strong></p>\n\n<pre><code>3 1 1 \n1 2 3\n</code></pre>\n\n<p><strong>Sample Output #00:</strong></p>\n\n<pre><code>4.666667\n</code></pre>\n\n<p><strong>Explanation #00:</strong></p>\n\n<p>At step 1): <br>\nYou have three choices: <br>\n1. swap(0, 1), 2 1 3 <br>\n2. swap(0, 2), 3 2 1 <br>\n3. swap(1, 2), 1 3 2  </p>\n\n<p>At step 2): <br>\nFor every result you have three choices for reversing: <br>\n1. [2 1 3] -&gt; [1 2 3] [3 1 2] [2 3 1] <br>\n2. [3 2 1] -&gt; [2 3 1] [1 2 3] [3 1 2] <br>\n3. [1 3 2] -&gt; [3 1 2] [2 3 1] [1 2 3]  </p>\n\n<p>So you have 9 possible arrays with each having a 1/9 probability.</p>\n\n<p>For the last step: <br>\nEach of the 9 arrays will have 3 possible sums with equal probability. For [1 2 3], you can get 1+2, 2+3 and 1+2+3. <br>\nSince there will be 27 outcome for this input, one can calculate the expected value by finding sum of all 27 S and dividing it by 27. </p></div></div></div>", 
        "hacker": {
            "username": "HackerRank", 
            "is_admin": true, 
            "id": 15055, 
            "avatar": "https://hrcdn.net/s3_pub/hr-avatars/4c95f96b-1ff9-46ed-98f8-cb3cb4ed8834/150x150.png"
        }, 
        "id": 625, 
        "leaderboard_out_of_sync": null, 
        "has_ended": false, 
        "languages": [
            "bash", 
            "c", 
            "cpp", 
            "java", 
            "csharp", 
            "php", 
            "ruby", 
            "python", 
            "perl", 
            "haskell", 
            "clojure", 
            "scala", 
            "lua", 
            "go", 
            "javascript", 
            "erlang", 
            "sbcl", 
            "d", 
            "ocaml", 
            "pascal", 
            "python3", 
            "groovy", 
            "objectivec", 
            "fsharp", 
            "visualbasic", 
            "lolcode", 
            "smalltalk", 
            "tcl", 
            "java8", 
            "r", 
            "racket", 
            "rust", 
            "swift", 
            "elixir", 
            "cpp14", 
            "kotlin", 
            "julia"
        ], 
        "is_custom": true, 
        "compile_and_test": true, 
        "default_language": null, 
        "migrated_resource": null, 
        "submit_disabled": false, 
        "expert_solution_status": false, 
        "can_solve": true, 
        "company_id": null, 
        "custom": true, 
        "can_be_viewed": true, 
        "track": {
            "name": "Probability", 
            "taxonomy": 1, 
            "track_slug": "mathematics", 
            "track_id": 22, 
            "track_name": "Mathematics", 
            "id": 53, 
            "rewards_system_enabled": null, 
            "slug": "probability"
        }, 
        "primary_contest": {
            "migration_status": null, 
            "contest_broadcast": null, 
            "hacker_timelimit": null, 
            "notification": null, 
            "qualification_rule_value": null, 
            "leaderboard_backend": null, 
            "expose_stats": null, 
            "updated_at": "2017-03-24T19:11:32.000Z", 
            "custom_leaderboard_column_name": null, 
            "organization_type": null, 
            "ended": true, 
            "epoch_starttime": 1384545600, 
            "timezone": "PST", 
            "disable_forum": null, 
            "id": 429, 
            "primary_track_id": 3, 
            "limited_participants": null, 
            "school_leaderboard_enabled": false, 
            "time_limited_contest": false, 
            "archived": true, 
            "rated": true, 
            "parent_contest_id": null, 
            "leaderboard_out_of_sync_message": null, 
            "leaderboard_type": "country", 
            "tagline": "9 day programming marathon", 
            "effective_epoch_endtime": 1385323200, 
            "show_participants_info": null, 
            "homepage_background_color": "", 
            "organization_name": null, 
            "track": {
                "name": "Algorithms", 
                "id": 3, 
                "priority": 14, 
                "descriptions": "The true test of problem solving: when one realizes that time and memory aren't infinite.\n", 
                "rewards_system_enabled": true, 
                "slug": "algorithms"
            }, 
            "primary_tag_id": 3081, 
            "hide_navigation": null, 
            "show_penalty": null, 
            "effective_time_left": -118033417.09425886, 
            "hidden": null, 
            "homepage": "", 
            "public": true, 
            "testers_contest": null, 
            "description": "<h3>Are you ready to crack 7 more mind-boggling challenges this month?</h3>\n<br>\n\n<br>The contest hosts 7 challenges which are progressively harder to solve. You'll have to 'unlock' each problem to view and solve the next one for a chance to win a cool prize. ", 
            "hide_difficulty": null, 
            "started": true, 
            "time_left": -118033417.09131438, 
            "challenges_count": 7, 
            "qualification_rule_msg": null, 
            "leaderboard_out_of_sync": null, 
            "team_event": false, 
            "disable_fsi": null, 
            "hide_submissions": null, 
            "leaderboard_format": "", 
            "leaderboard_broadcast_message": null, 
            "has_tracks": null, 
            "college_public": null, 
            "endtime": "2013-11-24T20:00:00.000Z", 
            "qualification_rule_type": null, 
            "slug": "nov13", 
            "hide_leaderboard": null, 
            "kind": null, 
            "comment_live_sync": null, 
            "name": "20/20 Hack November", 
            "is_multi_round": false, 
            "created_at": "2013-11-07T19:15:05.000Z", 
            "epoch_endtime": 1385323200, 
            "company_associated_contest": null, 
            "rating_category": "20/20 Hack", 
            "has_codesprint_reg_page": null, 
            "starttime": "2013-11-15T20:00:00.000Z", 
            "is_rating_updated": true, 
            "leaderboard_freeze_time": null, 
            "migration_disabled": null, 
            "template_id": 115
        }, 
        "factor": 100, 
        "is_solution_unlocked": false, 
        "preview": "Expected value of a random sub array?", 
        "is_editorial_available": true, 
        "status": null, 
        "category": "ai", 
        "public_solutions": true, 
        "color": null, 
        "deleted": false, 
        "dynamic": true, 
        "company": null, 
        "moderator_or_support": false, 
        "is_text": false, 
        "solved_score": 1.0, 
        "difficulty_score": "0.5", 
        "difficulty": 0.4226190476190476, 
        "active": true, 
        "show_skeliton": null, 
        "max_score": 100, 
        "slug": "random", 
        "contest_slug": "master", 
        "user_score": 0, 
        "real_dynamic": false, 
        "kind": "code", 
        "player_count": 2, 
        "submitted_hackers_count": 90, 
        "name": "Random", 
        "is_preview_contest": false, 
        "level": 78, 
        "success_ratio": 0.4666666666666667, 
        "total_count": 90, 
        "created_at": "2013-04-26T18:31:55.000Z", 
        "epoch_endtime": null, 
        "judgebot": null, 
        "available_translations": [], 
        "codechecker_handle": "", 
        "countdown_time": 0, 
        "author_avatar": "https://hrcdn.net/s3_pub/hr-avatars/36d17f9f-2fc0-4f5e-b467-d348d3c4c478/150x150.png", 
        "custom_tabs": null, 
        "judgebot_language": null, 
        "custom_case": true, 
        "requirements_description": null, 
        "is_skip_band_challenge": false, 
        "custom_checker_language": "python"
    }
}