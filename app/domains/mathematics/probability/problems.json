{
    "models": [
        {
            "onboarding": null, 
            "solved_count": 881, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:41:50.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Easy", 
            "id": 118, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 5, 
            "is_solution_unlocked": false, 
            "preview": "what's the probability that x + y is less than C?", 
            "is_editorial_available": false, 
            "status": null, 
            "category": "algorithm", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.9, 
            "active": true, 
            "max_score": 5, 
            "slug": "random-number-generator", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Random number generator", 
            "level": 11, 
            "success_ratio": 0.5048710601719197, 
            "total_count": 1745, 
            "created_at": "2013-01-04T20:30:21.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 600, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:46:29.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Hard", 
            "id": 2534, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 20, 
            "is_solution_unlocked": false, 
            "preview": "Help Sherlock in finding the probability.", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.5721649484536082, 
            "active": true, 
            "max_score": 20, 
            "slug": "sherlock-and-probability", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Sherlock and Probability", 
            "level": 11, 
            "success_ratio": 0.5366726296958855, 
            "total_count": 1118, 
            "created_at": "2014-05-17T18:44:48.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 1480, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-06-21T11:37:55.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Medium", 
            "id": 12844, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 5, 
            "is_solution_unlocked": false, 
            "preview": "Problems based on basic statistical distributions.", 
            "is_editorial_available": false, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.7, 
            "active": true, 
            "max_score": 5, 
            "slug": "normal-distribution-1", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Day 4: Normal Distribution #1", 
            "level": 20, 
            "success_ratio": 0.7922912205567452, 
            "total_count": 1868, 
            "created_at": "2015-09-30T10:50:13.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 1232, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-06-21T11:37:55.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Medium", 
            "id": 12845, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 5, 
            "is_solution_unlocked": false, 
            "preview": "Problems based on basic statistical distributions.", 
            "is_editorial_available": false, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.7, 
            "active": true, 
            "max_score": 5, 
            "slug": "normal-distribution-2", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Day 4: Normal Distribution #2", 
            "level": 20, 
            "success_ratio": 0.9404580152671755, 
            "total_count": 1310, 
            "created_at": "2015-09-30T10:52:58.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 1049, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-06-21T11:37:56.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Hard", 
            "id": 12846, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 5, 
            "is_solution_unlocked": false, 
            "preview": "Problems based on basic statistical distributions.", 
            "is_editorial_available": false, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.5, 
            "active": true, 
            "max_score": 5, 
            "slug": "normal-distribution-3", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Normal Distribution #3", 
            "level": 20, 
            "success_ratio": 0.9035314384151594, 
            "total_count": 1161, 
            "created_at": "2015-09-30T10:56:38.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 2240, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:41:21.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Medium", 
            "id": 65, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 50, 
            "is_solution_unlocked": false, 
            "preview": "Rays are being shot from the top of line segments and stop when they hit another line or the Y-axis. Find the expected total length of the Rays when the lines are randomly placed.", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "algorithm", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.6934046345811051, 
            "active": true, 
            "max_score": 50, 
            "slug": "vertical-sticks", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Vertical Sticks", 
            "level": 35, 
            "success_ratio": 0.7397622192866579, 
            "total_count": 3028, 
            "created_at": "2013-01-04T20:26:19.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 4229, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:44:27.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Easy", 
            "id": 1236, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": null, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": null, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 30, 
            "is_solution_unlocked": false, 
            "preview": "Whats the price Isaac has to pay for HackerPhone", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.8406266882766072, 
            "active": true, 
            "max_score": 30, 
            "slug": "bday-gift", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "B'day Gift", 
            "level": 17, 
            "success_ratio": 0.8527929017947167, 
            "total_count": 4959, 
            "created_at": "2013-10-31T15:28:23.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 74, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2016-07-25T18:22:14.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Medium", 
            "id": 22940, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 30, 
            "is_solution_unlocked": false, 
            "preview": "Estimate how large the virus will grow.", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.6, 
            "active": true, 
            "max_score": 30, 
            "slug": "extremely-dangerous-virus", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Extremely Dangerous Virus", 
            "level": 25, 
            "success_ratio": 0.524822695035461, 
            "total_count": 141, 
            "created_at": "2016-07-15T14:17:55.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 1, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2016-12-31T18:34:26.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Medium", 
            "id": 30125, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 40, 
            "is_solution_unlocked": false, 
            "preview": "Find the expected score from an experiment involving matchsticks.\n", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": false, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.6, 
            "active": true, 
            "max_score": 40, 
            "slug": "matchstick-experiment", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "The Matchstick Experiment", 
            "level": 50, 
            "success_ratio": 0.5, 
            "total_count": 2, 
            "created_at": "2016-12-24T23:27:24.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 120, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:41:10.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Medium", 
            "id": 53, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": null, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": null, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 40, 
            "is_solution_unlocked": false, 
            "preview": "You randomly swap two characters in a string until the string becomes a palindrome. What is the expected number of swaps you will make?", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "algorithm", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.668918918918919, 
            "active": true, 
            "max_score": 40, 
            "slug": "palindromes", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Palindromes", 
            "level": 23, 
            "success_ratio": 0.5217391304347826, 
            "total_count": 230, 
            "created_at": "2013-01-04T20:25:24.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 228, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:52:29.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Medium", 
            "id": 21063, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 30, 
            "is_solution_unlocked": false, 
            "preview": "How much time  will it take to sort a sequence?", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.7, 
            "active": true, 
            "max_score": 30, 
            "slug": "lazy-sorting", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Lazy Sorting", 
            "level": 50, 
            "success_ratio": 0.7238095238095238, 
            "total_count": 315, 
            "created_at": "2016-04-28T11:57:03.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 1049, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-06-21T11:37:54.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Medium", 
            "id": 12839, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 5, 
            "is_solution_unlocked": false, 
            "preview": "Problems based on basic statistical distributions.", 
            "is_editorial_available": false, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.7, 
            "active": true, 
            "max_score": 5, 
            "slug": "binomial-distribution-1", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Binomial Distribution #1", 
            "level": 30, 
            "success_ratio": 0.8792958927074602, 
            "total_count": 1193, 
            "created_at": "2015-09-30T09:20:39.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 855, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-06-21T11:37:54.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Hard", 
            "id": 12840, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 5, 
            "is_solution_unlocked": false, 
            "preview": "Problems based on basic statistical distributions.", 
            "is_editorial_available": false, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.5, 
            "active": true, 
            "max_score": 5, 
            "slug": "binomial-distribution-2", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Binomial Distribution #2", 
            "level": 30, 
            "success_ratio": 0.9426681367144433, 
            "total_count": 907, 
            "created_at": "2015-09-30T09:26:40.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 787, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-06-21T11:37:55.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Hard", 
            "id": 12841, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 5, 
            "is_solution_unlocked": false, 
            "preview": "Problems based on basic statistical distributions.", 
            "is_editorial_available": false, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.5, 
            "active": true, 
            "max_score": 5, 
            "slug": "binomial-distribution-3", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Binomial Distribution #3", 
            "level": 30, 
            "success_ratio": 0.971604938271605, 
            "total_count": 810, 
            "created_at": "2015-09-30T09:32:13.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 154, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:47:19.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Medium", 
            "id": 3531, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": null, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": null, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 40, 
            "is_solution_unlocked": false, 
            "preview": "Find the expected value of a function.", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.7, 
            "active": true, 
            "max_score": 40, 
            "slug": "kevin-and-expected-value", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Kevin and Expected Value ", 
            "level": 28, 
            "success_ratio": 0.41847826086956524, 
            "total_count": 368, 
            "created_at": "2014-08-09T06:28:54.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 58, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:47:22.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Medium", 
            "id": 3584, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": null, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": null, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 40, 
            "is_solution_unlocked": false, 
            "preview": "Gary and Flo are playing a game in Jim's restaurant. Can you calculate something for them, while they are eating?", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.7, 
            "active": true, 
            "max_score": 40, 
            "slug": "the-white-lotus-and-caterpillar-game", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "The White Lotus and Caterpillar game", 
            "level": 28, 
            "success_ratio": 0.5979381443298969, 
            "total_count": 97, 
            "created_at": "2014-08-15T10:35:37.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 36, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:42:25.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Expert", 
            "id": 385, 
            "has_ended": false, 
            "is_custom": true, 
            "compile_and_test": true, 
            "checker_program": "import json\nfrom sys import stdin\n\ndef check_inputs (inputs, outputs):\n    scores=[]\n    lis = [ 0 for i in range( len( inputs ) ) ]\n    iterate = -1\n\n    for inps, outps in zip(inputs, outputs):\n        iterate += 1\n        inps = inps.strip()\n        outps = outps.strip()\n        ok = 1\n\n        if  len(inps.split()) != len(outps.split()):\n            ok = 0\n        for inp, outp in zip(inps.split(), outps.split()):\n            if abs(float(inp) - float(outp)) > 1e-3:\n                ok = 0\n        if ok:\n            scores.append(1)\n            lis[iterate] = 1\n        else:\n            scores.append(0)\n            lis[iterate] = 0\n\n    return scores,lis\n\ndef process(data):\n    # Whatever you do, I am not giving any marks!\n    scores,b = check_inputs(data[\"expected_outputs\"], data[\"outputs\"])\n    score = sum(scores)*1.0/len(scores)\n    return score, b\n\nif __name__ ==  '__main__':\n    stdin = stdin.read().split('\\n')\n\n    # Get the run directory for the submission we need to evaluate.\n    run_directory = stdin[-1]\n\n    # request.json contains the data submitted for the current.\n    request = json.load(open(run_directory + \"request.json\"))\n\n    data = {\n        # The submitted source code\n        \"source\": request[\"source\"],\n        # The list of test cases\n        \"testcases\": request[\"testcase_sources\"],\n        # The submitted language key (Eg: 5 for python)\n        \"lang\": request[\"lang\"],\n        # I'll tell you how to fill this next\n        \"expected_outputs\": request[\"expected_outputs\"],\n        \"outputs\": [],\n    }\n\n    for index in range(len(request[\"testcase_sources\"])):\n        output = open(run_directory + \"output%05d.out\" %(index)).read()\n        data[\"outputs\"].append(output)\n\n    # Gathered all the data we could, lets process it\n    score, testcase_status = process(data)\n\n    print score #print overall score?*\n    print \" \".join(str(i) for i in testcase_status) #print if each test case passed\n", 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": true, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 50, 
            "is_solution_unlocked": false, 
            "preview": "Can you help Calvin with his assignments?", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 1.0, 
            "difficulty": 0.17272727272727273, 
            "active": true, 
            "max_score": 50, 
            "slug": "assignment", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 1, 
            "name": "Assignment Problem", 
            "level": 27, 
            "success_ratio": 0.5294117647058824, 
            "total_count": 68, 
            "created_at": "2013-02-21T22:11:19.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": "python"
        }, 
        {
            "onboarding": null, 
            "solved_count": 305, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:41:29.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Hard", 
            "id": 79, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 60, 
            "is_solution_unlocked": false, 
            "preview": "What is the expected value of the days it will take until all the cities are part of the graph?", 
            "is_editorial_available": false, 
            "status": null, 
            "category": "algorithm", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.49056603773584906, 
            "active": true, 
            "max_score": 60, 
            "slug": "connect-the-country", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Connect the country", 
            "level": 41, 
            "success_ratio": 0.4677914110429448, 
            "total_count": 652, 
            "created_at": "2013-01-04T20:27:15.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 52, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:46:17.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Hard", 
            "id": 2461, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": null, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": null, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 60, 
            "is_solution_unlocked": false, 
            "preview": "Find the probability and expectation value of the given problem", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.4657534246575342, 
            "active": true, 
            "max_score": 60, 
            "slug": "rirb", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Random Integers Random Bits", 
            "level": 41, 
            "success_ratio": 0.45614035087719296, 
            "total_count": 114, 
            "created_at": "2014-04-29T09:43:01.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 6, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:51:39.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Medium", 
            "id": 15897, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 60, 
            "is_solution_unlocked": false, 
            "preview": "Compute the expected value and variance statistics for N dice.", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.7, 
            "active": true, 
            "max_score": 60, 
            "slug": "dice-stats", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Dice Stats", 
            "level": 50, 
            "success_ratio": 0.15, 
            "total_count": 40, 
            "created_at": "2016-01-09T20:36:02.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 1, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-01-02T17:05:38.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Medium", 
            "id": 22913, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": "import json\nfrom sys import stdin\n\ndef check_inputs (inputs, outputs, signals ):\n    valid = []\n\n    total_count = 0.0\n    total_correct = 0.0\n    iter_signal = 0\n    for inps, outps in zip(inputs, outputs):\n        inps = inps.strip()\n        outps = outps.strip()\n\n        count = len(inps.strip().split())\n        correct = 0\n\n        total_count += 1\n\n        if signals[iter_signal] != 0 or len(inps.split()) != len(outps.split()):\n            valid.append(0)\n        else:\n            for inp, outp in zip(inps.split(), outps.split()):\n                if abs(float(inp)-float(outp))<0.001:\n                    correct += 1\n\n            if correct == count:\n                valid.append(1)\n                total_correct += 1\n            else:\n                valid.append(0)\n\n            iter_signal += 1\n\n    return valid, total_correct/total_count\n\ndef process(data):\n    # Whatever you do, I am not giving any marks!\n    valid, score = check_inputs(data[\"expected_outputs\"], data[\"outputs\"], data[\"signals\"])\n    if score <= 0:\n        score = 0\n    return score, valid\n\nif __name__ ==  '__main__':\n    stdin = stdin.read().split('\\n')\n\n    # Get the run directory for the submission we need to evaluate. I know,\n    # hackish right?\n\n    run_directory = stdin[1]\n\n    # request.json contains the data submitted for the current.\n    request = json.load(open(run_directory + \"request.json\"))\n\n\n    data = {\n        # The submitted source code\n        \"source\": request[\"source\"],\n\n        # The list of test cases\n        \"testcases\": request[\"testcase_sources\"],\n\n        # The submitted language key (Eg: 5 for python)\n        \"lang\": request[\"lang\"],\n\n        # I'll tell you how to fill this next\n        \"expected_outputs\": request[\"expected_outputs\"],\n\n        \"outputs\": [],\n\n        \"signals\":[]\n    }\n\n    data[\"signals\"] = map( int, open( \"signal00.sig\" ).read().strip().split() )\n    for index in range(len(request[\"testcase_sources\"])):\n        output = open(run_directory + \"output%05d.out\" %(index)).read()\n        data[\"outputs\"].append(output)\n\n\n    # Gathered all the data we could, lets process it\n    score, testcase_status = process(data)\n\n    print score\n    print \" \".join(str(i) for i in testcase_status)\n", 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 60, 
            "is_solution_unlocked": false, 
            "preview": "Calculate the magic number!", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.99999999, 
            "difficulty": 0.6, 
            "active": true, 
            "max_score": 60, 
            "slug": "james-tree", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Magic Number Tree", 
            "level": 50, 
            "success_ratio": 1.0, 
            "total_count": 1, 
            "created_at": "2016-07-14T21:34:31.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": "python"
        }, 
        {
            "onboarding": null, 
            "solved_count": 8, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:50:12.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Hard", 
            "id": 9206, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 80, 
            "is_solution_unlocked": false, 
            "preview": "Find the expected score from a random number generator. ", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.5, 
            "active": true, 
            "max_score": 80, 
            "slug": "random-number-generator-1", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Random Number Generator", 
            "level": 50, 
            "success_ratio": 0.34782608695652173, 
            "total_count": 23, 
            "created_at": "2015-07-14T19:19:29.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 279, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:41:45.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Hard", 
            "id": 109, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": null, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": null, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 80, 
            "is_solution_unlocked": false, 
            "preview": "Zombies randomly appear in a city and begin walking around randomly. Determine the expected value of the most popular zombie junctions.", 
            "is_editorial_available": false, 
            "status": null, 
            "category": "algorithm", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.4757630161579892, 
            "active": true, 
            "max_score": 80, 
            "slug": "zombie-march", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Zombie March***", 
            "level": 62, 
            "success_ratio": 0.4929328621908127, 
            "total_count": 566, 
            "created_at": "2013-01-04T20:29:43.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 4, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:52:05.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Hard", 
            "id": 17820, 
            "has_ended": false, 
            "is_custom": true, 
            "compile_and_test": true, 
            "checker_program": "// Bear and Blind Sorting, checker, Errichto\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long double ld;\nconst int TESTS = 13; // including three samples\n\nconst int nax = 32;\nld p[nax][nax][nax*nax], ev[nax][nax][nax*nax];\nld p_finish_today, ev_finish_today;\nld p_start_again, ev_start_again;\n\nbool isOk(int n, int m, ld r) {\n\t// read from the stdin\n\tfor(int i = 0; i < nax; ++i) for(int j = 0; j < nax; ++j)\n\t\tfor(int k = 0; k < nax * nax; ++k)\n\t\t\tp[i][j][k] = ev[i][j][k] = 0;\n\tp_finish_today = ev_finish_today = p_start_again = ev_start_again = 0;\n\tp[0][0][0] = 1;\n\tfor(int i = 0; i <= n; ++i)\n\tfor(int j = 0; j <= m; ++j)\n\tfor(int k = 0; k <= i * j; ++k) {\n\t\tld & my_p = p[i][j][k];\n\t\tld & my_ev = ev[i][j][k];\n\t\tif(i == n && j == m) {\n\t\t\tp_finish_today += my_p;\n\t\t\tev_finish_today += my_ev;\n\t\t\tcontinue;\n\t\t}\n\t\tld omega = n * m;\n\t\tld x;\n\t\t\n\t\t// staying in the same place\n\t\tx = k * (1 - r) / omega;\n\t\tmy_ev += 1 / (1 - x) * my_p;\n\t\tomega -= k * (1 - r); // now we assume that a new dance will change sth\n\t\t\n\t\t// starting a new day\n\t\tx = k * r / omega;\n\t\tp_start_again += x * my_p;\n\t\tev_start_again += x * (my_ev - my_p);\n\t\t\n\t\t// new boy\n\t\tx = (n-i) * j / omega;\n\t\tp[i+1][j][k+1] += x * my_p;\n\t\tev[i+1][j][k+1] += x * my_ev;\n\t\t\n\t\t// new girl\n\t\tx = i * (m-j) / omega;\n\t\tp[i][j+1][k+1] += x * my_p;\n\t\tev[i][j+1][k+1] += x * my_ev;\n\t\t\n\t\t// new both\n\t\tx = (n-i) * (m-j) / omega;\n\t\tp[i+1][j+1][k+1] += x * my_p;\n\t\tev[i+1][j+1][k+1] += x * my_ev;\n\t\t\n\t\t// new pair with visited boy and visited girl\n\t\tx = (i * j - k) / omega;\n\t\tp[i][j][k+1] += x * my_p;\n\t\tev[i][j][k+1] += x * my_ev;\n\t}\n\tld correct = ev_finish_today / p_finish_today + ev_start_again / p_finish_today;\n\tdouble his;\n\tscanf(\"%lf\", &his);\n\tconst ld eps = 1e-6;\n\treturn abs(his - correct) <= eps * max(correct, 1.0L);\n}\n\nint main() {\n\tsrand(42);\n\tchar dr[200];\n\tscanf(\"%s\", dr);\n\tvector<bool> scores;\n\tfor(int t = 0; t < TESTS; ++t) {\n\t\tchar input[100], output[100];\n\t\tsnprintf(input, sizeof(input), \"%sinput%05d.in\", dr, t);\n\t\tsnprintf(output, sizeof(output), \"%soutput%05d.out\", dr, t);\n\t\t\n\t\tfreopen(input, \"r\", stdin);\n\t\tint n, m;\n\t\tdouble r;\n\t\tscanf(\"%d%d%lf\", &n, &m, &r);\n\t\t\n\t\tfreopen(output, \"r\", stdin);\n\t\tscores.push_back(isOk(n, m, r));\n\t}\n\tint total = 0;\n\tfor(int i = 3; i < (int) scores.size(); ++i)\n\t\ttotal += scores[i];\n\tprintf(\"%lf\\n\", (double) total / (TESTS - 3));\n\tfor(int rep = 0; rep < 2; ++rep)\n\t\tfor(int i = 0; i < (int) scores.size(); ++i) {\n\t\t\tprintf(\"%d\", (int) scores[i]);\n\t\t\tif(i == (int) scores.size() - 1) puts(\"\");\n\t\t\telse printf(\" \");\n\t\t}\n\treturn 0;\n}\n", 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": true, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 100, 
            "is_solution_unlocked": false, 
            "preview": "n boys, m girls, the expected value of the number of dances.", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.5, 
            "active": true, 
            "max_score": 100, 
            "slug": "bear-and-dancing", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Bear and Dancing", 
            "level": 65, 
            "success_ratio": 0.5, 
            "total_count": 8, 
            "created_at": "2016-02-23T14:17:53.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": "cpp14"
        }, 
        {
            "onboarding": null, 
            "solved_count": 104, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:46:00.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Advanced", 
            "id": 2294, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 120, 
            "is_solution_unlocked": false, 
            "preview": "Answer the queries about the number of distinct substrings of a string.", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.325, 
            "active": true, 
            "max_score": 120, 
            "slug": "randomness", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Randomness", 
            "level": 89, 
            "success_ratio": 0.3333333333333333, 
            "total_count": 312, 
            "created_at": "2014-03-31T23:03:48.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 42, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:43:01.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Hard", 
            "id": 625, 
            "has_ended": false, 
            "is_custom": true, 
            "compile_and_test": true, 
            "checker_program": "\n\nimport json\nimport difflib\nimport math\nfrom sys import stdin\n\n \ndef check_inputs (inputs, outputs, signals):\n    scores = []\n    valid = []\n \n    total_count = len(inputs)\n    total_score = 0.0\n    iter_signal = 0\n    for inps, outps in zip(inputs, outputs):\n        inps = inps.strip()\n        outps = outps.strip()\n\n        if signals[iter_signal] != 0:\n            valid.append(0)\n        else:\n            diff = abs(float(inps) - float(outps))\n            if (diff <= 1e-4 or abs(diff / float(inps)) <= 1e-4):\n                valid.append(1)\n                total_score += 1.0\n            else:\n                valid.append(0)\n        iter_signal += 1\n\n    return valid, total_score/total_count\n \ndef process(data):\n    # Whatever you do, I am not giving any marks!\n    valid, score = check_inputs(data[\"expected_outputs\"], data[\"outputs\"], data[\"signals\"])\n    if score <= 0:\n        score = 0\n    return score, valid\n \nif __name__ ==  '__main__':\n    stdin = stdin.read().split('\\n')\n \n    # Get the run directory for the submission we need to evaluate. I know,\n    # hackish right?\n \n    run_directory = stdin[0]\n \n    # request.json contains the data submitted for the current.\n    request = json.load(open(run_directory + \"request.json\"))\n \n \n    data = {\n        # The submitted source code\n        \"source\": request[\"source\"],\n        # The list of test cases\n        \"testcases\": request[\"testcase_sources\"],\n        # The submitted language key (Eg: 5 for python)\n        \"lang\": request[\"lang\"],\n        # I'll tell you how to fill this next\n        \"expected_outputs\": request[\"expected_outputs\"],\n        \"outputs\": [],\n        \"signals\": []\n    }\n \n    data[\"signals\"] = map(int, open( \"signal00.sig\" ).read().strip().split())\n    # print \" \".join(str(i) for i in data[\"signals\"])\n    for index in range(len(request[\"testcase_sources\"])):\n        output = open(run_directory + \"output%05d.out\" %(index)).read()\n        data[\"outputs\"].append(output)\n \n \n    # Gathered all the data we could, lets process it\n    score, testcase_status = process(data)\n \n    print score\n    print \" \".join(str(i) for i in testcase_status)\n", 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": true, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 100, 
            "is_solution_unlocked": false, 
            "preview": "Expected value of a random sub array?", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 1.0, 
            "difficulty": 0.4226190476190476, 
            "active": true, 
            "max_score": 100, 
            "slug": "random", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Random", 
            "level": 78, 
            "success_ratio": 0.4666666666666667, 
            "total_count": 90, 
            "created_at": "2013-04-26T18:31:55.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": "python"
        }, 
        {
            "onboarding": null, 
            "solved_count": 22, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:45:19.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Hard", 
            "id": 1857, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": null, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": null, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 100, 
            "is_solution_unlocked": false, 
            "preview": "Expected value of Seyaua's function", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.5862068965517241, 
            "active": true, 
            "max_score": 100, 
            "slug": "mathematical-expectation", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Mathematical Expectation", 
            "level": 78, 
            "success_ratio": 0.3728813559322034, 
            "total_count": 59, 
            "created_at": "2014-02-06T20:29:14.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 27, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:47:02.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Medium", 
            "id": 3274, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": null, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": null, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 120, 
            "is_solution_unlocked": false, 
            "preview": "Yet another random problem", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Probability", 
                "taxonomy": 1, 
                "track_slug": "mathematics", 
                "track_id": 22, 
                "track_name": "Mathematics", 
                "id": 53, 
                "rewards_system_enabled": null, 
                "slug": "probability"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.6285714285714286, 
            "active": true, 
            "max_score": 120, 
            "slug": "colorful-polygon", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Colorful Polygon", 
            "level": 81, 
            "success_ratio": 0.54, 
            "total_count": 50, 
            "created_at": "2014-07-14T17:39:38.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }
    ], 
    "tutorial_signed_up": true, 
    "current_track": {
        "name": "Mathematics", 
        "id": 22, 
        "priority": 12, 
        "descriptions": "Without mathematics, there's nothing you can do. Everything around you is mathematics. Everything around you is numbers.", 
        "rewards_system_enabled": null, 
        "slug": "mathematics"
    }, 
    "total": 28
}