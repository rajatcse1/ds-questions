{
    "status": true, 
    "model": {
        "onboarding": null, 
        "tagAncestry": [], 
        "solved_count": 12337, 
        "leaderboard_out_of_sync_message": null, 
        "public_test_cases": true, 
        "checker_program": null, 
        "topics": [], 
        "time_left": null, 
        "updated_at": "2017-07-11T15:44:21.000Z", 
        "author_name": "shashank21j", 
        "has_started": true, 
        "epoch_starttime": null, 
        "has_all_test_cases_public": false, 
        "difficulty_name": "Easy", 
        "require_unlock": true, 
        "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>Gandalf is travelling from <strong>Rohan</strong> to <strong>Rivendell</strong> to meet Frodo but there is no direct route from <strong>Rohan</strong> (T<sub>1</sub>) to <strong>Rivendell</strong> (T<sub>n</sub>). </p>\n\n<p>But there are towns T<sub>2</sub>,T<sub>3</sub>,T<sub>4</sub>...T<sub>n-1</sub> such that there are N<sub>1</sub> routes from Town T<sub>1</sub> to T<sub>2</sub>, and in general, N<sub>i</sub> routes from T<sub>i</sub> to T<sub>i+1</sub> for i=1 to n-1 and 0 routes for any other T<sub>i</sub> to T<sub>j</sub>  for  j \u2260 i+1 </p>\n\n<p>Find the total number of routes Gandalf can take to reach Rivendell from Rohan. </p>\n\n<p><strong>Note</strong> <br>\nGandalf has to pass all the towns T<sub>i</sub> for i=1 to n-1 in numerical order to reach T<sub>n</sub>. <br>\nFor each T<sub>i</sub> , T<sub>i+1</sub> there are only N<sub>i</sub> distinct routes Gandalf can take.</p>\n\n<p><strong>Input Format</strong> <br>\nThe first line contains an integer T, T test-cases follow. <br>\nEach test-case has 2 lines. The first line contains an integer N (the number of towns). <br>\nThe second line contains N - 1 space separated integers where the i<sup>th</sup> integer denotes the number of routes, N<sub>i</sub>, from the town T<sub>i</sub> to T<sub>i+1</sub>  </p>\n\n<p><strong>Output Format</strong> <br>\nTotal number of routes from T<sub>1</sub> to T<sub>n</sub> modulo 1234567 <br>\n<a href=\"http://en.wikipedia.org/wiki/Modular_arithmetic\">http://en.wikipedia.org/wiki/Modular_arithmetic</a></p>\n\n<p><strong>Constraints</strong> <br>\n1 &lt;= T&lt;=1000<br>\n2&lt; N &lt;=100<br>\n1 &lt;= N<sub>i</sub> &lt;=1000</p>\n\n<p><strong>Sample Input</strong>  </p>\n\n<pre><code>2\n3\n1 3\n4\n2 2 2\n</code></pre>\n\n<p><strong>Sample Output</strong>  </p>\n\n<pre><code>3\n8\n</code></pre>\n\n<p><strong>Explanation</strong> <br>\nCase 1: 1 route from T<sub>1</sub> to T<sub>2</sub>, 3 routes from T<sub>2</sub> to T<sub>3</sub>, hence only 3 routes. <br>\nCase 2: There are 2 routes from each city to the next, at each city, Gandalf has 2 choices to make, hence 2 * 2 * 2 = 8. </p></div></div></div>", 
        "hacker": {
            "username": "HackerRank", 
            "is_admin": true, 
            "id": 15055, 
            "avatar": "https://hrcdn.net/s3_pub/hr-avatars/4c95f96b-1ff9-46ed-98f8-cb3cb4ed8834/150x150.png"
        }, 
        "id": 1158, 
        "leaderboard_out_of_sync": null, 
        "has_ended": false, 
        "languages": [
            "bash", 
            "c", 
            "cpp", 
            "java", 
            "csharp", 
            "php", 
            "ruby", 
            "python", 
            "perl", 
            "haskell", 
            "clojure", 
            "scala", 
            "lua", 
            "go", 
            "javascript", 
            "erlang", 
            "sbcl", 
            "d", 
            "ocaml", 
            "pascal", 
            "python3", 
            "groovy", 
            "objectivec", 
            "fsharp", 
            "visualbasic", 
            "lolcode", 
            "smalltalk", 
            "tcl", 
            "java8", 
            "r", 
            "racket", 
            "rust", 
            "swift", 
            "elixir", 
            "cpp14", 
            "kotlin", 
            "julia"
        ], 
        "is_custom": false, 
        "compile_and_test": true, 
        "default_language": null, 
        "migrated_resource": null, 
        "submit_disabled": false, 
        "expert_solution_status": false, 
        "can_solve": true, 
        "company_id": null, 
        "custom": false, 
        "can_be_viewed": true, 
        "track": {
            "name": "Fundamentals", 
            "taxonomy": 1, 
            "track_slug": "mathematics", 
            "track_id": 22, 
            "track_name": "Mathematics", 
            "id": 109, 
            "rewards_system_enabled": null, 
            "slug": "fundamentals"
        }, 
        "primary_contest": null, 
        "factor": 10, 
        "is_solution_unlocked": false, 
        "preview": "Find the Number of ways to in which one can travel from one town to another.", 
        "is_editorial_available": true, 
        "status": null, 
        "category": "ai", 
        "public_solutions": true, 
        "color": null, 
        "deleted": false, 
        "dynamic": true, 
        "company": null, 
        "moderator_or_support": false, 
        "is_text": false, 
        "solved_score": 0.5, 
        "difficulty_score": "0.122", 
        "difficulty": 0.8782187215995153, 
        "active": true, 
        "show_skeliton": null, 
        "max_score": 10, 
        "slug": "connecting-towns", 
        "contest_slug": "master", 
        "user_score": 0, 
        "real_dynamic": false, 
        "kind": "code", 
        "player_count": 2, 
        "submitted_hackers_count": 14278, 
        "name": "Connecting Towns", 
        "is_preview_contest": false, 
        "level": 8, 
        "success_ratio": 0.8640565905589018, 
        "total_count": 14278, 
        "created_at": "2013-10-23T14:22:58.000Z", 
        "epoch_endtime": null, 
        "judgebot": null, 
        "available_translations": [], 
        "codechecker_handle": "", 
        "countdown_time": 0, 
        "author_avatar": "https://hrcdn.net/s3_pub/hr-avatars/e013db60-c4d5-4fe3-a322-82ab33c96a8c/150x150.png", 
        "custom_tabs": null, 
        "judgebot_language": null, 
        "custom_case": true, 
        "requirements_description": null, 
        "is_skip_band_challenge": false, 
        "custom_checker_language": null
    }
}