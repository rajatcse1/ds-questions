{
    "status": true, 
    "model": {
        "onboarding": null, 
        "tagAncestry": [], 
        "solved_count": 2513, 
        "leaderboard_out_of_sync_message": null, 
        "public_test_cases": true, 
        "checker_program": null, 
        "topics": [], 
        "time_left": null, 
        "updated_at": "2017-07-11T15:46:41.000Z", 
        "author_name": "devuy11", 
        "has_started": true, 
        "epoch_starttime": null, 
        "has_all_test_cases_public": false, 
        "difficulty_name": "Hard", 
        "require_unlock": true, 
        "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>You are given an array <em>A</em> of size <em>N</em>. You are also given an integer <em>Q</em>. Can you figure out the answer to each of the <em>Q</em> queries?</p>\n\n<p>Each query contains 2 integers x and y, and you need to find whether the value find(x,y) is Odd or Even:</p>\n\n<pre><code>find(int x,int y)\n{\n    if(x&gt;y) return 1;\n    ans = pow(A[x],find(x+1,y))\n    return ans\n}\n</code></pre>\n\n<p>Note : pow(a,b) = <em>a<sup>b</sup></em>.</p>\n\n<p><strong>Input Format</strong> <br>\nThe first line of the input contains an integer <em>N</em>. \nThe next line contains <em>N</em> space separated non-negative integers(whole numbers less than or equal to 9). <br>\nThe line after that contains a positive integer, <em>Q</em> , the denotes the number of queries to follow.\n<em>Q</em> lines follow, each line contains two positive integer <em>x</em> and <em>y</em> separated by a single space.   </p>\n\n<p><strong>Output Format</strong> <br>\nFor each query, display 'Even' if the value returned is Even, otherwise display 'Odd'.</p>\n\n<p><strong>Constraints</strong> <br>\n2 \u2264 <em>N</em> \u2264 10<sup>5</sup> <br>\n2 \u2264 <em>Q</em> \u2264 10<sup>5</sup> <br>\n1 \u2264 <em>x,y</em> \u2264 <em>N</em> <br>\n<em>x</em> \u2264 <em>y</em></p>\n\n<p>Array is 1-indexed.  </p>\n\n<p><em>No 2 consecutive entries in the array will be zero.</em></p>\n\n<p><strong>Sample Input</strong> </p>\n\n<pre><code>3\n3 2 7\n2\n1 2\n2 3\n</code></pre>\n\n<p><strong>Sample Output</strong> </p>\n\n<pre><code>Odd\nEven\n</code></pre>\n\n<p><strong>Explanation</strong></p>\n\n<p>find(1,2) = 9, which is Odd <br>\nfind(2,3) = 128, which is even  </p></div></div></div>", 
        "hacker": {
            "username": "HackerRank", 
            "is_admin": true, 
            "id": 15055, 
            "avatar": "https://hrcdn.net/s3_pub/hr-avatars/4c95f96b-1ff9-46ed-98f8-cb3cb4ed8834/150x150.png"
        }, 
        "id": 2581, 
        "leaderboard_out_of_sync": null, 
        "has_ended": false, 
        "languages": [
            "bash", 
            "c", 
            "cpp", 
            "java", 
            "csharp", 
            "php", 
            "ruby", 
            "python", 
            "perl", 
            "haskell", 
            "clojure", 
            "scala", 
            "lua", 
            "go", 
            "javascript", 
            "erlang", 
            "sbcl", 
            "d", 
            "ocaml", 
            "pascal", 
            "python3", 
            "groovy", 
            "objectivec", 
            "fsharp", 
            "visualbasic", 
            "lolcode", 
            "smalltalk", 
            "tcl", 
            "java8", 
            "r", 
            "racket", 
            "rust", 
            "swift", 
            "elixir", 
            "cpp14", 
            "kotlin", 
            "julia"
        ], 
        "is_custom": false, 
        "compile_and_test": true, 
        "default_language": null, 
        "migrated_resource": null, 
        "submit_disabled": null, 
        "expert_solution_status": false, 
        "can_solve": true, 
        "company_id": null, 
        "custom": null, 
        "can_be_viewed": true, 
        "track": {
            "name": "Fundamentals", 
            "taxonomy": 1, 
            "track_slug": "mathematics", 
            "track_id": 22, 
            "track_name": "Mathematics", 
            "id": 109, 
            "rewards_system_enabled": null, 
            "slug": "fundamentals"
        }, 
        "primary_contest": {
            "migration_status": null, 
            "contest_broadcast": null, 
            "hacker_timelimit": null, 
            "notification": null, 
            "qualification_rule_value": null, 
            "leaderboard_backend": null, 
            "expose_stats": null, 
            "updated_at": "2016-08-07T15:02:49.000Z", 
            "custom_leaderboard_column_name": null, 
            "organization_type": null, 
            "ended": true, 
            "epoch_starttime": 1402934400, 
            "timezone": "PST", 
            "disable_forum": null, 
            "id": 945, 
            "primary_track_id": 3, 
            "limited_participants": null, 
            "school_leaderboard_enabled": false, 
            "time_limited_contest": false, 
            "archived": true, 
            "rated": null, 
            "parent_contest_id": null, 
            "leaderboard_out_of_sync_message": null, 
            "leaderboard_type": "country", 
            "tagline": "1 challenge every day! ", 
            "effective_epoch_endtime": 1403539200, 
            "show_participants_info": null, 
            "homepage_background_color": "", 
            "organization_name": null, 
            "track": {
                "name": "Algorithms", 
                "id": 3, 
                "priority": 14, 
                "descriptions": "The true test of problem solving: when one realizes that time and memory aren't infinite.\n", 
                "rewards_system_enabled": true, 
                "slug": "algorithms"
            }, 
            "primary_tag_id": 3081, 
            "hide_navigation": null, 
            "show_penalty": null, 
            "effective_time_left": -99816673.36454944, 
            "hidden": null, 
            "homepage": "", 
            "public": true, 
            "testers_contest": null, 
            "description": "Welcome to the Week 5 of our daily challenges! Each day you'll get to solve a challenge whose difficulty level increases as the week progresses! <br />\n\nTo solve the final challenge, you're given an entire weekend . <br />\n\nThere are 5 challenges in total!!  <br /> <br />\n\nTie-breaking rule is a little different for this contest. For each challenge, we calculate your <em>solved time, t</em>  <br />\n\n<em> t = submit - open </em> <br />\n\nwhere <em>submit</em> is the time you submitted the solution, and <em>open</em> is the time you opened the challenge. This way, you do not have to worry about solving the challenge as soon as it becomes available. <br />\n\nRead more about this contest  <a href=\"/blog/daily-challenge\">here</a>.", 
            "hide_difficulty": null, 
            "started": true, 
            "time_left": -99816673.36252855, 
            "challenges_count": 5, 
            "qualification_rule_msg": null, 
            "leaderboard_out_of_sync": null, 
            "team_event": false, 
            "disable_fsi": null, 
            "hide_submissions": null, 
            "leaderboard_format": "", 
            "leaderboard_broadcast_message": null, 
            "has_tracks": null, 
            "college_public": null, 
            "endtime": "2014-06-23T16:00:00.000Z", 
            "qualification_rule_type": null, 
            "slug": "w5", 
            "hide_leaderboard": null, 
            "kind": "weekly", 
            "comment_live_sync": null, 
            "name": "Weekly Challenges - Week 5", 
            "is_multi_round": false, 
            "created_at": "2014-05-26T10:19:42.000Z", 
            "epoch_endtime": 1403539200, 
            "company_associated_contest": null, 
            "rating_category": "Algorithms", 
            "has_codesprint_reg_page": null, 
            "starttime": "2014-06-16T16:00:00.000Z", 
            "is_rating_updated": true, 
            "leaderboard_freeze_time": null, 
            "migration_disabled": null, 
            "template_id": 103
        }, 
        "factor": 30, 
        "is_solution_unlocked": false, 
        "preview": "Is the number odd or even?", 
        "is_editorial_available": true, 
        "status": null, 
        "category": "ai", 
        "public_solutions": true, 
        "color": null, 
        "deleted": false, 
        "dynamic": true, 
        "company": null, 
        "moderator_or_support": false, 
        "is_text": false, 
        "solved_score": 1.0, 
        "difficulty_score": "0.451", 
        "difficulty": 0.5514705882352942, 
        "active": true, 
        "show_skeliton": null, 
        "max_score": 30, 
        "slug": "even-odd-query", 
        "contest_slug": "master", 
        "user_score": 0, 
        "real_dynamic": false, 
        "kind": "code", 
        "player_count": 2, 
        "submitted_hackers_count": 4451, 
        "name": "Even Odd Query", 
        "is_preview_contest": false, 
        "level": 15, 
        "success_ratio": 0.5645922264659627, 
        "total_count": 4451, 
        "created_at": "2014-06-08T11:37:31.000Z", 
        "epoch_endtime": null, 
        "judgebot": null, 
        "available_translations": [
            {
                "body": "\n\u7ed9\u5b9a\u4e00\u4e2a\u5927\u5c0f\u4e3aN\u7684\u6570\u7ec4A\uff0c\u548c\u4e00\u4e2a\u6574\u6570Q\uff0c\u4f60\u80fd\u786e\u8ba4Q\u4e2a\u67e5\u8be2\u4e2d\u6bcf\u4e2a\u7684\u7b54\u6848\u4e48\uff1f\n\u6bcf\u4e2a\u67e5\u8be2\u5305\u542b\u4e24\u4e2a\u6574\u6570x\u548cy\uff0c\u4f60\u9700\u8981\u7ed9\u51fafind(x,y)\u662f\u5947\u6570\u8fd8\u662f\u5076\u6570\uff1a\n\n    find(int x,int y)\n\t{\n        if(x>y)\treturn 1;\n        ans = pow(A[x],find(x+1,y))\n        return ans\n    }\n    \n\u6ce8\u610f : pow(a,b) = *a<sup>b</sup>*.\n\n**\u8f93\u5165\u683c\u5f0f**  \n\u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570N\u3002\n\u63a5\u4e0b\u6765\u7684\u4e00\u884c\u5305\u542bN\u4e2a\u7a7a\u767d\u5206\u9694\u7684\u975e\u8d1f\u6574\u6570\uff08\u5c0f\u4e8e9\uff09\u3002 \n\u518d\u63a5\u4e0b\u6765\u7684\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6b63\u6574\u6570Q\uff0c\u8868\u793a\u5904\u7406\u67e5\u8be2\u7684\u4e2a\u6570\u3002\n\u540e\u8ddfQ\u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e24\u4e2a\u7a7a\u683c\u5206\u9694\u7684\u6574\u6570x\u548cy\u3002\n   \n\n**\u8f93\u51fa\u683c\u5f0f**  \n\u5bf9\u6bcf\u4e2a\u67e5\u8be2\uff0c\u5982\u679c\u7ed3\u679c\u662f\u5076\u6570\uff0c\u8f93\u51fa'Even\u2019\uff0c \u5426\u5219\u8f93\u51fa\u2019Odd\u2019\u3002\n\n**\u7ea6\u675f\u6761\u4ef6**  \n2 &le; *N* &le; 10<sup>5</sup>  \n2 &le; *Q* &le; 10<sup>5</sup>  \n1 &le; *x,y* &le; *N*  \n*x* &le; *y*\n\n*\u6570\u7ec4\u4e2d\u6ca1\u6709\u4e24\u4e2a\u76f8\u90bb\u7684\u5143\u7d20\u5168\u4e3a0*\n\n**\u8f93\u5165\u6837\u4f8b** \n\n    3\n    3 2 7\n    2\n    1 2\n    2 3\n\n**\u8f93\u51fa\u6837\u4f8b** \n\n    Odd\n    Even\n\n**\u89e3\u91ca**\n\nfind(1,2) = 9\uff0c \u662f\u5947\u6570  \nfind(2,3) = 128\uff0c \u662f\u5076\u6570  \n", 
                "problem_statement_fields": {
                    "sample_output": " ", 
                    "problem_statement": "\n\u7ed9\u5b9a\u4e00\u4e2a\u5927\u5c0f\u4e3aN\u7684\u6570\u7ec4A\uff0c\u548c\u4e00\u4e2a\u6574\u6570Q\uff0c\u4f60\u80fd\u786e\u8ba4Q\u4e2a\u67e5\u8be2\u4e2d\u6bcf\u4e2a\u7684\u7b54\u6848\u4e48\uff1f\n\u6bcf\u4e2a\u67e5\u8be2\u5305\u542b\u4e24\u4e2a\u6574\u6570x\u548cy\uff0c\u4f60\u9700\u8981\u7ed9\u51fafind(x,y)\u662f\u5947\u6570\u8fd8\u662f\u5076\u6570\uff1a\n\n    find(int x,int y)\n\t{\n        if(x>y)\treturn 1;\n        ans = pow(A[x],find(x+1,y))\n        return ans\n    }\n    \n\u6ce8\u610f : pow(a,b) = *a<sup>b</sup>*.\n\n**\u8f93\u5165\u683c\u5f0f**  \n\u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570N\u3002\n\u63a5\u4e0b\u6765\u7684\u4e00\u884c\u5305\u542bN\u4e2a\u7a7a\u767d\u5206\u9694\u7684\u975e\u8d1f\u6574\u6570\uff08\u5c0f\u4e8e9\uff09\u3002 \n\u518d\u63a5\u4e0b\u6765\u7684\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6b63\u6574\u6570Q\uff0c\u8868\u793a\u5904\u7406\u67e5\u8be2\u7684\u4e2a\u6570\u3002\n\u540e\u8ddfQ\u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e24\u4e2a\u7a7a\u683c\u5206\u9694\u7684\u6574\u6570x\u548cy\u3002\n   \n\n**\u8f93\u51fa\u683c\u5f0f**  \n\u5bf9\u6bcf\u4e2a\u67e5\u8be2\uff0c\u5982\u679c\u7ed3\u679c\u662f\u5076\u6570\uff0c\u8f93\u51fa'Even\u2019\uff0c \u5426\u5219\u8f93\u51fa\u2019Odd\u2019\u3002\n\n**\u7ea6\u675f\u6761\u4ef6**  \n2 &le; *N* &le; 10<sup>5</sup>  \n2 &le; *Q* &le; 10<sup>5</sup>  \n1 &le; *x,y* &le; *N*  \n*x* &le; *y*\n\n*\u6570\u7ec4\u4e2d\u6ca1\u6709\u4e24\u4e2a\u76f8\u90bb\u7684\u5143\u7d20\u5168\u4e3a0*\n\n**\u8f93\u5165\u6837\u4f8b** \n\n    3\n    3 2 7\n    2\n    1 2\n    2 3\n\n**\u8f93\u51fa\u6837\u4f8b** \n\n    Odd\n    Even\n\n**\u89e3\u91ca**\n\nfind(1,2) = 9\uff0c \u662f\u5947\u6570  \nfind(2,3) = 128\uff0c \u662f\u5076\u6570  \n", 
                    "input_format": " ", 
                    "explanation": " ", 
                    "sample_input": " ", 
                    "output_format": " "
                }, 
                "name": null, 
                "language": "Chinese", 
                "challenge_id": 2581, 
                "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>\u7ed9\u5b9a\u4e00\u4e2a\u5927\u5c0f\u4e3aN\u7684\u6570\u7ec4A\uff0c\u548c\u4e00\u4e2a\u6574\u6570Q\uff0c\u4f60\u80fd\u786e\u8ba4Q\u4e2a\u67e5\u8be2\u4e2d\u6bcf\u4e2a\u7684\u7b54\u6848\u4e48\uff1f\n\u6bcf\u4e2a\u67e5\u8be2\u5305\u542b\u4e24\u4e2a\u6574\u6570x\u548cy\uff0c\u4f60\u9700\u8981\u7ed9\u51fafind(x,y)\u662f\u5947\u6570\u8fd8\u662f\u5076\u6570\uff1a</p>\n\n<pre><code>find(int x,int y)\n{\n    if(x&gt;y) return 1;\n    ans = pow(A[x],find(x+1,y))\n    return ans\n}\n</code></pre>\n\n<p>\u6ce8\u610f : pow(a,b) = <em>a<sup>b</sup></em>.</p>\n\n<p><strong>\u8f93\u5165\u683c\u5f0f</strong> <br>\n\u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570N\u3002\n\u63a5\u4e0b\u6765\u7684\u4e00\u884c\u5305\u542bN\u4e2a\u7a7a\u767d\u5206\u9694\u7684\u975e\u8d1f\u6574\u6570\uff08\u5c0f\u4e8e9\uff09\u3002 \n\u518d\u63a5\u4e0b\u6765\u7684\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6b63\u6574\u6570Q\uff0c\u8868\u793a\u5904\u7406\u67e5\u8be2\u7684\u4e2a\u6570\u3002\n\u540e\u8ddfQ\u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e24\u4e2a\u7a7a\u683c\u5206\u9694\u7684\u6574\u6570x\u548cy\u3002</p>\n\n<p><strong>\u8f93\u51fa\u683c\u5f0f</strong> <br>\n\u5bf9\u6bcf\u4e2a\u67e5\u8be2\uff0c\u5982\u679c\u7ed3\u679c\u662f\u5076\u6570\uff0c\u8f93\u51fa'Even\u2019\uff0c \u5426\u5219\u8f93\u51fa\u2019Odd\u2019\u3002</p>\n\n<p><strong>\u7ea6\u675f\u6761\u4ef6</strong> <br>\n2 \u2264 <em>N</em> \u2264 10<sup>5</sup> <br>\n2 \u2264 <em>Q</em> \u2264 10<sup>5</sup> <br>\n1 \u2264 <em>x,y</em> \u2264 <em>N</em> <br>\n<em>x</em> \u2264 <em>y</em></p>\n\n<p><em>\u6570\u7ec4\u4e2d\u6ca1\u6709\u4e24\u4e2a\u76f8\u90bb\u7684\u5143\u7d20\u5168\u4e3a0</em></p>\n\n<p><strong>\u8f93\u5165\u6837\u4f8b</strong> </p>\n\n<pre><code>3\n3 2 7\n2\n1 2\n2 3\n</code></pre>\n\n<p><strong>\u8f93\u51fa\u6837\u4f8b</strong> </p>\n\n<pre><code>Odd\nEven\n</code></pre>\n\n<p><strong>\u89e3\u91ca</strong></p>\n\n<p>find(1,2) = 9\uff0c \u662f\u5947\u6570 <br>\nfind(2,3) = 128\uff0c \u662f\u5076\u6570  </p></div></div>", 
                "preview": null
            }, 
            {
                "body": "\u0427\u0451\u0442\u043d\u044b\u0435 \u0438 \u043d\u0435\u0447\u0451\u0442\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b\n\n\u041b\u0435\u0433\u0435\u043d\u0434\u0430\n\u041b\u0435\u0433\u0435\u043d\u0434\u0430, \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u0430\u044f \u0434\u0430\u043b\u0435\u0435, \u043f\u0435\u0440\u0435\u0444\u043e\u0440\u043c\u0443\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u0438 \u0443\u043f\u0440\u043e\u0449\u0435\u043d\u0430\n\u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0447\u0438\u043a\u043e\u043c, \u0447\u0442\u043e\u0431\u044b \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0433 \u043b\u0443\u0447\u0448\u0435 \u043f\u043e\u043d\u044f\u0442\u044c \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438.\n\u041e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u0443\u044e \u043b\u0435\u0433\u0435\u043d\u0434\u0443 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0432\n\u043a\u043e\u043d\u0442\u0435\u0441\u0442\u0435.\n\u0412\u0430\u043c \u0437\u0430\u0434\u0430\u043d \u043c\u0430\u0441\u0441\u0438\u0432 A[1], A[2], \u2026, A[N]. \u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043e\u0442\u0432\u0435\u0442\u0438\u0442\u044c \u043d\u0430 Q\n\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432. \u041a\u0430\u0436\u0434\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0437\u0443\u0435\u0442\u0441\u044f \u043f\u0430\u0440\u043e\u0439 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432 X, Y. \u0412\n\u043e\u0442\u0432\u0435\u0442 \u043d\u0430 \u0437\u0430\u043f\u0440\u043e\u0441 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u0447\u0451\u0442\u043d\u043e\u0441\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f f(X, Y), \u0433\u0434\u0435\n\u0444\u0443\u043d\u043a\u0446\u0438\u044f f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043f\u0441\u0435\u0432\u0434\u043e\u043a\u043e\u0434\u043e\u043c:\n\n\n    int f(int X, int Y){\n    if(X > Y)\n        return 1;\n    return pow(A[X], f(X + 1, Y));\n    }\n\n**\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445**\n\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e N \u2013 \u0440\u0430\u0437\u043c\u0435\u0440 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 A. \u0412\n\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0446\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 A[1], A[2], \u2026, A[N]. \n\u0412 \u0442\u0440\u0435\u0442\u044c\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e Q. \u0412 \u043a\u0430\u0436\u0434\u043e\u0439 \u0438\u0437 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 Q\n\u0441\u0442\u0440\u043e\u043a \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0434\u0432\u0430 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 X \u0438 Y.\n\n**\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445**\n\n\u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0442\u0432\u0435\u0442 \u043d\u0430 \u043d\u0435\u0433\u043e: \u043b\u0438\u0431\u043e \u0441\u0442\u0440\u043e\u043a\u0443 \u00abOdd\u00bb\n(\u0435\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435\u0447\u0451\u0442\u043d\u043e\u0435), \u043b\u0438\u0431\u043e \u0441\u0442\u0440\u043e\u043a\u0443 \u00abEven\u00bb (\u0435\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\n\u0447\u0451\u0442\u043d\u043e\u0435).\n\n**\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f**\n\n2 \u2264 N \u2264 10<sup>5</sup>\n2 \u2264 Q \u2264 10<sup>5</sup>\n1 \u2264 X \u2264 Y \u2264 N\n\u041d\u0438\u043a\u0430\u043a\u0438\u0435 \u0434\u0432\u0430 \u0441\u043e\u0441\u0435\u0434\u043d\u0438\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043d\u0435 \u0440\u0430\u0432\u043d\u044b \u043d\u0443\u043b\u044e \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\n\n**\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445**\n\n    3\n    3 2 7\n    2\n    1 2\n    2 3\n\n**\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445**\n\n    Odd\n    Even\n\n**\u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435 \u043a \u043f\u0440\u0438\u043c\u0435\u0440\u0430\u043c** \n\nf(1, 2) = 9; f(2, 3) = 128.", 
                "problem_statement_fields": {
                    "sample_output": " ", 
                    "problem_statement": "\u0427\u0451\u0442\u043d\u044b\u0435 \u0438 \u043d\u0435\u0447\u0451\u0442\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b\n\n\u041b\u0435\u0433\u0435\u043d\u0434\u0430\n\u041b\u0435\u0433\u0435\u043d\u0434\u0430, \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u0430\u044f \u0434\u0430\u043b\u0435\u0435, \u043f\u0435\u0440\u0435\u0444\u043e\u0440\u043c\u0443\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u0438 \u0443\u043f\u0440\u043e\u0449\u0435\u043d\u0430\n\u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0447\u0438\u043a\u043e\u043c, \u0447\u0442\u043e\u0431\u044b \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0433 \u043b\u0443\u0447\u0448\u0435 \u043f\u043e\u043d\u044f\u0442\u044c \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438.\n\u041e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u0443\u044e \u043b\u0435\u0433\u0435\u043d\u0434\u0443 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0432\n\u043a\u043e\u043d\u0442\u0435\u0441\u0442\u0435.\n\u0412\u0430\u043c \u0437\u0430\u0434\u0430\u043d \u043c\u0430\u0441\u0441\u0438\u0432 A[1], A[2], \u2026, A[N]. \u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043e\u0442\u0432\u0435\u0442\u0438\u0442\u044c \u043d\u0430 Q\n\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432. \u041a\u0430\u0436\u0434\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0437\u0443\u0435\u0442\u0441\u044f \u043f\u0430\u0440\u043e\u0439 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432 X, Y. \u0412\n\u043e\u0442\u0432\u0435\u0442 \u043d\u0430 \u0437\u0430\u043f\u0440\u043e\u0441 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u0447\u0451\u0442\u043d\u043e\u0441\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f f(X, Y), \u0433\u0434\u0435\n\u0444\u0443\u043d\u043a\u0446\u0438\u044f f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043f\u0441\u0435\u0432\u0434\u043e\u043a\u043e\u0434\u043e\u043c:\n\n\n    int f(int X, int Y){\n    if(X > Y)\n        return 1;\n    return pow(A[X], f(X + 1, Y));\n    }\n\n**\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445**\n\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e N \u2013 \u0440\u0430\u0437\u043c\u0435\u0440 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 A. \u0412\n\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0446\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 A[1], A[2], \u2026, A[N]. \n\u0412 \u0442\u0440\u0435\u0442\u044c\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e Q. \u0412 \u043a\u0430\u0436\u0434\u043e\u0439 \u0438\u0437 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 Q\n\u0441\u0442\u0440\u043e\u043a \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0434\u0432\u0430 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 X \u0438 Y.\n\n**\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445**\n\n\u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0442\u0432\u0435\u0442 \u043d\u0430 \u043d\u0435\u0433\u043e: \u043b\u0438\u0431\u043e \u0441\u0442\u0440\u043e\u043a\u0443 \u00abOdd\u00bb\n(\u0435\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435\u0447\u0451\u0442\u043d\u043e\u0435), \u043b\u0438\u0431\u043e \u0441\u0442\u0440\u043e\u043a\u0443 \u00abEven\u00bb (\u0435\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\n\u0447\u0451\u0442\u043d\u043e\u0435).\n\n**\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f**\n\n2 \u2264 N \u2264 10<sup>5</sup>\n2 \u2264 Q \u2264 10<sup>5</sup>\n1 \u2264 X \u2264 Y \u2264 N\n\u041d\u0438\u043a\u0430\u043a\u0438\u0435 \u0434\u0432\u0430 \u0441\u043e\u0441\u0435\u0434\u043d\u0438\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043d\u0435 \u0440\u0430\u0432\u043d\u044b \u043d\u0443\u043b\u044e \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\n\n**\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445**\n\n    3\n    3 2 7\n    2\n    1 2\n    2 3\n\n**\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445**\n\n    Odd\n    Even\n\n**\u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435 \u043a \u043f\u0440\u0438\u043c\u0435\u0440\u0430\u043c** \n\nf(1, 2) = 9; f(2, 3) = 128.", 
                    "input_format": " ", 
                    "explanation": " ", 
                    "sample_input": " ", 
                    "output_format": " "
                }, 
                "name": null, 
                "language": "Russian", 
                "challenge_id": 2581, 
                "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>\u0427\u0451\u0442\u043d\u044b\u0435 \u0438 \u043d\u0435\u0447\u0451\u0442\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b</p>\n\n<p>\u041b\u0435\u0433\u0435\u043d\u0434\u0430\n\u041b\u0435\u0433\u0435\u043d\u0434\u0430, \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u0430\u044f \u0434\u0430\u043b\u0435\u0435, \u043f\u0435\u0440\u0435\u0444\u043e\u0440\u043c\u0443\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u0438 \u0443\u043f\u0440\u043e\u0449\u0435\u043d\u0430\n\u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0447\u0438\u043a\u043e\u043c, \u0447\u0442\u043e\u0431\u044b \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0433 \u043b\u0443\u0447\u0448\u0435 \u043f\u043e\u043d\u044f\u0442\u044c \u0443\u0441\u043b\u043e\u0432\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438.\n\u041e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u0443\u044e \u043b\u0435\u0433\u0435\u043d\u0434\u0443 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0432\n\u043a\u043e\u043d\u0442\u0435\u0441\u0442\u0435.\n\u0412\u0430\u043c \u0437\u0430\u0434\u0430\u043d \u043c\u0430\u0441\u0441\u0438\u0432 A[1], A[2], \u2026, A[N]. \u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043e\u0442\u0432\u0435\u0442\u0438\u0442\u044c \u043d\u0430 Q\n\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432. \u041a\u0430\u0436\u0434\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0437\u0443\u0435\u0442\u0441\u044f \u043f\u0430\u0440\u043e\u0439 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432 X, Y. \u0412\n\u043e\u0442\u0432\u0435\u0442 \u043d\u0430 \u0437\u0430\u043f\u0440\u043e\u0441 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u0447\u0451\u0442\u043d\u043e\u0441\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f f(X, Y), \u0433\u0434\u0435\n\u0444\u0443\u043d\u043a\u0446\u0438\u044f f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043f\u0441\u0435\u0432\u0434\u043e\u043a\u043e\u0434\u043e\u043c:</p>\n\n<pre><code>int f(int X, int Y){\nif(X &gt; Y)\n    return 1;\nreturn pow(A[X], f(X + 1, Y));\n}\n</code></pre>\n\n<p><strong>\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445</strong></p>\n\n<p>\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e N \u2013 \u0440\u0430\u0437\u043c\u0435\u0440 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 A. \u0412\n\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0446\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 A[1], A[2], \u2026, A[N]. \n\u0412 \u0442\u0440\u0435\u0442\u044c\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e Q. \u0412 \u043a\u0430\u0436\u0434\u043e\u0439 \u0438\u0437 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 Q\n\u0441\u0442\u0440\u043e\u043a \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0434\u0432\u0430 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 X \u0438 Y.</p>\n\n<p><strong>\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445</strong></p>\n\n<p>\u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0442\u0432\u0435\u0442 \u043d\u0430 \u043d\u0435\u0433\u043e: \u043b\u0438\u0431\u043e \u0441\u0442\u0440\u043e\u043a\u0443 \u00abOdd\u00bb\n(\u0435\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435\u0447\u0451\u0442\u043d\u043e\u0435), \u043b\u0438\u0431\u043e \u0441\u0442\u0440\u043e\u043a\u0443 \u00abEven\u00bb (\u0435\u0441\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\n\u0447\u0451\u0442\u043d\u043e\u0435).</p>\n\n<p><strong>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f</strong></p>\n\n<p>2 \u2264 N \u2264 10<sup>5</sup>\n2 \u2264 Q \u2264 10<sup>5</sup>\n1 \u2264 X \u2264 Y \u2264 N\n\u041d\u0438\u043a\u0430\u043a\u0438\u0435 \u0434\u0432\u0430 \u0441\u043e\u0441\u0435\u0434\u043d\u0438\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043d\u0435 \u0440\u0430\u0432\u043d\u044b \u043d\u0443\u043b\u044e \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e</p>\n\n<p><strong>\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445</strong></p>\n\n<pre><code>3\n3 2 7\n2\n1 2\n2 3\n</code></pre>\n\n<p><strong>\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445</strong></p>\n\n<pre><code>Odd\nEven\n</code></pre>\n\n<p><strong>\u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435 \u043a \u043f\u0440\u0438\u043c\u0435\u0440\u0430\u043c</strong> </p>\n\n<p>f(1, 2) = 9; f(2, 3) = 128.</p></div></div>", 
                "preview": null
            }
        ], 
        "codechecker_handle": null, 
        "countdown_time": 0, 
        "author_avatar": "https://d3rpyts3de3lx8.cloudfront.net/hackerrank/assets/gravatar.jpg", 
        "custom_tabs": null, 
        "judgebot_language": null, 
        "custom_case": true, 
        "requirements_description": null, 
        "is_skip_band_challenge": false, 
        "custom_checker_language": null
    }
}