{
    "status": true, 
    "model": {
        "onboarding": null, 
        "tagAncestry": [], 
        "solved_count": 18203, 
        "leaderboard_out_of_sync_message": null, 
        "public_test_cases": true, 
        "checker_program": null, 
        "topics": [
            {
                "slug": "average", 
                "title": "Average"
            }
        ], 
        "time_left": null, 
        "updated_at": "2017-07-11T15:45:01.000Z", 
        "author_name": "amititkgp", 
        "has_started": true, 
        "epoch_starttime": null, 
        "has_all_test_cases_public": false, 
        "difficulty_name": "Easy", 
        "require_unlock": true, 
        "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>Animesh has <span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-1-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"2.064ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -791.3 888.5 936.9\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></g></svg></span> empty candy jars, numbered from <span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-2-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1.162ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -791.3 500.5 936.9\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path></g></svg></span> to <span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-3-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"2.064ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -791.3 888.5 936.9\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></g></svg></span>, with infinite capacity. He performs <span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-4-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"2.442ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -791.3 1051.5 936.9\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z\"></path></g></svg></span> operations. Each operation is described by <span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-5-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1.162ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -791.3 500.5 936.9\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"></path></g></svg></span> integers, <span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-6-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1.23ex\" height=\"1.676ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -576.1 529.5 721.6\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g></svg></span>, <span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-7-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"0.998ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -791.3 429.5 936.9\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path></g></svg></span>, and <span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-8-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1.211ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -791.3 521.5 936.9\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></svg></span>. Here, <span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-9-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1.23ex\" height=\"1.676ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -576.1 529.5 721.6\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g></svg></span> and <span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-10-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"0.998ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -791.3 429.5 936.9\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path></g></svg></span> are indices of the jars, and <span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-11-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1.211ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -791.3 521.5 936.9\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></svg></span> is the number of candies to be added inside each jar whose index lies between <span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-12-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1.23ex\" height=\"1.676ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -576.1 529.5 721.6\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g></svg></span> and <span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-13-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"0.998ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -791.3 429.5 936.9\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path></g></svg></span> (both inclusive).\nCan you tell the average number of candies after <span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-14-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"2.442ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -791.3 1051.5 936.9\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z\"></path></g></svg></span> operations?</p></div></div></div><div class='challenge_input_format'><div class='msB challenge_input_format_title'><p><strong>Input Format</strong></p></div><div class='msB challenge_input_format_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>The first line contains two integers, <span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-1-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"2.064ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -791.3 888.5 936.9\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></g></svg></span> and <span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-2-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"2.442ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -791.3 1051.5 936.9\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z\"></path></g></svg></span>, separated by a single space. <br>\n<span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-3-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"2.442ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -791.3 1051.5 936.9\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z\"></path></g></svg></span> lines follow; each of them contains three integers, <span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-4-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1.23ex\" height=\"1.676ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -576.1 529.5 721.6\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g></svg></span>, <span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-5-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"0.998ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -791.3 429.5 936.9\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path></g></svg></span>, and <span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-6-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1.211ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -791.3 521.5 936.9\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g></svg></span>, separated by spaces.</p>\n\n<p><strong>Constraints</strong> <br>\n<span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-7-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"12.802ex\" height=\"2.843ex\" style=\"vertical-align: -0.505ex;\" viewBox=\"0 -1006.6 5512 1223.9\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z\"></path><g transform=\"translate(778,0)\"><path stroke-width=\"1\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g transform=\"translate(1834,0)\"><path stroke-width=\"1\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></g><g transform=\"translate(3000,0)\"><path stroke-width=\"1\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g transform=\"translate(4057,0)\"><path stroke-width=\"1\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path stroke-width=\"1\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path><g transform=\"translate(1001,393)\"><path stroke-width=\"1\" transform=\"scale(0.707)\" d=\"M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z\"></path></g></g></g></svg></span> <br>\n<span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-8-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"13.181ex\" height=\"2.843ex\" style=\"vertical-align: -0.505ex;\" viewBox=\"0 -1006.6 5675 1223.9\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><g transform=\"translate(778,0)\"><path stroke-width=\"1\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g transform=\"translate(1834,0)\"><path stroke-width=\"1\" d=\"M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z\"></path></g><g transform=\"translate(3163,0)\"><path stroke-width=\"1\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g transform=\"translate(4220,0)\"><path stroke-width=\"1\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path stroke-width=\"1\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path><g transform=\"translate(1001,393)\"><path stroke-width=\"1\" transform=\"scale(0.707)\" d=\"M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z\"></path></g></g></g></svg></span> <br>\n<span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-9-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"14.749ex\" height=\"2.343ex\" style=\"vertical-align: -0.505ex;\" viewBox=\"0 -791.3 6350.2 1008.6\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><g transform=\"translate(778,0)\"><path stroke-width=\"1\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g transform=\"translate(1834,0)\"><path stroke-width=\"1\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g><g transform=\"translate(2641,0)\"><path stroke-width=\"1\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g transform=\"translate(3698,0)\"><path stroke-width=\"1\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path></g><g transform=\"translate(4405,0)\"><path stroke-width=\"1\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g transform=\"translate(5461,0)\"><path stroke-width=\"1\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></g></g></svg></span> <br>\n<span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-10-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"11.95ex\" height=\"2.843ex\" style=\"vertical-align: -0.505ex;\" viewBox=\"0 -1006.6 5145 1223.9\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"></path><g transform=\"translate(778,0)\"><path stroke-width=\"1\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g transform=\"translate(1834,0)\"><path stroke-width=\"1\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"></path></g><g transform=\"translate(2633,0)\"><path stroke-width=\"1\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g transform=\"translate(3690,0)\"><path stroke-width=\"1\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path stroke-width=\"1\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path><g transform=\"translate(1001,393)\"><path stroke-width=\"1\" transform=\"scale(0.707)\" d=\"M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z\"></path></g></g></g></svg></span></p></div></div></div><div class='challenge_output_format'><div class='msB challenge_output_format_title'><p><strong>Output Format</strong></p></div><div class='msB challenge_output_format_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>A single line containing the average number of candies across <span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-1-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"2.064ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -791.3 888.5 936.9\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></g></svg></span> jars, <em>rounded down</em> to the nearest integer.</p>\n\n<p><strong>Note</strong>: <em>Rounded down</em> means finding the greatest integer which is less than or equal to the given number. E.g. <em>13.65</em> and <em>13.23</em> are rounded down to <em>13</em>, while <em>12.98</em> is rounded down to <em>12</em>.</p></div></div></div><div class='challenge_sample_input'><div class='msB challenge_sample_input_title'><p><strong>Sample Input</strong></p></div><div class='msB challenge_sample_input_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><pre><code>5 3\n1 2 100\n2 5 100\n3 4 100\n</code></pre></div></div></div><div class='challenge_sample_output'><div class='msB challenge_sample_output_title'><p><strong>Sample Output</strong></p></div><div class='msB challenge_sample_output_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><pre><code>160\n</code></pre></div></div></div><div class='challenge_explanation'><div class='msB challenge_explanation_title'><p><strong>Explanation</strong></p></div><div class='msB challenge_explanation_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>Initially each of the jars contains <em>0</em> candies  </p>\n\n<pre><code>0 0 0 0 0  \n</code></pre>\n\n<p>First operation:  </p>\n\n<pre><code>100 100 0 0 0  \n</code></pre>\n\n<p>Second operation:  </p>\n\n<pre><code>100 200 100 100 100  \n</code></pre>\n\n<p>Third operation: </p>\n\n<pre><code>100 200 200 200 100  \n</code></pre>\n\n<p>Total = <em>800</em>, Average = <em>800/5</em> = <em>160</em></p></div></div></div>", 
        "hacker": {
            "username": "HackerRank", 
            "is_admin": true, 
            "id": 15055, 
            "avatar": "https://hrcdn.net/s3_pub/hr-avatars/4c95f96b-1ff9-46ed-98f8-cb3cb4ed8834/150x150.png"
        }, 
        "id": 1637, 
        "leaderboard_out_of_sync": null, 
        "has_ended": false, 
        "languages": [
            "bash", 
            "c", 
            "cpp", 
            "java", 
            "csharp", 
            "php", 
            "ruby", 
            "python", 
            "perl", 
            "haskell", 
            "clojure", 
            "scala", 
            "lua", 
            "go", 
            "javascript", 
            "erlang", 
            "sbcl", 
            "d", 
            "ocaml", 
            "pascal", 
            "python3", 
            "groovy", 
            "objectivec", 
            "fsharp", 
            "visualbasic", 
            "lolcode", 
            "smalltalk", 
            "tcl", 
            "java8", 
            "r", 
            "racket", 
            "rust", 
            "swift", 
            "elixir", 
            "cpp14", 
            "kotlin", 
            "julia"
        ], 
        "is_custom": false, 
        "compile_and_test": true, 
        "default_language": null, 
        "migrated_resource": null, 
        "submit_disabled": null, 
        "expert_solution_status": false, 
        "can_solve": true, 
        "company_id": null, 
        "custom": null, 
        "can_be_viewed": true, 
        "track": {
            "name": "Fundamentals", 
            "taxonomy": 1, 
            "track_slug": "mathematics", 
            "track_id": 22, 
            "track_name": "Mathematics", 
            "id": 109, 
            "rewards_system_enabled": null, 
            "slug": "fundamentals"
        }, 
        "primary_contest": {
            "migration_status": null, 
            "contest_broadcast": null, 
            "hacker_timelimit": null, 
            "notification": null, 
            "qualification_rule_value": null, 
            "leaderboard_backend": null, 
            "expose_stats": null, 
            "updated_at": "2016-05-06T21:49:55.000Z", 
            "custom_leaderboard_column_name": null, 
            "organization_type": null, 
            "ended": true, 
            "epoch_starttime": 1391185800, 
            "timezone": "PST", 
            "disable_forum": null, 
            "id": 593, 
            "primary_track_id": 3, 
            "limited_participants": null, 
            "school_leaderboard_enabled": false, 
            "time_limited_contest": false, 
            "archived": true, 
            "rated": true, 
            "parent_contest_id": null, 
            "leaderboard_out_of_sync_message": null, 
            "leaderboard_type": "country", 
            "tagline": "5 challenges in 2 hours", 
            "effective_epoch_endtime": 1391193000, 
            "show_participants_info": null, 
            "homepage_background_color": "", 
            "organization_name": null, 
            "track": {
                "name": "Algorithms", 
                "id": 3, 
                "priority": 14, 
                "descriptions": "The true test of problem solving: when one realizes that time and memory aren't infinite.\n", 
                "rewards_system_enabled": true, 
                "slug": "algorithms"
            }, 
            "primary_tag_id": 3081, 
            "hide_navigation": null, 
            "show_penalty": null, 
            "effective_time_left": -112162883.44946772, 
            "hidden": null, 
            "homepage": "", 
            "public": true, 
            "testers_contest": null, 
            "description": "101 Hack contest is back with its January edition! It's all about speed, accuracy and efficiency. Inside the contest are 5 challenges. You have exactly 120 minutes to solve them. Every second counts.\n<br>\n<br>\nHackerRank invites you to join the contest to compete against hackers from across the globe.\n<br>", 
            "hide_difficulty": true, 
            "started": true, 
            "time_left": -112162883.44309168, 
            "challenges_count": 5, 
            "qualification_rule_msg": null, 
            "leaderboard_out_of_sync": null, 
            "team_event": false, 
            "disable_fsi": null, 
            "hide_submissions": null, 
            "leaderboard_format": "", 
            "leaderboard_broadcast_message": null, 
            "has_tracks": null, 
            "college_public": null, 
            "endtime": "2014-01-31T18:30:00.000Z", 
            "qualification_rule_type": null, 
            "slug": "101jan14", 
            "hide_leaderboard": null, 
            "kind": null, 
            "comment_live_sync": null, 
            "name": "101 Hack January", 
            "is_multi_round": false, 
            "created_at": "2014-01-23T10:18:35.000Z", 
            "epoch_endtime": 1391193000, 
            "company_associated_contest": null, 
            "rating_category": "101 Hack", 
            "has_codesprint_reg_page": null, 
            "starttime": "2014-01-31T16:30:00.000Z", 
            "is_rating_updated": true, 
            "leaderboard_freeze_time": null, 
            "migration_disabled": null, 
            "template_id": 124
        }, 
        "factor": 20, 
        "is_solution_unlocked": false, 
        "preview": "Perform the multiple queries on the list. And print average. - 20 Points", 
        "is_editorial_available": true, 
        "status": null, 
        "category": "ai", 
        "public_solutions": true, 
        "color": null, 
        "deleted": false, 
        "dynamic": true, 
        "company": null, 
        "moderator_or_support": false, 
        "is_text": false, 
        "solved_score": 0.5, 
        "difficulty_score": "0.178", 
        "difficulty": 0.8185268938782103, 
        "active": true, 
        "show_skeliton": null, 
        "max_score": 20, 
        "slug": "filling-jars", 
        "contest_slug": "master", 
        "user_score": 0, 
        "real_dynamic": false, 
        "kind": "code", 
        "player_count": 2, 
        "submitted_hackers_count": 21916, 
        "name": "Filling Jars", 
        "is_preview_contest": false, 
        "level": 12, 
        "success_ratio": 0.8305803978828253, 
        "total_count": 21916, 
        "created_at": "2014-01-09T11:38:28.000Z", 
        "epoch_endtime": null, 
        "judgebot": null, 
        "available_translations": [
            {
                "body": "Giovana tem *N* potes de doces vazios, numerados de 1 a *N*, com capacidade infinita. Ela realiza *M* opera\u00e7\u00f5es. Cada opera\u00e7\u00e3o \u00e9 descrita por tr\u00eas inteiros *a, b\u200b\u200b* e *k*. Aqui, *a* e *b* s\u00e3o os \u00edndices dos potes, e *k* \u00e9 o n\u00famero de bombons para serem adicionados dentro de cada pote, cujo \u00edndice se encontra entre *a* e *b* (ambos inclu\u00eddos).\nVoc\u00ea pode dizer o n\u00famero m\u00e9dio de doces ap\u00f3s as *M* opera\u00e7\u00f5es?\n\n**Formato de Entrada**\nA primeira linha cont\u00e9m dois inteiros *N* e *M*, separados por um \u00fanico espa\u00e7o.\n*M* linhas seguem. Cada uma das *M* linhas cont\u00e9m tr\u00eas inteiros *a, b* e *k*, separados por espa\u00e7os simples.\n\n**Formato de Sa\u00edda**\nUma \u00fanica linha que cont\u00e9m o n\u00famero m\u00e9dio de doces em todos os *N* potes, *arredondado para baixo* para o n\u00famero inteiro mais pr\u00f3ximo.\n\n**Nota**  \n*Arrendondar para baixo* significa encontrar o maior inteiro que \u00e9 menor ou igual ao n\u00famero dado. Por exemplo, _13.65_ e _13.23_ s\u00e3o arredondados para _13_, enquanto _12.98_ \u00e9 arredondado para _12_.\n\n**Restri\u00e7\u00f5es**\n3 <= *N* <= 10<sup>7</sup>  \n1 <= *M* <= 10<sup>5</sup>  \n1 <= *a* <= *b* <= *N*  \n0 <= *k* <= 10<sup>6</sup>  \n\n**Exemplo de Entrada #00**\n\n    5 3\n    1 2 100\n    2 5 100\n    3 4 100\n\n    \n**Exemplo de Sa\u00edda #00**\n\n    160\n\n**Explica\u00e7\u00e3o**\nIncialmente, cada pote cont\u00e9m 0 doces\n\n    0 0 0 0 0  \n\nPrimeira opera\u00e7\u00e3o\n\n    100 100 0 0 0  \n\nSegunda opera\u00e7\u00e3o \n\n    100 200 100 100 100  \n\nTerceira opera\u00e7\u00e3o\n\n    100 200 200 200 100  \n\nTotal = 800, M\u00e9dia = 800/5 = 160", 
                "problem_statement_fields": {
                    "sample_output": " ", 
                    "problem_statement": "Giovana tem *N* potes de doces vazios, numerados de 1 a *N*, com capacidade infinita. Ela realiza *M* opera\u00e7\u00f5es. Cada opera\u00e7\u00e3o \u00e9 descrita por tr\u00eas inteiros *a, b\u200b\u200b* e *k*. Aqui, *a* e *b* s\u00e3o os \u00edndices dos potes, e *k* \u00e9 o n\u00famero de bombons para serem adicionados dentro de cada pote, cujo \u00edndice se encontra entre *a* e *b* (ambos inclu\u00eddos).\nVoc\u00ea pode dizer o n\u00famero m\u00e9dio de doces ap\u00f3s as *M* opera\u00e7\u00f5es?\n\n**Formato de Entrada**\nA primeira linha cont\u00e9m dois inteiros *N* e *M*, separados por um \u00fanico espa\u00e7o.\n*M* linhas seguem. Cada uma das *M* linhas cont\u00e9m tr\u00eas inteiros *a, b* e *k*, separados por espa\u00e7os simples.\n\n**Formato de Sa\u00edda**\nUma \u00fanica linha que cont\u00e9m o n\u00famero m\u00e9dio de doces em todos os *N* potes, *arredondado para baixo* para o n\u00famero inteiro mais pr\u00f3ximo.\n\n**Nota**  \n*Arrendondar para baixo* significa encontrar o maior inteiro que \u00e9 menor ou igual ao n\u00famero dado. Por exemplo, _13.65_ e _13.23_ s\u00e3o arredondados para _13_, enquanto _12.98_ \u00e9 arredondado para _12_.\n\n**Restri\u00e7\u00f5es**\n3 <= *N* <= 10<sup>7</sup>  \n1 <= *M* <= 10<sup>5</sup>  \n1 <= *a* <= *b* <= *N*  \n0 <= *k* <= 10<sup>6</sup>  \n\n**Exemplo de Entrada #00**\n\n    5 3\n    1 2 100\n    2 5 100\n    3 4 100\n\n    \n**Exemplo de Sa\u00edda #00**\n\n    160\n\n**Explica\u00e7\u00e3o**\nIncialmente, cada pote cont\u00e9m 0 doces\n\n    0 0 0 0 0  \n\nPrimeira opera\u00e7\u00e3o\n\n    100 100 0 0 0  \n\nSegunda opera\u00e7\u00e3o \n\n    100 200 100 100 100  \n\nTerceira opera\u00e7\u00e3o\n\n    100 200 200 200 100  \n\nTotal = 800, M\u00e9dia = 800/5 = 160", 
                    "input_format": " ", 
                    "explanation": " ", 
                    "sample_input": " ", 
                    "output_format": " "
                }, 
                "name": "Filling Jars", 
                "language": "Portuguese", 
                "challenge_id": 1637, 
                "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>Giovana tem <em>N</em> potes de doces vazios, numerados de 1 a <em>N</em>, com capacidade infinita. Ela realiza <em>M</em> opera\u00e7\u00f5es. Cada opera\u00e7\u00e3o \u00e9 descrita por tr\u00eas inteiros <em>a, b\u200b\u200b</em> e <em>k</em>. Aqui, <em>a</em> e <em>b</em> s\u00e3o os \u00edndices dos potes, e <em>k</em> \u00e9 o n\u00famero de bombons para serem adicionados dentro de cada pote, cujo \u00edndice se encontra entre <em>a</em> e <em>b</em> (ambos inclu\u00eddos).\nVoc\u00ea pode dizer o n\u00famero m\u00e9dio de doces ap\u00f3s as <em>M</em> opera\u00e7\u00f5es?</p>\n\n<p><strong>Formato de Entrada</strong>\nA primeira linha cont\u00e9m dois inteiros <em>N</em> e <em>M</em>, separados por um \u00fanico espa\u00e7o.\n<em>M</em> linhas seguem. Cada uma das <em>M</em> linhas cont\u00e9m tr\u00eas inteiros <em>a, b</em> e <em>k</em>, separados por espa\u00e7os simples.</p>\n\n<p><strong>Formato de Sa\u00edda</strong>\nUma \u00fanica linha que cont\u00e9m o n\u00famero m\u00e9dio de doces em todos os <em>N</em> potes, <em>arredondado para baixo</em> para o n\u00famero inteiro mais pr\u00f3ximo.</p>\n\n<p><strong>Nota</strong> <br>\n<em>Arrendondar para baixo</em> significa encontrar o maior inteiro que \u00e9 menor ou igual ao n\u00famero dado. Por exemplo, <em>13.65</em> e <em>13.23</em> s\u00e3o arredondados para <em>13</em>, enquanto <em>12.98</em> \u00e9 arredondado para <em>12</em>.</p>\n\n<p><strong>Restri\u00e7\u00f5es</strong>\n3 &lt;= <em>N</em> &lt;= 10<sup>7</sup> <br>\n1 &lt;= <em>M</em> &lt;= 10<sup>5</sup> <br>\n1 &lt;= <em>a</em> &lt;= <em>b</em> &lt;= <em>N</em> <br>\n0 &lt;= <em>k</em> &lt;= 10<sup>6</sup>  </p>\n\n<p><strong>Exemplo de Entrada #00</strong></p>\n\n<pre><code>5 3\n1 2 100\n2 5 100\n3 4 100\n</code></pre>\n\n<p><strong>Exemplo de Sa\u00edda #00</strong></p>\n\n<pre><code>160\n</code></pre>\n\n<p><strong>Explica\u00e7\u00e3o</strong>\nIncialmente, cada pote cont\u00e9m 0 doces</p>\n\n<pre><code>0 0 0 0 0  \n</code></pre>\n\n<p>Primeira opera\u00e7\u00e3o</p>\n\n<pre><code>100 100 0 0 0  \n</code></pre>\n\n<p>Segunda opera\u00e7\u00e3o </p>\n\n<pre><code>100 200 100 100 100  \n</code></pre>\n\n<p>Terceira opera\u00e7\u00e3o</p>\n\n<pre><code>100 200 200 200 100  \n</code></pre>\n\n<p>Total = 800, M\u00e9dia = 800/5 = 160</p></div></div>", 
                "preview": null
            }, 
            {
                "body": "Animesh\u6709N\u4e2a\u65e0\u7a77\u5927\u5bb9\u91cf\u7684\u7a7a\u7cd6\u679c\u7f50\uff0c\u7f16\u53f7\u4ece1\u5230N\u3002\u4ed6\u505a\u4e86M\u6b21\u64cd\u4f5c, \u6bcf\u6b21\u64cd\u4f5c\u7531a,b,k\u5b9a\u4e49\uff0c\u5176\u4e2da\u548cb\u8868\u793a\u7cd6\u679c\u7f50\u7684\u7f16\u53f7\uff0ck\u8868\u793a\u5411\u7f16\u53f7a\u5230\u7f16\u53f7b\u7684\u4e4b\u95f4\u7684\u7cd6\u679c\u7f50(\u5305\u62eca\u548cb)\u653e\u5165\u7cd6\u679c\u7684\u6570\u76ee\u3002\u5f53\u4ed6\u5b8c\u6210\u4e86M\u6b21\u64cd\u4f5c\u540e\uff0c\u4ed6\u9700\u8981\u7ed9\u51fa\u8fd9N\u4e2a\u7cd6\u679c\u7f50\u7684\u5e73\u5747\u7cd6\u679c\u6570\u91cf\u3002  \n**\u8f93\u5165\u683c\u5f0f**  \n\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u7a7a\u683c\u5206\u9694\u7684\u6574\u6570N\u548cM\u3002\n\u63a5\u4e0b\u6765\u7684M\u884c\u5305\u542b3\u4e2a\u7a7a\u683c\u5206\u9694\u7684\u6574\u6570a,b\u548ck\u3002  \n**\u6ce8\u610f**  \n\u7cd6\u679c\u7f50\u7684\u7f16\u53f7\u662f\u4ece1\u5230N\u3002\n\n**\u8f93\u51fa\u683c\u5f0f**  \n\u4e00\u884c\u5305\u542b *\u5e73\u5747\u503c\u7684\u6574\u6570\u90e8\u5206* i.e. GIF(\u5e73\u5747\u6570),   \nGIF = \u53d6\u4e0d\u5927\u4e8e\u81ea\u53d8\u91cf\u7684\u6700\u5927\u6574\u6570.\n\n**\u7ea6\u675f\u6761\u4ef6**  \n3 <= N <= 10<sup>7</sup>  \n1 <= M <= 10<sup>5</sup>  \n1 <= a <= b <= N  \n0 <= k <= 10<sup>6</sup>  \n\n**\u8f93\u5165\u6837\u4f8b #00**  \n\n        5 3\n\t1 2 100\n\t2 5 100\n\t3 4 100\n\n    \n**\u8f93\u51fa\u6837\u4f8b #00**  \n\n    160\n\n**\u89e3\u91ca**  \n\u6700\u521d\u6bcf\u4e2a\u7cd6\u7f50\u679c\u7f50\u90fd\u662f\u7a7a\u7684\uff1a  \n\n    0 0 0 0 0  \n\n\u7b2c\u4e00\u6b21\u64cd\u4f5c\n\n    100 100 0 0 0  \n\n\u7b2c\u4e8c\u6b21\u64cd\u4f5c  \n\n    100 200 100 100 100  \n\n\u7b2c\u4e09\u6b21\u64cd\u4f5c  \n\n    100 200 200 200 100  \n\n\u603b\u6570 = 800 , \u5e73\u5747\u503c = 800/5 = 160  \n", 
                "problem_statement_fields": {
                    "sample_output": " ", 
                    "problem_statement": "Animesh\u6709N\u4e2a\u65e0\u7a77\u5927\u5bb9\u91cf\u7684\u7a7a\u7cd6\u679c\u7f50\uff0c\u7f16\u53f7\u4ece1\u5230N\u3002\u4ed6\u505a\u4e86M\u6b21\u64cd\u4f5c, \u6bcf\u6b21\u64cd\u4f5c\u7531a,b,k\u5b9a\u4e49\uff0c\u5176\u4e2da\u548cb\u8868\u793a\u7cd6\u679c\u7f50\u7684\u7f16\u53f7\uff0ck\u8868\u793a\u5411\u7f16\u53f7a\u5230\u7f16\u53f7b\u7684\u4e4b\u95f4\u7684\u7cd6\u679c\u7f50(\u5305\u62eca\u548cb)\u653e\u5165\u7cd6\u679c\u7684\u6570\u76ee\u3002\u5f53\u4ed6\u5b8c\u6210\u4e86M\u6b21\u64cd\u4f5c\u540e\uff0c\u4ed6\u9700\u8981\u7ed9\u51fa\u8fd9N\u4e2a\u7cd6\u679c\u7f50\u7684\u5e73\u5747\u7cd6\u679c\u6570\u91cf\u3002  \n**\u8f93\u5165\u683c\u5f0f**  \n\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u7a7a\u683c\u5206\u9694\u7684\u6574\u6570N\u548cM\u3002\n\u63a5\u4e0b\u6765\u7684M\u884c\u5305\u542b3\u4e2a\u7a7a\u683c\u5206\u9694\u7684\u6574\u6570a,b\u548ck\u3002  \n**\u6ce8\u610f**  \n\u7cd6\u679c\u7f50\u7684\u7f16\u53f7\u662f\u4ece1\u5230N\u3002\n\n**\u8f93\u51fa\u683c\u5f0f**  \n\u4e00\u884c\u5305\u542b *\u5e73\u5747\u503c\u7684\u6574\u6570\u90e8\u5206* i.e. GIF(\u5e73\u5747\u6570),   \nGIF = \u53d6\u4e0d\u5927\u4e8e\u81ea\u53d8\u91cf\u7684\u6700\u5927\u6574\u6570.\n\n**\u7ea6\u675f\u6761\u4ef6**  \n3 <= N <= 10<sup>7</sup>  \n1 <= M <= 10<sup>5</sup>  \n1 <= a <= b <= N  \n0 <= k <= 10<sup>6</sup>  \n\n**\u8f93\u5165\u6837\u4f8b #00**  \n\n        5 3\n\t1 2 100\n\t2 5 100\n\t3 4 100\n\n    \n**\u8f93\u51fa\u6837\u4f8b #00**  \n\n    160\n\n**\u89e3\u91ca**  \n\u6700\u521d\u6bcf\u4e2a\u7cd6\u7f50\u679c\u7f50\u90fd\u662f\u7a7a\u7684\uff1a  \n\n    0 0 0 0 0  \n\n\u7b2c\u4e00\u6b21\u64cd\u4f5c\n\n    100 100 0 0 0  \n\n\u7b2c\u4e8c\u6b21\u64cd\u4f5c  \n\n    100 200 100 100 100  \n\n\u7b2c\u4e09\u6b21\u64cd\u4f5c  \n\n    100 200 200 200 100  \n\n\u603b\u6570 = 800 , \u5e73\u5747\u503c = 800/5 = 160  \n", 
                    "input_format": " ", 
                    "explanation": " ", 
                    "sample_input": " ", 
                    "output_format": " "
                }, 
                "name": "Filling Jars", 
                "language": "Chinese", 
                "challenge_id": 1637, 
                "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>Animesh\u6709N\u4e2a\u65e0\u7a77\u5927\u5bb9\u91cf\u7684\u7a7a\u7cd6\u679c\u7f50\uff0c\u7f16\u53f7\u4ece1\u5230N\u3002\u4ed6\u505a\u4e86M\u6b21\u64cd\u4f5c, \u6bcf\u6b21\u64cd\u4f5c\u7531a,b,k\u5b9a\u4e49\uff0c\u5176\u4e2da\u548cb\u8868\u793a\u7cd6\u679c\u7f50\u7684\u7f16\u53f7\uff0ck\u8868\u793a\u5411\u7f16\u53f7a\u5230\u7f16\u53f7b\u7684\u4e4b\u95f4\u7684\u7cd6\u679c\u7f50(\u5305\u62eca\u548cb)\u653e\u5165\u7cd6\u679c\u7684\u6570\u76ee\u3002\u5f53\u4ed6\u5b8c\u6210\u4e86M\u6b21\u64cd\u4f5c\u540e\uff0c\u4ed6\u9700\u8981\u7ed9\u51fa\u8fd9N\u4e2a\u7cd6\u679c\u7f50\u7684\u5e73\u5747\u7cd6\u679c\u6570\u91cf\u3002 <br>\n<strong>\u8f93\u5165\u683c\u5f0f</strong> <br>\n\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u7a7a\u683c\u5206\u9694\u7684\u6574\u6570N\u548cM\u3002\n\u63a5\u4e0b\u6765\u7684M\u884c\u5305\u542b3\u4e2a\u7a7a\u683c\u5206\u9694\u7684\u6574\u6570a,b\u548ck\u3002 <br>\n<strong>\u6ce8\u610f</strong> <br>\n\u7cd6\u679c\u7f50\u7684\u7f16\u53f7\u662f\u4ece1\u5230N\u3002</p>\n\n<p><strong>\u8f93\u51fa\u683c\u5f0f</strong> <br>\n\u4e00\u884c\u5305\u542b <em>\u5e73\u5747\u503c\u7684\u6574\u6570\u90e8\u5206</em> i.e. GIF(\u5e73\u5747\u6570), <br>\nGIF = \u53d6\u4e0d\u5927\u4e8e\u81ea\u53d8\u91cf\u7684\u6700\u5927\u6574\u6570.</p>\n\n<p><strong>\u7ea6\u675f\u6761\u4ef6</strong> <br>\n3 &lt;= N &lt;= 10<sup>7</sup> <br>\n1 &lt;= M &lt;= 10<sup>5</sup> <br>\n1 &lt;= a &lt;= b &lt;= N <br>\n0 &lt;= k &lt;= 10<sup>6</sup>  </p>\n\n<p><strong>\u8f93\u5165\u6837\u4f8b #00</strong>  </p>\n\n<pre><code>    5 3\n1 2 100\n2 5 100\n3 4 100\n</code></pre>\n\n<p><strong>\u8f93\u51fa\u6837\u4f8b #00</strong>  </p>\n\n<pre><code>160\n</code></pre>\n\n<p><strong>\u89e3\u91ca</strong> <br>\n\u6700\u521d\u6bcf\u4e2a\u7cd6\u7f50\u679c\u7f50\u90fd\u662f\u7a7a\u7684\uff1a  </p>\n\n<pre><code>0 0 0 0 0  \n</code></pre>\n\n<p>\u7b2c\u4e00\u6b21\u64cd\u4f5c</p>\n\n<pre><code>100 100 0 0 0  \n</code></pre>\n\n<p>\u7b2c\u4e8c\u6b21\u64cd\u4f5c  </p>\n\n<pre><code>100 200 100 100 100  \n</code></pre>\n\n<p>\u7b2c\u4e09\u6b21\u64cd\u4f5c  </p>\n\n<pre><code>100 200 200 200 100  \n</code></pre>\n\n<p>\u603b\u6570 = 800 , \u5e73\u5747\u503c = 800/5 = 160  </p></div></div>", 
                "preview": null
            }, 
            {
                "body": "\u0423 \u0410\u043d\u0438\u043c\u0435\u0448\u0430 \u0435\u0441\u0442\u044c N \u043f\u0443\u0441\u0442\u044b\u0445 \u0443\u0440\u043d, \u043f\u0440\u043e\u043d\u0443\u043c\u0435\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043e\u0442 1 \u0434\u043e N, \u043a\u0430\u0436\u0434\u0430\u044f \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0438\u043c\u0435\u0435\u0442 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u0443\u044e \u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c. \u041e\u043d \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 M \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439. \u041a\u0430\u0436\u0434\u0430\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0437\u0443\u0435\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u0430\u043c\u0438 a, b, k, \u0433\u0434\u0435 a \u0438 b - \u044d\u0442\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u044b \u0443\u0440\u043d, \u0430 k - \u044d\u0442\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043d\u0444\u0435\u0442, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043d\u0430\u0434\u043e \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u044c \u0432 \u043a\u0430\u0436\u0434\u0443\u044e \u0443\u0440\u043d\u0443 \u0441 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u043c \u043c\u0435\u0436\u0434\u0443 a \u0438 b (\u043e\u0431\u0435 \u0433\u0440\u0430\u043d\u0438\u0446\u044b \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e).\n\u041f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e \u043a\u0430\u043a \u043e\u043d \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 M \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439, \u0410\u043d\u0438\u043c\u0435\u0448 \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u0447\u0435\u043c\u0443 \u0440\u0430\u0432\u043d\u043e \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043d\u0444\u0435\u0442 \u0441\u0440\u0435\u0434\u0438 N \u0443\u0440\u043d.\n\n**\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445**  \n\u041f\u0435\u0440\u0432\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0434\u0432\u0430 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 N \u0438 M, \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u043c.  \n\u041a\u0430\u0436\u0434\u0430\u044f \u0438\u0437 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 M \u0441\u0442\u0440\u043e\u043a \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u0440\u0438 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 a, b \u0438 k. \u0427\u0438\u0441\u043b\u0430 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u044b \u043e\u0434\u0438\u043d\u043e\u0447\u043d\u044b\u043c\u0438 \u043f\u0440\u043e\u0431\u0435\u043b\u0430\u043c\u0438.  \n\n**\u041d\u0430 \u0437\u0430\u043c\u0435\u0442\u043a\u0443**  \n\u0418\u043d\u0434\u0435\u043a\u0441\u044b \u0443\u0440\u043d - \u044d\u0442\u043e \u0446\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 \u043e\u0442 1 \u0434\u043e N.\n\n**\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445**  \n\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 *\u0446\u0435\u043b\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u0440\u0435\u0434\u043d\u0435\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043a\u043e\u043d\u0444\u0435\u0442 \u0432 \u0443\u0440\u043d\u0430\u0445* \u0432 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435. \u0414\u0440\u0443\u0433\u0438\u043c\u0438 \u0441\u043b\u043e\u0432\u0430\u043c\u0438 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 GIF(\u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435), \u0433\u0434\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u044f GIF(x) \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442 \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u0446\u0435\u043b\u043e\u0435 \u043c\u0435\u043d\u044c\u0448\u0435 \u043b\u0438\u0431\u043e \u0440\u0430\u0432\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f x.\n\n**\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f**  \n3 <= N <= 10<sup>7</sup>  \n1 <= M <= 10<sup>5</sup>  \n1 <= a <= b <= N  \n0 <= k <= 10<sup>6</sup>  \n\n**\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445**  \n\n    5 3\n\t1 2 100\n\t2 5 100\n\t3 4 100\n\n    \n**\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445**  \n\n    160\n\n**\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435**  \n\u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u043a\u0430\u0436\u0434\u0430\u044f \u0443\u0440\u043d\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 0 \u043a\u043e\u043d\u0444\u0435\u0442:  \n\n    0 0 0 0 0  \n\n\u041f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0432\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438:  \n\n    100 100 0 0 0  \n\n\u041f\u043e\u0441\u043b\u0435 \u0432\u0442\u043e\u0440\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438:  \n\n    100 200 100 100 100  \n\n\u041f\u043e\u0441\u043b\u0435 \u0442\u0440\u0435\u0442\u044c\u0435\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438:  \n\n    100 200 200 200 100  \n\n\u0412\u0441\u0435\u0433\u043e = 800, \u0421\u0440\u0435\u0434\u043d\u0435\u0435 = 800/5 = 160  \n", 
                "problem_statement_fields": {
                    "sample_output": " ", 
                    "problem_statement": "\u0423 \u0410\u043d\u0438\u043c\u0435\u0448\u0430 \u0435\u0441\u0442\u044c N \u043f\u0443\u0441\u0442\u044b\u0445 \u0443\u0440\u043d, \u043f\u0440\u043e\u043d\u0443\u043c\u0435\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043e\u0442 1 \u0434\u043e N, \u043a\u0430\u0436\u0434\u0430\u044f \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0438\u043c\u0435\u0435\u0442 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u0443\u044e \u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c. \u041e\u043d \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 M \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439. \u041a\u0430\u0436\u0434\u0430\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0437\u0443\u0435\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u0430\u043c\u0438 a, b, k, \u0433\u0434\u0435 a \u0438 b - \u044d\u0442\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u044b \u0443\u0440\u043d, \u0430 k - \u044d\u0442\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043d\u0444\u0435\u0442, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043d\u0430\u0434\u043e \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u044c \u0432 \u043a\u0430\u0436\u0434\u0443\u044e \u0443\u0440\u043d\u0443 \u0441 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u043c \u043c\u0435\u0436\u0434\u0443 a \u0438 b (\u043e\u0431\u0435 \u0433\u0440\u0430\u043d\u0438\u0446\u044b \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e).\n\u041f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e \u043a\u0430\u043a \u043e\u043d \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 M \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439, \u0410\u043d\u0438\u043c\u0435\u0448 \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u0447\u0435\u043c\u0443 \u0440\u0430\u0432\u043d\u043e \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043d\u0444\u0435\u0442 \u0441\u0440\u0435\u0434\u0438 N \u0443\u0440\u043d.\n\n**\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445**  \n\u041f\u0435\u0440\u0432\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0434\u0432\u0430 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 N \u0438 M, \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u043c.  \n\u041a\u0430\u0436\u0434\u0430\u044f \u0438\u0437 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 M \u0441\u0442\u0440\u043e\u043a \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u0440\u0438 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 a, b \u0438 k. \u0427\u0438\u0441\u043b\u0430 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u044b \u043e\u0434\u0438\u043d\u043e\u0447\u043d\u044b\u043c\u0438 \u043f\u0440\u043e\u0431\u0435\u043b\u0430\u043c\u0438.  \n\n**\u041d\u0430 \u0437\u0430\u043c\u0435\u0442\u043a\u0443**  \n\u0418\u043d\u0434\u0435\u043a\u0441\u044b \u0443\u0440\u043d - \u044d\u0442\u043e \u0446\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 \u043e\u0442 1 \u0434\u043e N.\n\n**\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445**  \n\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 *\u0446\u0435\u043b\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u0440\u0435\u0434\u043d\u0435\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043a\u043e\u043d\u0444\u0435\u0442 \u0432 \u0443\u0440\u043d\u0430\u0445* \u0432 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435. \u0414\u0440\u0443\u0433\u0438\u043c\u0438 \u0441\u043b\u043e\u0432\u0430\u043c\u0438 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 GIF(\u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435), \u0433\u0434\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u044f GIF(x) \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442 \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u0446\u0435\u043b\u043e\u0435 \u043c\u0435\u043d\u044c\u0448\u0435 \u043b\u0438\u0431\u043e \u0440\u0430\u0432\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f x.\n\n**\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f**  \n3 <= N <= 10<sup>7</sup>  \n1 <= M <= 10<sup>5</sup>  \n1 <= a <= b <= N  \n0 <= k <= 10<sup>6</sup>  \n\n**\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445**  \n\n    5 3\n\t1 2 100\n\t2 5 100\n\t3 4 100\n\n    \n**\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445**  \n\n    160\n\n**\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435**  \n\u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u043a\u0430\u0436\u0434\u0430\u044f \u0443\u0440\u043d\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 0 \u043a\u043e\u043d\u0444\u0435\u0442:  \n\n    0 0 0 0 0  \n\n\u041f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0432\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438:  \n\n    100 100 0 0 0  \n\n\u041f\u043e\u0441\u043b\u0435 \u0432\u0442\u043e\u0440\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438:  \n\n    100 200 100 100 100  \n\n\u041f\u043e\u0441\u043b\u0435 \u0442\u0440\u0435\u0442\u044c\u0435\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438:  \n\n    100 200 200 200 100  \n\n\u0412\u0441\u0435\u0433\u043e = 800, \u0421\u0440\u0435\u0434\u043d\u0435\u0435 = 800/5 = 160  \n", 
                    "input_format": " ", 
                    "explanation": " ", 
                    "sample_input": " ", 
                    "output_format": " "
                }, 
                "name": "Filling Jars", 
                "language": "Russian", 
                "challenge_id": 1637, 
                "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>\u0423 \u0410\u043d\u0438\u043c\u0435\u0448\u0430 \u0435\u0441\u0442\u044c N \u043f\u0443\u0441\u0442\u044b\u0445 \u0443\u0440\u043d, \u043f\u0440\u043e\u043d\u0443\u043c\u0435\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043e\u0442 1 \u0434\u043e N, \u043a\u0430\u0436\u0434\u0430\u044f \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0438\u043c\u0435\u0435\u0442 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u0443\u044e \u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c. \u041e\u043d \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 M \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439. \u041a\u0430\u0436\u0434\u0430\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0437\u0443\u0435\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u0430\u043c\u0438 a, b, k, \u0433\u0434\u0435 a \u0438 b - \u044d\u0442\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u044b \u0443\u0440\u043d, \u0430 k - \u044d\u0442\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043d\u0444\u0435\u0442, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043d\u0430\u0434\u043e \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u044c \u0432 \u043a\u0430\u0436\u0434\u0443\u044e \u0443\u0440\u043d\u0443 \u0441 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u043c \u043c\u0435\u0436\u0434\u0443 a \u0438 b (\u043e\u0431\u0435 \u0433\u0440\u0430\u043d\u0438\u0446\u044b \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e).\n\u041f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e \u043a\u0430\u043a \u043e\u043d \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 M \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439, \u0410\u043d\u0438\u043c\u0435\u0448 \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043a\u0430\u0437\u0430\u0442\u044c, \u0447\u0435\u043c\u0443 \u0440\u0430\u0432\u043d\u043e \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043d\u0444\u0435\u0442 \u0441\u0440\u0435\u0434\u0438 N \u0443\u0440\u043d.</p>\n\n<p><strong>\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445</strong> <br>\n\u041f\u0435\u0440\u0432\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0434\u0432\u0430 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 N \u0438 M, \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u043c. <br>\n\u041a\u0430\u0436\u0434\u0430\u044f \u0438\u0437 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 M \u0441\u0442\u0440\u043e\u043a \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u0440\u0438 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 a, b \u0438 k. \u0427\u0438\u0441\u043b\u0430 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u044b \u043e\u0434\u0438\u043d\u043e\u0447\u043d\u044b\u043c\u0438 \u043f\u0440\u043e\u0431\u0435\u043b\u0430\u043c\u0438.  </p>\n\n<p><strong>\u041d\u0430 \u0437\u0430\u043c\u0435\u0442\u043a\u0443</strong> <br>\n\u0418\u043d\u0434\u0435\u043a\u0441\u044b \u0443\u0440\u043d - \u044d\u0442\u043e \u0446\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 \u043e\u0442 1 \u0434\u043e N.</p>\n\n<p><strong>\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445</strong> <br>\n\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 <em>\u0446\u0435\u043b\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u0440\u0435\u0434\u043d\u0435\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043a\u043e\u043d\u0444\u0435\u0442 \u0432 \u0443\u0440\u043d\u0430\u0445</em> \u0432 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435. \u0414\u0440\u0443\u0433\u0438\u043c\u0438 \u0441\u043b\u043e\u0432\u0430\u043c\u0438 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 GIF(\u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435), \u0433\u0434\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u044f GIF(x) \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442 \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u0446\u0435\u043b\u043e\u0435 \u043c\u0435\u043d\u044c\u0448\u0435 \u043b\u0438\u0431\u043e \u0440\u0430\u0432\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f x.</p>\n\n<p><strong>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f</strong> <br>\n3 &lt;= N &lt;= 10<sup>7</sup> <br>\n1 &lt;= M &lt;= 10<sup>5</sup> <br>\n1 &lt;= a &lt;= b &lt;= N <br>\n0 &lt;= k &lt;= 10<sup>6</sup>  </p>\n\n<p><strong>\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445</strong>  </p>\n\n<pre><code>5 3\n1 2 100\n2 5 100\n3 4 100\n</code></pre>\n\n<p><strong>\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445</strong>  </p>\n\n<pre><code>160\n</code></pre>\n\n<p><strong>\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435</strong> <br>\n\u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u043a\u0430\u0436\u0434\u0430\u044f \u0443\u0440\u043d\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 0 \u043a\u043e\u043d\u0444\u0435\u0442:  </p>\n\n<pre><code>0 0 0 0 0  \n</code></pre>\n\n<p>\u041f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0432\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438:  </p>\n\n<pre><code>100 100 0 0 0  \n</code></pre>\n\n<p>\u041f\u043e\u0441\u043b\u0435 \u0432\u0442\u043e\u0440\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438:  </p>\n\n<pre><code>100 200 100 100 100  \n</code></pre>\n\n<p>\u041f\u043e\u0441\u043b\u0435 \u0442\u0440\u0435\u0442\u044c\u0435\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438:  </p>\n\n<pre><code>100 200 200 200 100  \n</code></pre>\n\n<p>\u0412\u0441\u0435\u0433\u043e = 800, \u0421\u0440\u0435\u0434\u043d\u0435\u0435 = 800/5 = 160  </p></div></div>", 
                "preview": null
            }
        ], 
        "codechecker_handle": "", 
        "countdown_time": 0, 
        "author_avatar": "https://hrcdn.net/s3_pub/hr-avatars/20791764-b9ea-4720-bc8c-416ec41364c8/150x150.png", 
        "custom_tabs": null, 
        "judgebot_language": null, 
        "custom_case": true, 
        "requirements_description": null, 
        "is_skip_band_challenge": false, 
        "custom_checker_language": null
    }
}