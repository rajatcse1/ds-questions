{
    "status": true, 
    "model": {
        "onboarding": null, 
        "python_template": "#!/bin/python\n\n\n\n# sample code snippet illustrating input and output\n\nN = input()\nV = map(int,raw_input().split())\nresult = 0\n\n\nprint result", 
        "hacker": {
            "username": "HackerRank", 
            "is_admin": true, 
            "id": 15055, 
            "avatar": "https://hrcdn.net/s3_pub/hr-avatars/4c95f96b-1ff9-46ed-98f8-cb3cb4ed8834/150x150.png"
        }, 
        "solved_count": 342, 
        "leaderboard_out_of_sync_message": null, 
        "public_test_cases": true, 
        "checker_program": null, 
        "topics": [], 
        "time_left": null, 
        "updated_at": "2017-07-11T15:41:36.000Z", 
        "author_name": "HackerRank", 
        "has_started": true, 
        "epoch_starttime": null, 
        "has_all_test_cases_public": false, 
        "difficulty_name": "Medium", 
        "require_unlock": true, 
        "cpp_template": "/* Sample program illustrating input and output methods */\n\n#include<iostream>\nusing namespace std;\n\nint main(void){\n\n\n\tint N;\n        cin >> N;\n\n\tint V[N];\n\tfor(int i = 0; i < N; i++){\n\t\tcin >> V[i];\n\t}\n\t\n\tint result = 0;\n\tcout << result << \"\\n\";\n\t\n\n\n\treturn 0;\n}", 
        "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>N ants are in a circular race. The length of the race is 1000 meters and ant number i is initially Vi meters far from starting point (point 0) of the race in clockwise order. All the ants walk with a speed of 0.1 meters per second, some of them walk in clockwise order, some in counter clockwise order. When two ants meet at a point, they say \"Hi\" to each other and both of them change their direction of walking to the opposite direction. This process is timeless, meaning they say \"Hi\" and change their direction in 0 seconds.</p>\n\n<p>You are given the initial position of ants, you don't know their initial directions but you want to know how many times do they say \"Hi\" to each other after 1000000006 ( 10^9+6 seconds ). You need to find the initial walking direction of ants such that, c1+c2+c3+...+cn is maximized, where ci is the number of times ant number i say \"Hi\". Print this maximum value.</p>\n\n<p><strong>Input:</strong> <br>\nThe first line of the input contains an integer N, the number of ants. N is not greater than 100. <br>\nNext line contains n numbers V1 , V2 , ... , VN. All Vi are non negative integers less than 1000. All Vi are distinct.</p>\n\n<p><strong>Output:</strong> <br>\nOn the only line of the output print an integer being the answer to the test.</p>\n\n<p><strong>Sample Input</strong> <br>\n2 <br>\n0 500</p>\n\n<p><strong>Sample Output</strong> <br>\n400000</p>\n\n<p><strong>Explanation</strong> <br>\nIn the example there are two ants, In case their direction is the same, they will never say hi to each other, in the other case they will say \"Hi\" to each other in times 2500, 7500,12500, ... , 999999750. so the result for an Ant would be (999997500 - 2500)/5000+1 = 200000. Hence the answer is 200000*2 = 400000.</p></div></div></div>", 
        "cpp14_template": "/* Sample program illustrating input and output methods */\n\n#include<iostream>\nusing namespace std;\n\nint main(void){\n\n\n\tint N;\n        cin >> N;\n\n\tint V[N];\n\tfor(int i = 0; i < N; i++){\n\t\tcin >> V[i];\n\t}\n\t\n\tint result = 0;\n\tcout << result << \"\\n\";\n\t\n\n\n\treturn 0;\n}", 
        "id": 95, 
        "leaderboard_out_of_sync": null, 
        "has_ended": false, 
        "languages": [
            "bash", 
            "c", 
            "cpp", 
            "java", 
            "csharp", 
            "php", 
            "ruby", 
            "python", 
            "perl", 
            "haskell", 
            "clojure", 
            "scala", 
            "lua", 
            "go", 
            "javascript", 
            "erlang", 
            "sbcl", 
            "d", 
            "ocaml", 
            "pascal", 
            "python3", 
            "groovy", 
            "objectivec", 
            "fsharp", 
            "visualbasic", 
            "lolcode", 
            "smalltalk", 
            "tcl", 
            "java8", 
            "r", 
            "racket", 
            "rust", 
            "swift", 
            "elixir", 
            "cpp14", 
            "kotlin", 
            "julia"
        ], 
        "is_custom": false, 
        "compile_and_test": true, 
        "default_language": null, 
        "migrated_resource": null, 
        "submit_disabled": false, 
        "expert_solution_status": false, 
        "can_solve": true, 
        "company_id": null, 
        "tagAncestry": [], 
        "custom": false, 
        "can_be_viewed": true, 
        "track": {
            "name": "Number Theory", 
            "taxonomy": 1, 
            "track_slug": "mathematics", 
            "track_id": 22, 
            "track_name": "Mathematics", 
            "id": 52, 
            "rewards_system_enabled": null, 
            "slug": "number-theory"
        }, 
        "primary_contest": null, 
        "c_template": "/* Sample program illustrating input and output methods */\n\n#include<stdio.h>\n\nint main(){\n\n//Helpers for input/output\n\tint i, N;\n\tint V[102];\n\t\n\tscanf(\"%d\", &N);\n\tfor(i=0; i<N; i++){\n\t\tscanf(\"%d\", &(V[i]));\n\t}\n\t\n\tint result;\n\tprintf(\"%d\\n\", result);\n\n}", 
        "factor": 60, 
        "is_solution_unlocked": false, 
        "preview": "N ants are walking on a track. When they meet each other, they say 'Hi' and reverse directions. What directions should they start walking in to maximize their greetings? What is this maximum number?", 
        "is_editorial_available": true, 
        "status": null, 
        "category": "algorithm", 
        "public_solutions": true, 
        "java_template": "/* Sample program illustrating input and output */\n\nimport java.util.*;\n\nclass Solution{\n\tpublic static void main( String args[] ){\n\t\t\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\tint N;\n\t\tN = in.nextInt();\n\t\t\n\t\tint V[] = new int[N];\n\t\tfor(int i=0; i<N; i++){\n\t\t\tV[i] = in.nextInt();\n\t\t}\n\t\t\n\t\tint result = 0;\n\t\tSystem.out.println( result );\n\t\t\n\t}\n}", 
        "color": null, 
        "deleted": false, 
        "dynamic": true, 
        "company": null, 
        "moderator_or_support": false, 
        "is_text": false, 
        "solved_score": 0.5, 
        "difficulty_score": "0.315", 
        "difficulty": 0.6768149882903981, 
        "active": true, 
        "show_skeliton": null, 
        "max_score": 60, 
        "slug": "ants", 
        "contest_slug": "master", 
        "csharp_template": "// Sample program illustrating input and output\n\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nclass Solution {\n\n\tstatic void Main(String[] args) {\n\t\tint N;\n\t\tN = Convert.ToInt32(Console.ReadLine());\n\t\t\n\t\tint [] V =new int [N];\n\t\t\n\t\tstring numbers = Console.ReadLine(); \n\t\tstring[] split = numbers.Split(new Char[] {' ', '\\t', '\\n'});\n\t\t\n\t\tint i = 0;\n\n\t\tforeach (string s in split){\n\t\t\tif( s.Trim() != \"\"){\n\t\t\t\tV[i++] = Convert.ToInt32(s);\n\t\t\t}\n\t\t}\t\n\t\t\n\t\tint result = 0;\n\t\tConsole.WriteLine(result);\n\t}\n}", 
        "user_score": 0, 
        "real_dynamic": false, 
        "kind": "code", 
        "player_count": 2, 
        "submitted_hackers_count": 483, 
        "name": "Ants", 
        "is_preview_contest": false, 
        "level": 51, 
        "success_ratio": 0.7080745341614907, 
        "total_count": 483, 
        "created_at": "2013-01-04T20:28:29.000Z", 
        "epoch_endtime": null, 
        "judgebot": null, 
        "available_translations": [], 
        "codechecker_handle": "", 
        "countdown_time": 0, 
        "author_avatar": "https://hrcdn.net/s3_pub/hr-avatars/4c95f96b-1ff9-46ed-98f8-cb3cb4ed8834/150x150.png", 
        "custom_tabs": null, 
        "judgebot_language": null, 
        "custom_case": true, 
        "requirements_description": null, 
        "is_skip_band_challenge": false, 
        "custom_checker_language": null
    }
}