{
    "status": true, 
    "model": {
        "onboarding": null, 
        "tagAncestry": [], 
        "solved_count": 227, 
        "leaderboard_out_of_sync_message": null, 
        "public_test_cases": true, 
        "checker_program": null, 
        "topics": [], 
        "time_left": null, 
        "updated_at": "2016-09-01T16:29:12.000Z", 
        "author_name": "abhiranjan", 
        "has_started": true, 
        "epoch_starttime": null, 
        "has_all_test_cases_public": false, 
        "difficulty_name": "Medium", 
        "require_unlock": true, 
        "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>Range Minimum Query (<a href=\"http://en.wikipedia.org/wiki/Range_Minimum_Query\">RMQ</a>) is a set of problems which deals with finding a property (here minimum) of a range. Segment Tree can be very helpful when solving with such problems. A segment tree is a tree like data structure which is used to store the information about intervals. Here's the [(<a href=\"http://en.wikipedia.org/wiki/Segment_tree\">wiki link</a>)] of it.</p>\n\n<p>You are given a array of <em>N</em> integers, <em>arr[0], arr[1], .., arr[(N-1)]</em>. And you are given a list of ranges. For each range, <em>(l, r)</em> you have to find the minimum value between range <em>arr[l], arr[l+1], arr[l+2], .., arr[r]</em>.</p>\n\n<p><strong>Input</strong> <br>\nFirst line will contain two integers, <em>N M</em>, length of array and number of queries. Then in next line, there are N space separated integers which represent the array, <em>arr[0], arr[1], .., arr[N-1]</em>. Then <em>M</em> line follows. Each <em>M</em> line will contain two integers, <em>l r</em>, representing a range.</p>\n\n<p><strong>Output</strong> <br>\nFor each range, <em>(l, r)</em>, you have to print the minimum integer in subarray <em>arr[l], arr[l+1], .., arr[r]</em> in separate line.</p>\n\n<p><strong>Constraints</strong> <br>\n<em>1 &lt;= N, M &lt;= 10<sup>5</sup></em> <br>\n<em>-10<sup>5</sup> &lt;= arr[i] &lt;= 10<sup>5</sup></em>  , where <em>0 &lt;= i &lt; N</em> <br>\n<em>0 &lt;= l &lt;= r &lt; N</em>  </p>\n\n<p><strong>Sample Input</strong>  </p>\n\n<pre><code>10 5\n10 20 30 40 11 22 33 44 15 5\n0 5\n1 2\n8 9\n0 9\n4 6\n</code></pre>\n\n<p><strong>Sample Output</strong>  </p>\n\n<pre><code>10\n20\n5\n5\n11\n</code></pre>\n\n<p><strong>Explanation</strong>  </p>\n\n<ul>\n<li>For range (0, 5), subarray will be [10, 20, 30, 40, 11, 22]. So minimum value will be 10.</li>\n<li>For range (1, 2), subarray will be [20, 30]. Minimum value = 20.</li>\n<li>For range (8, 9), subarray is [15, 5]. Minimum value = 5.</li>\n<li>For range (0, 9), Here we have to find the minimum (5) of the whole array.</li>\n<li>For range (3, 5), subarray is [40, 11, 22]. Minimum value = 11.</li>\n</ul></div></div></div>", 
        "hacker": {
            "username": "HackerRank", 
            "is_admin": true, 
            "id": 15055, 
            "avatar": "https://hrcdn.net/s3_pub/hr-avatars/4c95f96b-1ff9-46ed-98f8-cb3cb4ed8834/150x150.png"
        }, 
        "id": 1546, 
        "leaderboard_out_of_sync": null, 
        "has_ended": false, 
        "languages": [
            "haskell", 
            "clojure", 
            "scala", 
            "erlang", 
            "ocaml", 
            "sbcl", 
            "fsharp", 
            "racket", 
            "elixir"
        ], 
        "is_custom": false, 
        "compile_and_test": true, 
        "default_language": null, 
        "migrated_resource": null, 
        "submit_disabled": null, 
        "expert_solution_status": false, 
        "can_solve": true, 
        "company_id": null, 
        "custom": null, 
        "can_be_viewed": true, 
        "track": {
            "name": "Functional Structures", 
            "taxonomy": 3, 
            "track_slug": "fp", 
            "track_id": 5, 
            "track_name": "Functional Programming", 
            "id": 45, 
            "rewards_system_enabled": null, 
            "slug": "ds"
        }, 
        "primary_contest": {
            "migration_status": null, 
            "contest_broadcast": null, 
            "hacker_timelimit": null, 
            "notification": null, 
            "qualification_rule_value": null, 
            "leaderboard_backend": null, 
            "expose_stats": null, 
            "updated_at": "2016-05-06T21:50:15.000Z", 
            "custom_leaderboard_column_name": null, 
            "organization_type": null, 
            "ended": true, 
            "epoch_starttime": 1391754600, 
            "timezone": "PST", 
            "disable_forum": null, 
            "id": 620, 
            "primary_track_id": 5, 
            "limited_participants": null, 
            "school_leaderboard_enabled": false, 
            "time_limited_contest": false, 
            "archived": true, 
            "rated": true, 
            "parent_contest_id": null, 
            "leaderboard_out_of_sync_message": null, 
            "leaderboard_type": "country", 
            "tagline": "A contest for functional programming enthusiasts.", 
            "effective_epoch_endtime": 1392618600, 
            "show_participants_info": null, 
            "homepage_background_color": "", 
            "organization_name": null, 
            "track": {
                "name": "Functional Programming", 
                "id": 5, 
                "priority": 2, 
                "descriptions": "The art of programming with expressions and functions. Experience the challenge of programming without state. A good paradigm for those interested in Map-Reduce and parallel computing.", 
                "rewards_system_enabled": null, 
                "slug": "fp"
            }, 
            "primary_tag_id": null, 
            "hide_navigation": null, 
            "show_penalty": null, 
            "effective_time_left": -110738191.42110234, 
            "hidden": null, 
            "homepage": "", 
            "public": true, 
            "testers_contest": null, 
            "description": "Let's code the functional way. This is a programming paradigm where we code \"what\" instead of \"how\". In this we can clearly separate \"pure\" code from \"impure\".  \n  \nYou can code in any of the functional languages, including Haskell, Scala, Lisp, Erlang, Clojure and OCaml.", 
            "hide_difficulty": null, 
            "started": true, 
            "time_left": -110738191.41438727, 
            "challenges_count": 3, 
            "qualification_rule_msg": null, 
            "leaderboard_out_of_sync": null, 
            "team_event": false, 
            "disable_fsi": null, 
            "hide_submissions": null, 
            "leaderboard_format": "", 
            "leaderboard_broadcast_message": null, 
            "has_tracks": null, 
            "college_public": null, 
            "endtime": "2014-02-17T06:30:00.000Z", 
            "qualification_rule_type": null, 
            "slug": "hindley-milner-feb14", 
            "hide_leaderboard": null, 
            "kind": null, 
            "comment_live_sync": null, 
            "name": "Functional Programming Contest - Feb'14", 
            "is_multi_round": false, 
            "created_at": "2014-01-30T14:26:02.000Z", 
            "epoch_endtime": 1392618600, 
            "company_associated_contest": null, 
            "rating_category": "Functional Programming", 
            "has_codesprint_reg_page": null, 
            "starttime": "2014-02-07T06:30:00.000Z", 
            "is_rating_updated": true, 
            "leaderboard_freeze_time": null, 
            "migration_disabled": null, 
            "template_id": 128
        }, 
        "factor": 50, 
        "is_solution_unlocked": false, 
        "preview": "Find the minimum value in a range.", 
        "is_editorial_available": false, 
        "status": null, 
        "category": "ai", 
        "public_solutions": true, 
        "color": null, 
        "deleted": false, 
        "dynamic": true, 
        "company": null, 
        "moderator_or_support": false, 
        "is_text": false, 
        "solved_score": 0.5, 
        "difficulty_score": "0.328", 
        "difficulty": 0.6574074074074074, 
        "active": true, 
        "show_skeliton": null, 
        "max_score": 50, 
        "slug": "range-minimum-query", 
        "contest_slug": "master", 
        "user_score": 0, 
        "real_dynamic": false, 
        "kind": "code", 
        "player_count": 2, 
        "submitted_hackers_count": 344, 
        "name": "Range Minimum Query", 
        "is_preview_contest": false, 
        "level": 53, 
        "success_ratio": 0.6598837209302325, 
        "total_count": 344, 
        "created_at": "2013-12-16T09:25:32.000Z", 
        "epoch_endtime": null, 
        "judgebot": null, 
        "available_translations": [], 
        "codechecker_handle": "", 
        "countdown_time": 0, 
        "author_avatar": "https://hrcdn.net/s3_pub/hr-avatars/bb90185f-75e5-4069-8206-6decf4427384/150x150.png", 
        "custom_tabs": null, 
        "judgebot_language": null, 
        "custom_case": true, 
        "requirements_description": null, 
        "is_skip_band_challenge": false, 
        "custom_checker_language": null
    }
}