{
    "status": true, 
    "model": {
        "onboarding": null, 
        "tagAncestry": [], 
        "solved_count": 309, 
        "leaderboard_out_of_sync_message": null, 
        "public_test_cases": true, 
        "checker_program": null, 
        "topics": [], 
        "time_left": null, 
        "updated_at": "2017-05-18T03:46:10.000Z", 
        "author_name": "abhiranjan", 
        "has_started": true, 
        "epoch_starttime": null, 
        "has_all_test_cases_public": false, 
        "difficulty_name": "Medium", 
        "require_unlock": true, 
        "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>In 1974, a very fast string searching method was proposed by the name of <a href=\"http://en.wikipedia.org/wiki/Knuth%E2%80%93Morris%E2%80%93Pratt_algorithm\">KMP algorithm</a> with linear run-time complexity. Your task here is to code this (or any similar) algorithm in a functional language.</p>\n\n<p>Given two strings <em>text</em> and <em>pat</em>, find whether <em>pat</em> exists as a substring in <em>text</em>.</p>\n\n<p><strong>Input</strong> <br>\nFirst line will contain an integer, <em>T</em>, which represents total number of test cases.\nThen <em>T</em> test cases follow. Each case will contains two lines each containing a string. First line will contain <em>text</em> while the second line will contain <em>pat</em>.</p>\n\n<p><strong>Output</strong> <br>\nFor each case print <code>YES</code> if <em>pat</em> is a substring of <em>text</em> otherwise <code>NO</code>.</p>\n\n<p><strong>Constraints</strong> <br>\n1 \u2264 <em>T</em> \u2264 10 <br>\n1 \u2264 <em>|pat|</em> \u2264 <em>|text|</em> \u2264 100000 <br>\nAll characters in <em>text</em> and <em>pat</em> will be lowercase latin character ('<em>a</em>'-'<em>z</em>').  </p>\n\n<p><strong>Sample Input</strong>  </p>\n\n<pre><code>4\nabcdef\ndef\ncomputer\nmuter\nstringmatchingmat\ningmat\nvideobox\nvideobox\n</code></pre>\n\n<p><strong>Sample Output</strong>  </p>\n\n<pre><code>YES\nNO\nYES\nYES\n</code></pre>\n\n<p><strong>Explanation</strong> <br>\n<em>Test Case #00:</em> Here <em>\"def\"</em> is present at the end of <em>\"abcdef\"</em>. <br>\n<em>Test Case #01:</em> Though <em>\"muter\"</em> is a subsequence here, but we need it to be asubstring. <br>\n<em>Test Case #02:</em> _\"ingmat\"_ is present at index <em>3</em>  and <em>11</em>. <br>\n<em>Test Case #03:</em> Both strings are same.  </p></div></div></div>", 
        "hacker": {
            "username": "HackerRank", 
            "is_admin": true, 
            "id": 15055, 
            "avatar": "https://hrcdn.net/s3_pub/hr-avatars/4c95f96b-1ff9-46ed-98f8-cb3cb4ed8834/150x150.png"
        }, 
        "id": 2175, 
        "leaderboard_out_of_sync": null, 
        "has_ended": false, 
        "languages": [
            "haskell", 
            "clojure", 
            "scala", 
            "erlang", 
            "sbcl", 
            "ocaml", 
            "fsharp", 
            "racket", 
            "elixir"
        ], 
        "is_custom": false, 
        "compile_and_test": true, 
        "default_language": null, 
        "migrated_resource": null, 
        "submit_disabled": false, 
        "expert_solution_status": false, 
        "can_solve": true, 
        "company_id": null, 
        "custom": false, 
        "can_be_viewed": true, 
        "track": {
            "name": "Functional Structures", 
            "taxonomy": 3, 
            "track_slug": "fp", 
            "track_id": 5, 
            "track_name": "Functional Programming", 
            "id": 45, 
            "rewards_system_enabled": null, 
            "slug": "ds"
        }, 
        "primary_contest": {
            "migration_status": null, 
            "contest_broadcast": null, 
            "hacker_timelimit": null, 
            "notification": null, 
            "qualification_rule_value": null, 
            "leaderboard_backend": null, 
            "expose_stats": null, 
            "updated_at": "2016-05-06T21:51:14.000Z", 
            "custom_leaderboard_column_name": null, 
            "organization_type": null, 
            "ended": true, 
            "epoch_starttime": 1395383400, 
            "timezone": "PST", 
            "disable_forum": null, 
            "id": 747, 
            "primary_track_id": 5, 
            "limited_participants": null, 
            "school_leaderboard_enabled": false, 
            "time_limited_contest": false, 
            "archived": true, 
            "rated": true, 
            "parent_contest_id": null, 
            "leaderboard_out_of_sync_message": null, 
            "leaderboard_type": "country", 
            "tagline": "A contest for functional programming enthusiasts.", 
            "effective_epoch_endtime": 1396247400, 
            "show_participants_info": null, 
            "homepage_background_color": "", 
            "organization_name": null, 
            "track": {
                "name": "Functional Programming", 
                "id": 5, 
                "priority": 2, 
                "descriptions": "The art of programming with expressions and functions. Experience the challenge of programming without state. A good paradigm for those interested in Map-Reduce and parallel computing.", 
                "rewards_system_enabled": null, 
                "slug": "fp"
            }, 
            "primary_tag_id": null, 
            "hide_navigation": null, 
            "show_penalty": null, 
            "effective_time_left": -107109384.99165161, 
            "hidden": null, 
            "homepage": "", 
            "public": true, 
            "testers_contest": null, 
            "description": "Let's code the functional way. This is a programming paradigm where we code \"what\" instead of \"how\". In this we can clearly separate \"pure\" code from \"impure\".  \n  \nYou can code in any of the functional languages, including Haskell, Scala, Lisp, Erlang, Clojure, OCaml and F#.", 
            "hide_difficulty": null, 
            "started": true, 
            "time_left": -107109384.98851871, 
            "challenges_count": 5, 
            "qualification_rule_msg": null, 
            "leaderboard_out_of_sync": null, 
            "team_event": false, 
            "disable_fsi": null, 
            "hide_submissions": null, 
            "leaderboard_format": "", 
            "leaderboard_broadcast_message": null, 
            "has_tracks": null, 
            "college_public": null, 
            "endtime": "2014-03-31T06:30:00.000Z", 
            "qualification_rule_type": null, 
            "slug": "lambda-calculi-mar14", 
            "hide_leaderboard": null, 
            "kind": null, 
            "comment_live_sync": null, 
            "name": "Functional Programming Contest - March'14", 
            "is_multi_round": false, 
            "created_at": "2014-03-10T11:10:13.000Z", 
            "epoch_endtime": 1396247400, 
            "company_associated_contest": null, 
            "rating_category": "Functional Programming", 
            "has_codesprint_reg_page": null, 
            "starttime": "2014-03-21T06:30:00.000Z", 
            "is_rating_updated": true, 
            "leaderboard_freeze_time": null, 
            "migration_disabled": null, 
            "template_id": 136
        }, 
        "factor": 50, 
        "is_solution_unlocked": false, 
        "preview": "Write KMP functionally.", 
        "is_editorial_available": false, 
        "status": null, 
        "category": "ai", 
        "public_solutions": true, 
        "color": null, 
        "deleted": false, 
        "dynamic": true, 
        "company": null, 
        "moderator_or_support": false, 
        "is_text": false, 
        "solved_score": 0.5, 
        "difficulty_score": "0.265", 
        "difficulty": 0.7532467532467533, 
        "active": true, 
        "show_skeliton": null, 
        "max_score": 50, 
        "slug": "kmp-fp", 
        "contest_slug": "master", 
        "user_score": 0, 
        "real_dynamic": false, 
        "kind": "code", 
        "player_count": 2, 
        "submitted_hackers_count": 451, 
        "name": "Substring Searching", 
        "is_preview_contest": false, 
        "level": 57, 
        "success_ratio": 0.6851441241685144, 
        "total_count": 451, 
        "created_at": "2014-03-20T20:53:43.000Z", 
        "epoch_endtime": null, 
        "judgebot": null, 
        "available_translations": [], 
        "codechecker_handle": null, 
        "countdown_time": 0, 
        "author_avatar": "https://hrcdn.net/s3_pub/hr-avatars/bb90185f-75e5-4069-8206-6decf4427384/150x150.png", 
        "custom_tabs": null, 
        "judgebot_language": null, 
        "custom_case": true, 
        "requirements_description": null, 
        "is_skip_band_challenge": false, 
        "custom_checker_language": null
    }
}