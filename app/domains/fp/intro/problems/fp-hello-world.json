{
    "status": true, 
    "model": {
        "onboarding": null, 
        "tagAncestry": [], 
        "solved_count": 31344, 
        "leaderboard_out_of_sync_message": null, 
        "public_test_cases": true, 
        "checker_program": null, 
        "topics": [], 
        "time_left": null, 
        "updated_at": "2016-09-01T16:24:10.000Z", 
        "author_name": "idlecool", 
        "scala_template": "def f() = println(\"\")", 
        "has_started": true, 
        "epoch_starttime": null, 
        "has_all_test_cases_public": false, 
        "difficulty_name": "Easy", 
        "require_unlock": true, 
        "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>A \"<em>Hello World</em>\" program has been widely adopted as the introductory program for learning how to code. So, let's start functional programming by writing the same program.</p><p></p>\n\n<p><br>\n<strong>Sample Input</strong></p>\n\n<pre><code>(Nil)  \n</code></pre>\n\n<p><strong>Sample Output</strong></p>\n\n<pre><code>Hello World\n</code></pre>\n\n<p><strong>Method Signature</strong>  </p>\n\n<pre>Number Of Parameters: 0\nParameters: []\nReturns: nil\nBehavior: Prints \"Hello World\"\n</pre>  \n\n<p><strong>For Hackers Using Clojure</strong>  </p>\n\n<p>This will be the outline of your function body. Fill in the blank portion marked by the underscores.  </p>\n\n<pre><code> (___________________________)\n</code></pre>\n\n<p><strong>For Hackers Using Scala</strong>  </p>\n\n<p>This will be the outline of your function body. Fill in the blank portion marked by the underscores.  </p>\n\n<pre><code> def f() = ________________\n</code></pre></div></div></div>", 
        "hacker": {
            "username": "HackerRank", 
            "is_admin": true, 
            "id": 15055, 
            "avatar": "https://hrcdn.net/s3_pub/hr-avatars/4c95f96b-1ff9-46ed-98f8-cb3cb4ed8834/150x150.png"
        }, 
        "id": 747, 
        "leaderboard_out_of_sync": null, 
        "has_ended": false, 
        "languages": [
            "scala", 
            "clojure", 
            "erlang", 
            "haskell", 
            "ocaml", 
            "sbcl", 
            "fsharp", 
            "racket", 
            "elixir"
        ], 
        "is_custom": false, 
        "compile_and_test": true, 
        "haskell_template": "-- Enter your code here. Read input from STDIN. Print output to STDOUT\n\nhello_world = -- Fill up this function\n\n-- This part relates to Input/Output and can be used as it is. Do not modify this section\nmain = do\n\thello_world", 
        "default_language": null, 
        "migrated_resource": null, 
        "submit_disabled": false, 
        "expert_solution_status": false, 
        "can_solve": true, 
        "company_id": null, 
        "custom": false, 
        "can_be_viewed": true, 
        "track": {
            "name": "Introduction", 
            "taxonomy": 3, 
            "track_slug": "fp", 
            "track_id": 5, 
            "track_name": "Functional Programming", 
            "id": 27, 
            "rewards_system_enabled": null, 
            "slug": "intro"
        }, 
        "primary_contest": null, 
        "factor": 5, 
        "clojure_template": "(print \"\")", 
        "is_solution_unlocked": false, 
        "preview": "Write code to print the 'Hello World' program.", 
        "is_editorial_available": false, 
        "status": null, 
        "category": "ai", 
        "public_solutions": true, 
        "color": null, 
        "deleted": false, 
        "dynamic": true, 
        "company": null, 
        "moderator_or_support": false, 
        "is_text": false, 
        "solved_score": 0.5, 
        "difficulty_score": "0.056", 
        "difficulty": 0.943840856924254, 
        "active": true, 
        "show_skeliton": null, 
        "max_score": 5, 
        "slug": "fp-hello-world", 
        "contest_slug": "master", 
        "user_score": 0, 
        "real_dynamic": false, 
        "kind": "code", 
        "player_count": 2, 
        "submitted_hackers_count": 32684, 
        "name": "Hello World", 
        "is_preview_contest": false, 
        "level": 2, 
        "success_ratio": 0.9590013462244523, 
        "total_count": 32684, 
        "created_at": "2013-07-03T14:48:26.000Z", 
        "epoch_endtime": null, 
        "judgebot": null, 
        "available_translations": [], 
        "codechecker_handle": "", 
        "countdown_time": 0, 
        "author_avatar": "https://hrcdn.net/s3_pub/hr-avatars/36d17f9f-2fc0-4f5e-b467-d348d3c4c478/150x150.png", 
        "custom_tabs": null, 
        "judgebot_language": null, 
        "custom_case": true, 
        "requirements_description": null, 
        "is_skip_band_challenge": false, 
        "custom_checker_language": null
    }
}