{
    "status": true, 
    "model": {
        "onboarding": null, 
        "tagAncestry": [], 
        "solved_count": 671, 
        "leaderboard_out_of_sync_message": null, 
        "public_test_cases": true, 
        "checker_program": null, 
        "topics": [], 
        "time_left": null, 
        "updated_at": "2016-09-01T16:24:23.000Z", 
        "author_name": "abhiranjan", 
        "has_started": true, 
        "epoch_starttime": null, 
        "has_all_test_cases_public": false, 
        "difficulty_name": "Easy", 
        "require_unlock": true, 
        "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>Mario and Luigi earn points in their steps to save the Princess Peach from a dragon. Let's denote Mario's points by <code>M</code> and Luigi's by <code>L</code>. Princess Peach is wondering how many postive integers are there that are divisors to both numbers, <code>M</code> and <code>L</code>. Help her find the answer.</p>\n\n<p><strong>Input</strong> <br>\nFirst line of input contains an integer, <code>T</code>, which represent the number of test cases. Then follows <code>T</code> lines. Each line contains two space separated integers, <code>M L</code>, representing the points earned by Mario and Luigi, respectively.</p>\n\n<p><strong>Output</strong> <br>\nFor each test case, print the solution in different lines.</p>\n\n<p><strong>Constraints</strong> <br>\n<em>1 &lt;= T &lt;= 10</em> <br>\n<em>1 &lt;= L, M &lt;= 10^8</em> <br>\n<em>L, M</em> are integers  </p>\n\n<p><strong>Sample Input</strong>  </p>\n\n<pre><code>3\n10 4\n1 100\n288 240\n</code></pre>\n\n<p><strong>Sample Output</strong>  </p>\n\n<pre><code>2\n1\n10\n</code></pre>\n\n<p><strong>Explanation</strong> <br>\n<em>Test Case #00:</em> Divisors of <em>M = 10</em> are <em>{1,2,5,10}</em>, while for <em>L = 4</em> they are <em>{1, 2, 4}</em>. So <em>M</em> and <em>L</em> shares <em>{1, 2}</em> as their common divisors.  </p>\n\n<p><em>Test Case #01:</em> Here as <em>M = 1</em>, both players only share this number as their divisor.  </p>\n\n<p><em>Test Case #02:</em> Here <em>M</em> and <em>L</em> shares <em>10</em> integers, <em>{1,2,3,4,6,8,12,16,24,48}</em>, as their divisors.  </p></div></div></div>", 
        "hacker": {
            "username": "HackerRank", 
            "is_admin": true, 
            "id": 15055, 
            "avatar": "https://hrcdn.net/s3_pub/hr-avatars/4c95f96b-1ff9-46ed-98f8-cb3cb4ed8834/150x150.png"
        }, 
        "id": 2108, 
        "leaderboard_out_of_sync": null, 
        "has_ended": false, 
        "languages": [
            "haskell", 
            "clojure", 
            "scala", 
            "erlang", 
            "sbcl", 
            "ocaml", 
            "fsharp", 
            "racket", 
            "elixir"
        ], 
        "is_custom": false, 
        "compile_and_test": true, 
        "default_language": null, 
        "migrated_resource": null, 
        "submit_disabled": false, 
        "expert_solution_status": false, 
        "can_solve": true, 
        "company_id": null, 
        "custom": false, 
        "can_be_viewed": true, 
        "track": {
            "name": "Ad Hoc", 
            "taxonomy": 3, 
            "track_slug": "fp", 
            "track_id": 5, 
            "track_name": "Functional Programming", 
            "id": 41, 
            "rewards_system_enabled": null, 
            "slug": "misc"
        }, 
        "primary_contest": {
            "migration_status": null, 
            "contest_broadcast": null, 
            "hacker_timelimit": null, 
            "notification": null, 
            "qualification_rule_value": null, 
            "leaderboard_backend": null, 
            "expose_stats": null, 
            "updated_at": "2016-05-06T21:51:14.000Z", 
            "custom_leaderboard_column_name": null, 
            "organization_type": null, 
            "ended": true, 
            "epoch_starttime": 1395383400, 
            "timezone": "PST", 
            "disable_forum": null, 
            "id": 747, 
            "primary_track_id": 5, 
            "limited_participants": null, 
            "school_leaderboard_enabled": false, 
            "time_limited_contest": false, 
            "archived": true, 
            "rated": true, 
            "parent_contest_id": null, 
            "leaderboard_out_of_sync_message": null, 
            "leaderboard_type": "country", 
            "tagline": "A contest for functional programming enthusiasts.", 
            "effective_epoch_endtime": 1396247400, 
            "show_participants_info": null, 
            "homepage_background_color": "", 
            "organization_name": null, 
            "track": {
                "name": "Functional Programming", 
                "id": 5, 
                "priority": 2, 
                "descriptions": "The art of programming with expressions and functions. Experience the challenge of programming without state. A good paradigm for those interested in Map-Reduce and parallel computing.", 
                "rewards_system_enabled": null, 
                "slug": "fp"
            }, 
            "primary_tag_id": null, 
            "hide_navigation": null, 
            "show_penalty": null, 
            "effective_time_left": -107109458.72178699, 
            "hidden": null, 
            "homepage": "", 
            "public": true, 
            "testers_contest": null, 
            "description": "Let's code the functional way. This is a programming paradigm where we code \"what\" instead of \"how\". In this we can clearly separate \"pure\" code from \"impure\".  \n  \nYou can code in any of the functional languages, including Haskell, Scala, Lisp, Erlang, Clojure, OCaml and F#.", 
            "hide_difficulty": null, 
            "started": true, 
            "time_left": -107109458.71619594, 
            "challenges_count": 5, 
            "qualification_rule_msg": null, 
            "leaderboard_out_of_sync": null, 
            "team_event": false, 
            "disable_fsi": null, 
            "hide_submissions": null, 
            "leaderboard_format": "", 
            "leaderboard_broadcast_message": null, 
            "has_tracks": null, 
            "college_public": null, 
            "endtime": "2014-03-31T06:30:00.000Z", 
            "qualification_rule_type": null, 
            "slug": "lambda-calculi-mar14", 
            "hide_leaderboard": null, 
            "kind": null, 
            "comment_live_sync": null, 
            "name": "Functional Programming Contest - March'14", 
            "is_multi_round": false, 
            "created_at": "2014-03-10T11:10:13.000Z", 
            "epoch_endtime": 1396247400, 
            "company_associated_contest": null, 
            "rating_category": "Functional Programming", 
            "has_codesprint_reg_page": null, 
            "starttime": "2014-03-21T06:30:00.000Z", 
            "is_rating_updated": true, 
            "leaderboard_freeze_time": null, 
            "migration_disabled": null, 
            "template_id": 136
        }, 
        "factor": 20, 
        "is_solution_unlocked": false, 
        "preview": "Find the common divisors between two integers.", 
        "is_editorial_available": true, 
        "status": null, 
        "category": "ai", 
        "public_solutions": true, 
        "color": null, 
        "deleted": false, 
        "dynamic": true, 
        "company": null, 
        "moderator_or_support": false, 
        "is_text": false, 
        "solved_score": 0.5, 
        "difficulty_score": "0.194", 
        "difficulty": 0.8064516129032258, 
        "active": true, 
        "show_skeliton": null, 
        "max_score": 20, 
        "slug": "common-divisors", 
        "contest_slug": "master", 
        "user_score": 0, 
        "real_dynamic": false, 
        "kind": "code", 
        "player_count": 2, 
        "submitted_hackers_count": 803, 
        "name": "Common Divisors", 
        "is_preview_contest": false, 
        "level": 60, 
        "success_ratio": 0.8356164383561644, 
        "total_count": 803, 
        "created_at": "2014-03-13T00:49:10.000Z", 
        "epoch_endtime": null, 
        "judgebot": null, 
        "available_translations": [], 
        "codechecker_handle": null, 
        "countdown_time": 0, 
        "author_avatar": "https://hrcdn.net/s3_pub/hr-avatars/bb90185f-75e5-4069-8206-6decf4427384/150x150.png", 
        "custom_tabs": null, 
        "judgebot_language": null, 
        "custom_case": true, 
        "requirements_description": null, 
        "is_skip_band_challenge": false, 
        "custom_checker_language": null
    }
}