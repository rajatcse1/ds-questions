{
    "status": true, 
    "model": {
        "onboarding": null, 
        "tagAncestry": [], 
        "solved_count": 530, 
        "leaderboard_out_of_sync_message": null, 
        "public_test_cases": true, 
        "checker_program": null, 
        "topics": [], 
        "time_left": null, 
        "updated_at": "2016-09-01T16:22:34.000Z", 
        "author_name": "abhiranjan", 
        "has_started": true, 
        "epoch_starttime": null, 
        "has_all_test_cases_public": false, 
        "difficulty_name": "Medium", 
        "require_unlock": true, 
        "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>A binary tree is a tree which is characterized by any of the following properties:  </p>\n\n<ol>\n<li>It can be empty (null).</li>\n<li>It can contain a root node which contain some value and two subtree, left subtree and right subtree, which are also binary tree.</li>\n</ol>\n\n<p>A binary tree is a binary search tree (BST) if all the non-empty nodes follows both two properties:</p>\n\n<ol>\n<li>If node has a left subtree, then all the values in its left subtree are smaller than the value of the current node.</li>\n<li>If node has a right subtree, then all the value in its right subtree are greater than the value of the current node.</li>\n</ol>\n\n<p>You are given <em>N</em> nodes, each having unique value ranging from <code>[1, N]</code>, how many different binary search tree can be created using all of them.</p>\n\n<p><strong>Input</strong> <br>\nFirst line will contain an integer, <em>T</em>, number of test cases. Then <em>T</em> lines follow, where each line represent a test case. Each test case consists a single integer, <em>N</em>, where <em>N</em> is the number of nodes in the binary search tree. </p>\n\n<p><strong>Output</strong> <br>\nFor each test case, find the number of different binary search trees that can be created using these nodes. Print the answer modulo (10<sup>8</sup>+7).</p>\n\n<p><strong>Constraints</strong> <br>\n1 &lt;= <em>T</em> &lt;= 1000 <br>\n1 &lt;= <em>N</em> &lt;= 1000  </p>\n\n<p><strong>Sample Input</strong>  </p>\n\n<pre><code>5\n1\n2\n3\n4\n100\n</code></pre>\n\n<p><strong>Sample Output</strong>  </p>\n\n<pre><code>1\n2\n5\n14\n25666077\n</code></pre>\n\n<p><strong>Explanation</strong> <br>\n<em>Test Case #1:</em> We have only one tree.</p>\n\n<pre><code>1\n</code></pre>\n\n<p><em>Test Case #2:</em> Two trees can be created using two nodes.</p>\n\n<pre><code>1          2\n \\        /\n  2      1\n</code></pre>\n\n<p><em>Test Case #3:</em></p>\n\n<pre><code>1          1         2         3        3\n \\          \\       / \\       /        /\n  2          3     1   3     1        2\n   \\        /                 \\      /\n    3      2                   2    1\n</code></pre></div></div></div>", 
        "hacker": {
            "username": "HackerRank", 
            "is_admin": true, 
            "id": 15055, 
            "avatar": "https://hrcdn.net/s3_pub/hr-avatars/4c95f96b-1ff9-46ed-98f8-cb3cb4ed8834/150x150.png"
        }, 
        "id": 1405, 
        "leaderboard_out_of_sync": null, 
        "has_ended": false, 
        "languages": [
            "haskell", 
            "clojure", 
            "scala", 
            "erlang", 
            "ocaml", 
            "sbcl", 
            "fsharp", 
            "racket", 
            "elixir"
        ], 
        "is_custom": false, 
        "compile_and_test": true, 
        "default_language": null, 
        "migrated_resource": null, 
        "submit_disabled": null, 
        "expert_solution_status": false, 
        "can_solve": true, 
        "company_id": null, 
        "custom": null, 
        "can_be_viewed": true, 
        "track": {
            "name": "Memoization and DP", 
            "taxonomy": 3, 
            "track_slug": "fp", 
            "track_id": 5, 
            "track_name": "Functional Programming", 
            "id": 40, 
            "rewards_system_enabled": null, 
            "slug": "dp"
        }, 
        "primary_contest": null, 
        "factor": 20, 
        "is_solution_unlocked": false, 
        "preview": "Find total number of Binary Search Tree possible with N nodes.", 
        "is_editorial_available": false, 
        "status": null, 
        "category": "ai", 
        "public_solutions": true, 
        "color": null, 
        "deleted": false, 
        "dynamic": true, 
        "company": null, 
        "moderator_or_support": false, 
        "is_text": false, 
        "solved_score": 0.5, 
        "difficulty_score": "0.086", 
        "difficulty": 0.7, 
        "active": true, 
        "show_skeliton": null, 
        "max_score": 20, 
        "slug": "number-of-binary-search-tree", 
        "contest_slug": "master", 
        "user_score": 0, 
        "real_dynamic": false, 
        "kind": "code", 
        "player_count": 2, 
        "submitted_hackers_count": 580, 
        "name": "Number of Binary Search Tree", 
        "is_preview_contest": false, 
        "level": 39, 
        "success_ratio": 0.9137931034482759, 
        "total_count": 580, 
        "created_at": "2013-12-02T13:05:30.000Z", 
        "epoch_endtime": null, 
        "judgebot": null, 
        "available_translations": [], 
        "codechecker_handle": "", 
        "countdown_time": 0, 
        "author_avatar": "https://hrcdn.net/s3_pub/hr-avatars/bb90185f-75e5-4069-8206-6decf4427384/150x150.png", 
        "custom_tabs": null, 
        "judgebot_language": null, 
        "custom_case": true, 
        "requirements_description": null, 
        "is_skip_band_challenge": false, 
        "custom_checker_language": null
    }
}