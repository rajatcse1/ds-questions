{
    "status": true, 
    "model": {
        "onboarding": null, 
        "tagAncestry": [], 
        "solved_count": 99, 
        "leaderboard_out_of_sync_message": null, 
        "public_test_cases": true, 
        "checker_program": null, 
        "topics": [], 
        "time_left": null, 
        "updated_at": "2016-09-01T16:33:42.000Z", 
        "author_name": "darkshadows", 
        "has_started": true, 
        "epoch_starttime": null, 
        "has_all_test_cases_public": false, 
        "difficulty_name": "Medium", 
        "require_unlock": true, 
        "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>Watson gives a 2-D grid to Sherlock. Rows are numbered <em>1</em> to <em>N</em> from top to bottom and columns are numbered <em>1</em> to <em>M</em> from left to right. Sherlock is at position <em>(1,1)</em> right now and he is free to face any direction before he starts to move. He needs to reach <em>(N,M)</em>. In one step, he can either move downwards or rightwards. Also, he cannot make more than <em>K</em> turns during his whole journey.   </p>\n\n<p>There are two possible scenarios when a turn can occur at point <em>(i, j)</em>:  </p>\n\n<pre><code>Turns Right: (i-1, j)  -&gt;  (i, j)  -&gt;  (i, j+1)\n                      Down        Right\n\nTurns Down:  (i, j-1)  -&gt;  (i, j)  -&gt;  (i+1, j)\n                     Right        Dowm\n</code></pre>\n\n<p>Given <em>N</em>, <em>M</em> and <em>K</em>, help him by printing the number of ways to reach <em>(N,M)</em> with at most <em>K</em> turns. As this value can be very large, print the answer modulo (10<sup>9</sup> + 7).   </p>\n\n<p><strong>Input</strong> <br>\nFirst line contains <em>T</em>, the number of testcases. Then <em>T</em> lines follow, where each line represents a test case. Each testcase consists of three space separated integers, <em>N M K</em>, where <em>(N, M)</em> is the final location and <em>K</em> is the maximum number of allowed turns.  </p>\n\n<p><strong>Output</strong> <br>\nFor each testcase, print the required answer in one line.    </p>\n\n<p><strong>Constraints</strong> <br>\n1 \u2264 <em>T</em> \u2264 10 <br>\n1 \u2264 <em>N, M</em> \u2264 100 <br>\n0 \u2264 <em>K</em> \u2264 100  </p>\n\n<p><strong>Note</strong>  </p>\n\n<ol>\n<li>He can take <strong>at most</strong> <em>K</em> turns.</li>\n<li>He is free to face any direction before starting from <em>(1, 1)</em>.</li>\n</ol>\n\n<p><strong>Sample Input</strong>   </p>\n\n<pre><code>3\n2 2 3\n2 3 1\n4 4 4\n</code></pre>\n\n<p><strong>Sample Output</strong>   </p>\n\n<pre><code>2\n2\n18\n</code></pre>\n\n<p><strong>Sample explanation</strong> <br>\n<em>Test Case #00:</em> There is no way to reach <em>(2, 2)</em> with 0, 2 or 3 turns. He will always reach <em>(2, 2)</em> with 1 turn only. There are two ways shown below:  </p>\n\n<ol>\n<li>He starts from <em>(1, 1)</em> facing right and moves to <em>(1, 2)</em>. Then he faces down and moves to <em>(2, 2)</em>.</li>\n<li>He starts from <em>(1, 1)</em> facing down and moves to <em>(2, 1)</em>. Then he turns right and moves to <em>(2, 2)</em>.</li>\n</ol>\n\n<p><em>Test Case #01:</em> He can't reach <em>(2, 3)</em> with 0 turns. There are only two ways to reach <em>(2, 3)</em> with exactly 1 turn.</p>\n\n<ol>\n<li>He starts from <em>(1, 1)</em> facing down and moves to <em>(2, 1)</em>. Then he turns right and takes two steps forward to reach <em>(2, 3)</em>.</li>\n<li>He starts from <em>(1, 1)</em> facing right and moves two steps forward to reach <em>(1, 3)</em>. Then he turns down and proceeds one step to <em>(2, 3)</em>.</li>\n</ol>\n\n<p><em>Test Case #02:</em> There are 0 ways with 0 turn, 2 ways with 1 turn, 4 ways with 2 turns, 8 ways with 3 turns and 4 ways with 4 turns to reach <em>(4, 4)</em>.</p>\n\n<hr>\n\n<p><strong>Tested by:</strong> <a href=\"/ashu1461\">Ashutosh Singla</a>, <a href=\"/abhiranjan\">Abhiranjan</a></p></div></div></div>", 
        "hacker": {
            "username": "HackerRank", 
            "is_admin": true, 
            "id": 15055, 
            "avatar": "https://hrcdn.net/s3_pub/hr-avatars/4c95f96b-1ff9-46ed-98f8-cb3cb4ed8834/150x150.png"
        }, 
        "id": 3250, 
        "leaderboard_out_of_sync": null, 
        "has_ended": false, 
        "languages": [
            "haskell", 
            "clojure", 
            "scala", 
            "erlang", 
            "sbcl", 
            "ocaml", 
            "fsharp", 
            "racket", 
            "elixir"
        ], 
        "is_custom": false, 
        "compile_and_test": true, 
        "default_language": null, 
        "migrated_resource": null, 
        "submit_disabled": null, 
        "expert_solution_status": false, 
        "can_solve": true, 
        "company_id": null, 
        "custom": null, 
        "can_be_viewed": true, 
        "track": {
            "name": "Memoization and DP", 
            "taxonomy": 3, 
            "track_slug": "fp", 
            "track_id": 5, 
            "track_name": "Functional Programming", 
            "id": 40, 
            "rewards_system_enabled": null, 
            "slug": "dp"
        }, 
        "primary_contest": {
            "migration_status": null, 
            "contest_broadcast": null, 
            "hacker_timelimit": null, 
            "notification": null, 
            "qualification_rule_value": null, 
            "leaderboard_backend": null, 
            "expose_stats": null, 
            "updated_at": "2016-05-06T21:53:09.000Z", 
            "custom_leaderboard_column_name": null, 
            "organization_type": null, 
            "ended": true, 
            "epoch_starttime": 1405665000, 
            "timezone": "PST", 
            "disable_forum": null, 
            "id": 1015, 
            "primary_track_id": 5, 
            "limited_participants": null, 
            "school_leaderboard_enabled": false, 
            "time_limited_contest": false, 
            "archived": true, 
            "rated": null, 
            "parent_contest_id": null, 
            "leaderboard_out_of_sync_message": null, 
            "leaderboard_type": "country", 
            "tagline": "A contest for functional programming enthusiasts.", 
            "effective_epoch_endtime": 1406529000, 
            "show_participants_info": null, 
            "homepage_background_color": "", 
            "organization_name": null, 
            "track": {
                "name": "Functional Programming", 
                "id": 5, 
                "priority": 2, 
                "descriptions": "The art of programming with expressions and functions. Experience the challenge of programming without state. A good paradigm for those interested in Map-Reduce and parallel computing.", 
                "rewards_system_enabled": null, 
                "slug": "fp"
            }, 
            "primary_tag_id": null, 
            "hide_navigation": null, 
            "show_penalty": null, 
            "effective_time_left": -96827823.38315208, 
            "hidden": null, 
            "homepage": "", 
            "public": true, 
            "testers_contest": null, 
            "description": "The contest hosts 7 challenges ranging from algorithms to logics. \n<br><br>\n\n<strong>Problem Setters</strong> <a href=\"/pbl64k\">Pavel Lepin</a>, <a href=\"/gman007\">Grant Boudreaux</a>, <a href=\"/jaydp17\">Jaydeep Solanki</a>, <a href=\"/darkshadows\">Lalit Kundu</a>, <a href=\"/tussharsingh13\">Tusshar Singh</a> and <a href=\"/abhiranjan\">Abhiranjan</a>.\n<br><br>\n<strong>Problem Testers</strong> <a href=\"/AlMag\">Alex</a>, <a href=\"/darkshadows\">Lalit Kundu</a>, <a href=\"/tussharsingh13\">Tusshar Singh</a>, <a href=\"/ashu1461\">Ashutosh Singla</a> and <a href=\"/abhiranjan\">Abhiranjan</a>.\n<br><br>\n<strong>Languages allowed</strong>: <i>Haskell, Scala, Lisp, Erlang, Clojure, OCaml and F#.</i>", 
            "hide_difficulty": null, 
            "started": true, 
            "time_left": -96827823.3801087, 
            "challenges_count": 7, 
            "qualification_rule_msg": null, 
            "leaderboard_out_of_sync": null, 
            "team_event": false, 
            "disable_fsi": null, 
            "hide_submissions": null, 
            "leaderboard_format": "", 
            "leaderboard_broadcast_message": null, 
            "has_tracks": null, 
            "college_public": null, 
            "endtime": "2014-07-28T06:30:00.000Z", 
            "qualification_rule_type": null, 
            "slug": "lambda-calculi-jul14", 
            "hide_leaderboard": null, 
            "kind": null, 
            "comment_live_sync": null, 
            "name": "Functional Programming Contest - July'14", 
            "is_multi_round": false, 
            "created_at": "2014-06-23T23:54:38.000Z", 
            "epoch_endtime": 1406529000, 
            "company_associated_contest": null, 
            "rating_category": null, 
            "has_codesprint_reg_page": null, 
            "starttime": "2014-07-18T06:30:00.000Z", 
            "is_rating_updated": true, 
            "leaderboard_freeze_time": null, 
            "migration_disabled": null, 
            "template_id": 159
        }, 
        "factor": 50, 
        "is_solution_unlocked": false, 
        "preview": "Help Sherlock traverse through maze.", 
        "is_editorial_available": true, 
        "status": null, 
        "category": "ai", 
        "public_solutions": true, 
        "color": null, 
        "deleted": false, 
        "dynamic": true, 
        "company": null, 
        "moderator_or_support": false, 
        "is_text": false, 
        "solved_score": 0.5, 
        "difficulty_score": "0.133", 
        "difficulty": 0.7, 
        "active": true, 
        "show_skeliton": null, 
        "max_score": 50, 
        "slug": "sherlock-and-the-maze", 
        "contest_slug": "master", 
        "user_score": 0, 
        "real_dynamic": false, 
        "kind": "code", 
        "player_count": 2, 
        "submitted_hackers_count": 125, 
        "name": "Sherlock and the Maze", 
        "is_preview_contest": false, 
        "level": 92, 
        "success_ratio": 0.792, 
        "total_count": 125, 
        "created_at": "2014-07-10T00:55:30.000Z", 
        "epoch_endtime": null, 
        "judgebot": null, 
        "available_translations": [], 
        "codechecker_handle": null, 
        "countdown_time": 0, 
        "author_avatar": "https://hrcdn.net/s3_pub/hr-avatars/bbc82ad9-3904-4f41-8ea5-813675b88ef0/150x150.png", 
        "custom_tabs": null, 
        "judgebot_language": null, 
        "custom_case": true, 
        "requirements_description": null, 
        "is_skip_band_challenge": false, 
        "custom_checker_language": null
    }
}