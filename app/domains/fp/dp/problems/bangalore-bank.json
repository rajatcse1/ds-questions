{
    "status": true, 
    "model": {
        "onboarding": null, 
        "tagAncestry": [], 
        "solved_count": 97, 
        "leaderboard_out_of_sync_message": null, 
        "public_test_cases": true, 
        "checker_program": null, 
        "topics": [], 
        "time_left": null, 
        "updated_at": "2016-09-01T16:32:47.000Z", 
        "author_name": "pkacprzak", 
        "has_started": true, 
        "epoch_starttime": null, 
        "has_all_test_cases_public": false, 
        "difficulty_name": "Hard", 
        "require_unlock": true, 
        "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>There is a famous old bank in Bangalore. It has just started the process of filling its database with bank account numbers of its clients. In order to put one account number to the database, an employee has to insert it from a piece of paper to a computer using a standard keyboard (without using number pad found on the right hand side of most keyboards). The weird thing is that every employee assigned to this task can type in using only 2 index fingers (one left hand index finger and one right hand index finger). <br>\n<br>\nBelow is the sample representation of number keys present in the keyboard. <br>\n<br>\n<img src=\"http://hr-challenge-images.s3.amazonaws.com/3957/keyboard.jpg\" alt=\"1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 - 0\" title=\"\"> <br>\n<br>\nHe can perform any one of the following steps:</p>\n\n<ol>\n<li>He can move any one of his fingers to adjacent keys.</li>\n<li>He can press the key just below any of his fingers. But he can press only one key at a time.</li>\n</ol>\n\n<p>Each of the above steps takes 1 second. So moving a finger from key 3 to key 5 takes 2s, moving a finger from key 7 to key 2 takes 5s, and moving a finger from key 0 to key 8 takes 2s (Key 0 is the <em>rightmost key</em>).  Similarly, pressing a single key takes 1 second.  </p>\n\n<p>Write a program that computes the minimal time needed to add account number of an employee to the database. Before the process, an employee can place his finger wherever he wants. All digits should be inserted in the given order.</p>\n\n<p><strong>Note</strong>  </p>\n\n<ul>\n<li>It is not necessary that left finger will always lie on the left side of right finger. They can also lie on the same key, and in opposite direction also. </li>\n</ul>\n\n<p><strong>Input</strong> <br>\nIn the first line, there is a number <em>n</em> denoting the length of the bank account number. <br>\nIn the second line, there are <em>n</em> digits separated by a single space denoting the bank account number.</p>\n\n<p><strong>Output</strong> <br>\nIn one and only line, print the minimum time (in seconds) required to rewrite the bank account number according to the above rules.  </p>\n\n<p><strong>Constraints</strong> <br>\n1 \u2264 <em>n</em> \u2264 10<sup>4</sup></p>\n\n<p><strong>Input #00</strong></p>\n\n<pre><code>2\n1 2\n</code></pre>\n\n<p><strong>Output #00</strong></p>\n\n<pre><code>2\n</code></pre>\n\n<p><strong>Input #01</strong></p>\n\n<pre><code>3\n1 0 3\n</code></pre>\n\n<p><strong>Output #01</strong></p>\n\n<pre><code>5\n</code></pre>\n\n<p><strong>Explanations</strong> <br>\n<br>\n<em>Test Case #00:</em>  An employee can put his left finger on <em>key 1</em> and his right finger on <em>key 2</em> before the process, so the whole process takes 2 seconds. <br>\n<br>\n<em>Test Case #01:</em>  An employee can put his left finger on <em>key 1</em> and his right finger on <em>key 0</em> before the process. From that position, it takes 2 seconds to press first two keys. After that, he can move his left finger from <em>key 1</em> to <em>key 3</em>, which takes 2 seconds and then press it which takes additional second. The whole process takes 5 seconds. Note that <em>key 0</em> is the rightmost key.</p>\n\n<hr>\n\n<p><strong>Tested by</strong> <a href=\"/shaka_shadows\">Ray Williams Robinson Valiente</a>, <a href=\"/abhiranjan\">abhiranjan</a></p></div></div></div>", 
        "hacker": {
            "username": "HackerRank", 
            "is_admin": true, 
            "id": 15055, 
            "avatar": "https://hrcdn.net/s3_pub/hr-avatars/4c95f96b-1ff9-46ed-98f8-cb3cb4ed8834/150x150.png"
        }, 
        "id": 3957, 
        "leaderboard_out_of_sync": null, 
        "has_ended": false, 
        "languages": [
            "haskell", 
            "clojure", 
            "scala", 
            "erlang", 
            "sbcl", 
            "ocaml", 
            "fsharp", 
            "racket", 
            "elixir"
        ], 
        "is_custom": false, 
        "compile_and_test": true, 
        "default_language": null, 
        "migrated_resource": null, 
        "submit_disabled": null, 
        "expert_solution_status": false, 
        "can_solve": true, 
        "company_id": null, 
        "custom": null, 
        "can_be_viewed": true, 
        "track": {
            "name": "Memoization and DP", 
            "taxonomy": 3, 
            "track_slug": "fp", 
            "track_id": 5, 
            "track_name": "Functional Programming", 
            "id": 40, 
            "rewards_system_enabled": null, 
            "slug": "dp"
        }, 
        "primary_contest": {
            "migration_status": null, 
            "contest_broadcast": null, 
            "hacker_timelimit": null, 
            "notification": null, 
            "qualification_rule_value": null, 
            "leaderboard_backend": null, 
            "expose_stats": null, 
            "updated_at": "2016-05-06T21:53:49.000Z", 
            "custom_leaderboard_column_name": null, 
            "organization_type": null, 
            "ended": true, 
            "epoch_starttime": 1409898600, 
            "timezone": "PST", 
            "disable_forum": false, 
            "id": 1109, 
            "primary_track_id": 5, 
            "limited_participants": null, 
            "school_leaderboard_enabled": false, 
            "time_limited_contest": false, 
            "archived": true, 
            "rated": false, 
            "parent_contest_id": null, 
            "leaderboard_out_of_sync_message": null, 
            "leaderboard_type": "country", 
            "tagline": "A contest for functional programming enthusiasts.", 
            "effective_epoch_endtime": 1410762600, 
            "show_participants_info": null, 
            "homepage_background_color": "", 
            "organization_name": null, 
            "track": {
                "name": "Functional Programming", 
                "id": 5, 
                "priority": 2, 
                "descriptions": "The art of programming with expressions and functions. Experience the challenge of programming without state. A good paradigm for those interested in Map-Reduce and parallel computing.", 
                "rewards_system_enabled": null, 
                "slug": "fp"
            }, 
            "primary_tag_id": null, 
            "hide_navigation": null, 
            "show_penalty": true, 
            "effective_time_left": -92594221.89347884, 
            "hidden": null, 
            "homepage": "", 
            "public": true, 
            "testers_contest": null, 
            "description": "The contest hosts 7 challenges ranging from algorithms to logics to compilers. \n<br><br>\n\n<strong>Problem Setters</strong> <a href=\"/pkacprzak\">Pawe\u0139 Kacprzak</a>, <a href=\"/jspha\">Joseph Abrahamson</a>, <a href=\"https://www.hackerrank.com/wanbo\">Wanbo</a>, <a href=\"/abhiranjan\">Abhiranjan</a>.\n<br><br>\n<strong>Validators</strong> <a href=\"https://www.hackerrank.com/Javran\">Javran (Fang) Cheng</a>, <a href=\"https://www.hackerrank.com/shaka_shadows\">Ray Williams Robinson Valiente</a>, <a href=\"https://www.hackerrank.com/wanbo\">Wanbo</a>, <a href=\"/abhiranjan\">Abhiranjan</a>.\n<br><br>\n<strong>Languages allowed</strong>: <i>Haskell, Scala, Lisp, Erlang, Clojure, OCaml and F#.</i>\n<br><br>\n<strong>Want to contribute problems?</strong> Mail to <a href=\"mailto:hackers@hackerrank.com?subject=Lambda Calculi\">hackers@hackerrank.com</a> with the subject \"Lambda Calculi\".", 
            "hide_difficulty": null, 
            "started": true, 
            "time_left": -92594221.89128396, 
            "challenges_count": 7, 
            "qualification_rule_msg": null, 
            "leaderboard_out_of_sync": null, 
            "team_event": false, 
            "disable_fsi": null, 
            "hide_submissions": null, 
            "leaderboard_format": "", 
            "leaderboard_broadcast_message": null, 
            "has_tracks": null, 
            "college_public": false, 
            "endtime": "2014-09-15T06:30:00.000Z", 
            "qualification_rule_type": null, 
            "slug": "lambda-calculi-sep14", 
            "hide_leaderboard": null, 
            "kind": "", 
            "comment_live_sync": null, 
            "name": "Functional Programming Contest - September'14", 
            "is_multi_round": false, 
            "created_at": "2014-07-22T16:27:04.000Z", 
            "epoch_endtime": 1410762600, 
            "company_associated_contest": null, 
            "rating_category": null, 
            "has_codesprint_reg_page": null, 
            "starttime": "2014-09-05T06:30:00.000Z", 
            "is_rating_updated": true, 
            "leaderboard_freeze_time": null, 
            "migration_disabled": null, 
            "template_id": 181
        }, 
        "factor": 50, 
        "is_solution_unlocked": false, 
        "preview": "Account numbers", 
        "is_editorial_available": true, 
        "status": null, 
        "category": "ai", 
        "public_solutions": true, 
        "color": null, 
        "deleted": false, 
        "dynamic": true, 
        "company": null, 
        "moderator_or_support": false, 
        "is_text": false, 
        "solved_score": 0.5, 
        "difficulty_score": "0.143", 
        "difficulty": 0.5, 
        "active": true, 
        "show_skeliton": null, 
        "max_score": 50, 
        "slug": "bangalore-bank", 
        "contest_slug": "master", 
        "user_score": 0, 
        "real_dynamic": false, 
        "kind": "code", 
        "player_count": 2, 
        "submitted_hackers_count": 110, 
        "name": "Bangalore Bank", 
        "is_preview_contest": false, 
        "level": 95, 
        "success_ratio": 0.8818181818181818, 
        "total_count": 110, 
        "created_at": "2014-08-24T18:19:12.000Z", 
        "epoch_endtime": null, 
        "judgebot": null, 
        "available_translations": [], 
        "codechecker_handle": null, 
        "countdown_time": 0, 
        "author_avatar": "https://secure.gravatar.com/avatar/987009fca9c36d9b67be61070ccbfbc9?d=https://d3rpyts3de3lx8.cloudfront.net/hackerrank/assets/gravatar.jpg&s=150", 
        "custom_tabs": null, 
        "judgebot_language": null, 
        "custom_case": true, 
        "requirements_description": null, 
        "is_skip_band_challenge": false, 
        "custom_checker_language": null
    }
}