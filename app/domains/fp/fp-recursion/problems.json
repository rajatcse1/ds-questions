{
    "models": [
        {
            "onboarding": null, 
            "solved_count": 7889, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2016-11-11T11:24:14.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Easy", 
            "id": 535, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 2, 
            "is_solution_unlocked": false, 
            "preview": "Recursively compute the GCD of two integers using the Euclidean Method.", 
            "is_editorial_available": false, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Recursion", 
                "taxonomy": 3, 
                "track_slug": "fp", 
                "track_id": 5, 
                "track_name": "Functional Programming", 
                "id": 26, 
                "rewards_system_enabled": null, 
                "slug": "fp-recursion"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.968413496051687, 
            "active": true, 
            "max_score": 2, 
            "slug": "functional-programming-warmups-in-recursion---gcd", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Computing the GCD", 
            "level": 18, 
            "success_ratio": 0.9683319013133669, 
            "total_count": 8147, 
            "created_at": "2013-03-31T12:53:53.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 7464, 
            "preview_format": "html", 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2016-09-01T16:22:15.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Easy", 
            "id": 799, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 2, 
            "is_solution_unlocked": false, 
            "preview": "Compute the N<sup>th</sup> Fibonacci Number using Functional Languages", 
            "is_editorial_available": false, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Recursion", 
                "taxonomy": 3, 
                "track_slug": "fp", 
                "track_id": 5, 
                "track_name": "Functional Programming", 
                "id": 26, 
                "rewards_system_enabled": null, 
                "slug": "fp-recursion"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.9714086471408647, 
            "active": true, 
            "max_score": 2, 
            "slug": "functional-programming-warmups-in-recursion---fibonacci-numbers", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Fibonacci Numbers", 
            "level": 19, 
            "success_ratio": 0.9795275590551181, 
            "total_count": 7620, 
            "created_at": "2013-08-09T14:08:05.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 4875, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2016-09-01T16:29:57.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Easy", 
            "id": 940, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 10, 
            "is_solution_unlocked": false, 
            "preview": "Display N rows of Pascal's Triangle.", 
            "is_editorial_available": false, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Recursion", 
                "taxonomy": 3, 
                "track_slug": "fp", 
                "track_id": 5, 
                "track_name": "Functional Programming", 
                "id": 26, 
                "rewards_system_enabled": null, 
                "slug": "fp-recursion"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.9731127197518097, 
            "active": true, 
            "max_score": 10, 
            "slug": "pascals-triangle", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Pascal's Triangle", 
            "level": 23, 
            "success_ratio": 0.9806879903439951, 
            "total_count": 4971, 
            "created_at": "2013-09-20T13:02:23.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 1033, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2016-09-01T16:37:02.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Advanced", 
            "id": 812, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 30, 
            "is_solution_unlocked": false, 
            "preview": "Beautiful code can create beautiful shapes. An ASCII Art challenge.", 
            "is_editorial_available": false, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Recursion", 
                "taxonomy": 3, 
                "track_slug": "fp", 
                "track_id": 5, 
                "track_name": "Functional Programming", 
                "id": 26, 
                "rewards_system_enabled": null, 
                "slug": "fp-recursion"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.3, 
            "active": true, 
            "max_score": 30, 
            "slug": "functions-and-fractals-sierpinski-triangles", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Functions and Fractals: Sierpinski triangles", 
            "level": 37, 
            "success_ratio": 0.9564814814814815, 
            "total_count": 1080, 
            "created_at": "2013-08-16T12:49:33.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 3903, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2016-09-01T16:28:16.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Easy", 
            "id": 4055, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 10, 
            "is_solution_unlocked": false, 
            "preview": "Find the result of the merged strings. ", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Recursion", 
                "taxonomy": 3, 
                "track_slug": "fp", 
                "track_id": 5, 
                "track_name": "Functional Programming", 
                "id": 26, 
                "rewards_system_enabled": null, 
                "slug": "fp-recursion"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.9173333333333333, 
            "active": true, 
            "max_score": 10, 
            "slug": "string-mingling", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "String Mingling", 
            "level": 25, 
            "success_ratio": 0.936195730390981, 
            "total_count": 4169, 
            "created_at": "2014-09-01T13:54:29.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 3108, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2016-09-01T16:26:16.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Easy", 
            "id": 2107, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 10, 
            "is_solution_unlocked": false, 
            "preview": "Permute the given string.", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Recursion", 
                "taxonomy": 3, 
                "track_slug": "fp", 
                "track_id": 5, 
                "track_name": "Functional Programming", 
                "id": 26, 
                "rewards_system_enabled": null, 
                "slug": "fp-recursion"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.9277899343544858, 
            "active": true, 
            "max_score": 10, 
            "slug": "string-o-permute", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "String-o-Permute", 
            "level": 28, 
            "success_ratio": 0.9389728096676737, 
            "total_count": 3310, 
            "created_at": "2014-03-12T21:50:28.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 538, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2016-09-01T16:37:54.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Advanced", 
            "id": 939, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": null, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": null, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 30, 
            "is_solution_unlocked": false, 
            "preview": "Create a Fractal Tree", 
            "is_editorial_available": false, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Recursion", 
                "taxonomy": 3, 
                "track_slug": "fp", 
                "track_id": 5, 
                "track_name": "Functional Programming", 
                "id": 26, 
                "rewards_system_enabled": null, 
                "slug": "fp-recursion"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.3, 
            "active": true, 
            "max_score": 30, 
            "slug": "fractal-trees", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Functions and Fractals - Recursive Trees", 
            "level": 53, 
            "success_ratio": 0.96415770609319, 
            "total_count": 558, 
            "created_at": "2013-09-20T10:34:01.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 565, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2016-09-01T16:37:20.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Medium", 
            "id": 975, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": "import json\nfrom sys import stdin\n\ndef check_inputs (inputs, outputs,source):\n    scores = []\n    percentage = []\n    valid = []\n    maxscore = 1\n    \n    for inps, outps in zip(inputs, outputs):\n        inps = inps.strip()\n        outps = outps.strip()\n        if  len(inps.split()) != len(outps.split()):\n            scores.append(0)\n            percentage.append(0)\n            valid.append(0)\n        else:\n            count = 0.0\n            score = 1.0\n            wrong = 0\n            for inp, outp in zip(inps.split(), outps.split()):\n                count += 1\n                if (abs(float(outp)-float(inp)))>0.2:\n                    score = 0.0\n            scores.append(score * maxscore)\n            #scores.append(diff)\n            percentage.append(1000)\n            if (score>0.0):\n            \tvalid.append(1)\n            else:\n                valid.append(0)\n\n    return valid, scores, percentage\n\ndef process(data,source):\n    # Whatever you do, I am not giving any marks!\n    score = 0.0\n    valid, scores, percentage = check_inputs(data[\"expected_outputs\"], data[\"outputs\"],source)\n    for s in scores:\n        score += s\n    if score < 0:\n        score = 0.0\n\n    return score/len(scores), valid, percentage\n\nif __name__ ==  '__main__':\n    stdin = stdin.read().split('\\n')\n\n    # Get the run directory for the submission we need to evaluate. I know,\n    # hackish right?\n\n    run_directory = stdin[-1]\n\n    # request.json contains the data submitted for the current.\n    request = json.load(open(run_directory + \"request.json\"))\n\n\n    data = {\n        # The submitted source code\n        \"source\": request[\"source\"],\n\n        # The list of test cases\n        \"testcases\": request[\"testcase_sources\"],\n\n        # The submitted language key (Eg: 5 for python)\n        \"lang\": request[\"lang\"],\n\n        # I'll tell you how to fill this next\n        \"expected_outputs\": request[\"expected_outputs\"],\n\n        \"outputs\": []\n    }\n\n    for index in range(len(request[\"testcase_sources\"])):\n        output = open(run_directory + \"output%05d.out\" %(index)).read()\n        data[\"outputs\"].append(output)\n\n\n    # Gathered all the data we could, lets process it\n    score, testcase_status, percentage = process(data,data[\"source\"])\n\n    print score\n    print \" \".join(str(i) for i in testcase_status)\n    print \" \".join(str(i) for i in percentage)\n", 
            "submit_disabled": null, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": null, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 30, 
            "is_solution_unlocked": false, 
            "preview": "(Geometry) Finding convex hull of a given set of points (Graham Scan Algorithm can be applied).", 
            "is_editorial_available": false, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Recursion", 
                "taxonomy": 3, 
                "track_slug": "fp", 
                "track_id": 5, 
                "track_name": "Functional Programming", 
                "id": 26, 
                "rewards_system_enabled": null, 
                "slug": "fp-recursion"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 1.0, 
            "difficulty": 0.7, 
            "active": true, 
            "max_score": 30, 
            "slug": "convex-hull-fp", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Convex Hull", 
            "level": 45, 
            "success_ratio": 0.7543391188251002, 
            "total_count": 749, 
            "created_at": "2013-09-28T20:21:52.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": "python"
        }, 
        {
            "onboarding": null, 
            "solved_count": 2408, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2016-09-01T16:31:51.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Easy", 
            "id": 4100, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 10, 
            "is_solution_unlocked": false, 
            "preview": "How to transfer a message. ", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Recursion", 
                "taxonomy": 3, 
                "track_slug": "fp", 
                "track_id": 5, 
                "track_name": "Functional Programming", 
                "id": 26, 
                "rewards_system_enabled": null, 
                "slug": "fp-recursion"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.864963503649635, 
            "active": true, 
            "max_score": 10, 
            "slug": "string-compression", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "String Compression", 
            "level": 29, 
            "success_ratio": 0.8753180661577609, 
            "total_count": 2751, 
            "created_at": "2014-09-03T22:12:41.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 272, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-03-09T09:31:55.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Advanced", 
            "id": 917, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 30, 
            "is_solution_unlocked": false, 
            "preview": "Given a Crossword Grid, and a set of words, fill up the crossword. ", 
            "is_editorial_available": false, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Recursion", 
                "taxonomy": 3, 
                "track_slug": "fp", 
                "track_id": 5, 
                "track_name": "Functional Programming", 
                "id": 26, 
                "rewards_system_enabled": null, 
                "slug": "fp-recursion"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.3, 
            "active": true, 
            "max_score": 30, 
            "slug": "crosswords-101", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Crosswords-101", 
            "level": 54, 
            "success_ratio": 0.8918032786885246, 
            "total_count": 305, 
            "created_at": "2013-09-12T15:06:12.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 1776, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2016-09-01T16:32:50.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Easy", 
            "id": 4505, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 10, 
            "is_solution_unlocked": false, 
            "preview": "Help shorten strings!", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Recursion", 
                "taxonomy": 3, 
                "track_slug": "fp", 
                "track_id": 5, 
                "track_name": "Functional Programming", 
                "id": 26, 
                "rewards_system_enabled": null, 
                "slug": "fp-recursion"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.8993288590604027, 
            "active": true, 
            "max_score": 10, 
            "slug": "prefix-compression", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Prefix Compression", 
            "level": 43, 
            "success_ratio": 0.9327731092436975, 
            "total_count": 1904, 
            "created_at": "2014-09-29T20:58:37.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 2192, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2016-09-01T16:43:07.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Easy", 
            "id": 5419, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 10, 
            "is_solution_unlocked": false, 
            "preview": "Remove subsequent occurrences.", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Recursion", 
                "taxonomy": 3, 
                "track_slug": "fp", 
                "track_id": 5, 
                "track_name": "Functional Programming", 
                "id": 26, 
                "rewards_system_enabled": null, 
                "slug": "fp-recursion"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.8888888888888888, 
            "active": true, 
            "max_score": 10, 
            "slug": "string-reductions", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "String Reductions", 
            "level": 35, 
            "success_ratio": 0.9785714285714285, 
            "total_count": 2240, 
            "created_at": "2014-12-05T18:43:02.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 315, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2016-09-01T16:34:00.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Advanced", 
            "id": 353, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": null, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": null, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 20, 
            "is_solution_unlocked": false, 
            "preview": "Super-Queens on a Chessboard", 
            "is_editorial_available": false, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Recursion", 
                "taxonomy": 3, 
                "track_slug": "fp", 
                "track_id": 5, 
                "track_name": "Functional Programming", 
                "id": 26, 
                "rewards_system_enabled": null, 
                "slug": "fp-recursion"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.3, 
            "active": true, 
            "max_score": 20, 
            "slug": "super-queens-on-a-chessboard", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Super-Queens on a Chessboard", 
            "level": 43, 
            "success_ratio": 0.8677685950413223, 
            "total_count": 363, 
            "created_at": "2013-02-12T06:46:18.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 1009, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-03-10T08:54:54.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Easy", 
            "id": 813, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 20, 
            "is_solution_unlocked": false, 
            "preview": "Split up a number in a specified manner. ", 
            "is_editorial_available": false, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Recursion", 
                "taxonomy": 3, 
                "track_slug": "fp", 
                "track_id": 5, 
                "track_name": "Functional Programming", 
                "id": 26, 
                "rewards_system_enabled": null, 
                "slug": "fp-recursion"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.8064516129032258, 
            "active": true, 
            "max_score": 20, 
            "slug": "functional-programming-the-sums-of-powers", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "The Sums of Powers", 
            "level": 30, 
            "success_ratio": 0.837344398340249, 
            "total_count": 1205, 
            "created_at": "2013-08-16T15:18:20.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 1012, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2016-09-01T16:33:45.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Easy", 
            "id": 4506, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": null, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": null, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 10, 
            "is_solution_unlocked": false, 
            "preview": "Help us decide if a colorful sequence is valid.", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Recursion", 
                "taxonomy": 3, 
                "track_slug": "fp", 
                "track_id": 5, 
                "track_name": "Functional Programming", 
                "id": 26, 
                "rewards_system_enabled": null, 
                "slug": "fp-recursion"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.8953488372093024, 
            "active": true, 
            "max_score": 10, 
            "slug": "sequence-full-of-colors", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Sequence full of colors", 
            "level": 49, 
            "success_ratio": 0.9275893675527039, 
            "total_count": 1091, 
            "created_at": "2014-09-29T22:17:55.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 952, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2016-09-01T16:29:20.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Easy", 
            "id": 2509, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": null, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": null, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 10, 
            "is_solution_unlocked": false, 
            "preview": "Frequent elements", 
            "is_editorial_available": false, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Recursion", 
                "taxonomy": 3, 
                "track_slug": "fp", 
                "track_id": 5, 
                "track_name": "Functional Programming", 
                "id": 26, 
                "rewards_system_enabled": null, 
                "slug": "fp-recursion"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.9, 
            "active": true, 
            "max_score": 10, 
            "slug": "filter-elements", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Filter Elements", 
            "level": 42, 
            "success_ratio": 0.779050736497545, 
            "total_count": 1222, 
            "created_at": "2014-05-12T17:03:40.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 1305, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-03-09T09:42:09.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Medium", 
            "id": 4104, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 20, 
            "is_solution_unlocked": false, 
            "preview": "Super Digit", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Recursion", 
                "taxonomy": 3, 
                "track_slug": "fp", 
                "track_id": 5, 
                "track_name": "Functional Programming", 
                "id": 26, 
                "rewards_system_enabled": null, 
                "slug": "fp-recursion"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.773972602739726, 
            "active": true, 
            "max_score": 20, 
            "slug": "super-digit", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Super Digit", 
            "level": 37, 
            "success_ratio": 0.8217884130982368, 
            "total_count": 1588, 
            "created_at": "2014-09-04T13:19:15.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 199, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2016-09-01T16:38:21.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Expert", 
            "id": 3928, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": null, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": null, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 200, 
            "is_solution_unlocked": false, 
            "preview": "Calculate cellular automata dynamics on a binary tree.", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Recursion", 
                "taxonomy": 3, 
                "track_slug": "fp", 
                "track_id": 5, 
                "track_name": "Functional Programming", 
                "id": 26, 
                "rewards_system_enabled": null, 
                "slug": "fp-recursion"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.1, 
            "active": true, 
            "max_score": 200, 
            "slug": "the-tree-of-life", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "The Tree Of Life", 
            "level": 76, 
            "success_ratio": 0.8468085106382979, 
            "total_count": 235, 
            "created_at": "2014-08-23T15:16:42.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 172, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2016-11-18T08:35:29.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Medium", 
            "id": 18166, 
            "has_ended": false, 
            "is_custom": true, 
            "compile_and_test": true, 
            "checker_program": "# Enter your code here. Read input from STDIN. Print output to STDOUT# Enter your code here. Read input from STDIN. Print output to STDOUT\n# Enter your code here. Read input from STDIN. Print output to STDOUT\n# Enter your code here. Read input from STDIN. Print output to STDOUT\nimport json\nfrom sys import stdin\n\ndef check_inputs (inputs, outputs):\n    scores = []\n    percentage = []\n    valid = []\n    count = 0.0\n    correct = 0.0\n    wrong = 0.0\n    for inps, outps in zip(inputs, outputs):\n        inps = inps.strip()\n        outps = outps.strip()\n        if inps.lower().strip() == outps.lower().strip():\n        \tvalid.append(1)\n\t\tscores.append(1)\n\t\tpercentage.append(1)\n        else:\n                valid.append(0)\n\t\tscores.append(0)\n\t\tpercentage.append(0)\n    return valid, scores, percentage\n\ndef process(data):\n    # Whatever you do, I am not giving any marks!\n    score = 0.0\n    valid, scores, percentage = check_inputs(data[\"expected_outputs\"], data[\"outputs\"])\n    score = len(scores) - 2.0*(len(scores)-sum(scores))\n    if score < 0:\n        score = 0\n    return score/len(scores), valid, percentage\n\nif __name__ ==  '__main__':\n    stdin = stdin.read().split('\\n')\n\n    # Get the run directory for the submission we need to evaluate. I know,\n    # hackish right?\n\n    run_directory = stdin[-1]\n\n    # request.json contains the data submitted for the current.\n    request = json.load(open(run_directory + \"request.json\"))\n\n\n    data = {\n        # The submitted source code\n        \"source\": request[\"source\"],\n\n        # The list of test cases\n        \"testcases\": request[\"testcase_sources\"],\n\n        # The submitted language key (Eg: 5 for python)\n        \"lang\": request[\"lang\"],\n\n        # I'll tell you how to fill this next\n        \"expected_outputs\": request[\"expected_outputs\"],\n\n        \"outputs\": []\n    }\n\n    for index in range(len(request[\"testcase_sources\"])):\n        output = open(run_directory + \"output%05d.out\" %(index)).read()\n        data[\"outputs\"].append(output)\n\n\n    # Gathered all the data we could, lets process it\n    score, testcase_status, percentage = process(data)\n\n    print score\n    print \" \".join(str(i) for i in testcase_status)\n    print \" \".join(str(i) for i in percentage)\n", 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": true, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 40, 
            "is_solution_unlocked": false, 
            "preview": "Determine if P is a concave polygon.", 
            "is_editorial_available": false, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Recursion", 
                "taxonomy": 3, 
                "track_slug": "fp", 
                "track_id": 5, 
                "track_name": "Functional Programming", 
                "id": 26, 
                "rewards_system_enabled": null, 
                "slug": "fp-recursion"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 1.0, 
            "difficulty": 0.7, 
            "active": true, 
            "max_score": 40, 
            "slug": "lambda-march-concave-polygon", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Concave Polygon", 
            "level": 50, 
            "success_ratio": 0.8349514563106796, 
            "total_count": 206, 
            "created_at": "2016-02-29T07:38:09.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": "python"
        }
    ], 
    "tutorial_signed_up": true, 
    "current_track": {
        "name": "Functional Programming", 
        "id": 5, 
        "priority": 2, 
        "descriptions": "The art of programming with expressions and functions. Experience the challenge of programming without state. A good paradigm for those interested in Map-Reduce and parallel computing.", 
        "rewards_system_enabled": null, 
        "slug": "fp"
    }, 
    "total": 19
}