{
    "status": true, 
    "model": {
        "onboarding": null, 
        "tagAncestry": [], 
        "solved_count": 952, 
        "leaderboard_out_of_sync_message": null, 
        "public_test_cases": true, 
        "checker_program": null, 
        "topics": [], 
        "time_left": null, 
        "updated_at": "2016-09-01T16:29:20.000Z", 
        "author_name": "abhiranjan", 
        "has_started": true, 
        "epoch_starttime": null, 
        "has_all_test_cases_public": false, 
        "difficulty_name": "Easy", 
        "require_unlock": true, 
        "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>Given a list of <em>N</em> integers <em>A = [a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>N</sub>]</em>, you have to find those integers which are repeated at least <em>K</em> times. In case no such element exists you have to print <code>-1</code>.  </p>\n\n<p>If there are multiple elements in <em>A</em> which are repeated at least <em>K</em> times, then print these elements ordered by their first occurrence in the list.  </p>\n\n<p>Let's say <em>A = [4, 5, 2, 5, 4, 3, 1, 3, 4]</em> and <em>K = 2</em>. Then the output is</p>\n\n<pre><code>4 5 3\n</code></pre>\n\n<p>because these numbers have appeared at least 2 times. <br>\nAmong these numbers, <br>\n<em>4</em> has appeared first at position <em>1</em>, <br>\n<em>5</em> has appeared next at position <em>2</em>, <br>\nand <em>3</em> has appeared thereafter at position <em>6</em>. <br>\nThat's why, we print in the order <em>4</em>, <em>5</em> and finally <em>3</em>.</p>\n\n<p><strong>Input</strong> <br>\nFirst line contains an integer, <em>T</em>, the number of test cases. Then <em>T</em> test cases follow. <br>\nEach test case consist of two lines. First line will contain two space separated integers, <em>N</em> and <em>K</em>, where <em>N</em> is the size of list <em>A</em>, and <em>K</em> represents the repetition count. In the second line, there are <em>N</em> space separated integers which represent the elements of list <em>A = [a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>N</sub>]</em>.</p>\n\n<p><strong>Output</strong> <br>\nFor each test case, you have to print all those integers which have appeared in the list at least <em>K</em> times in the order of their first appearance, separated by space. If no such element exists, then print <code>-1</code>.</p>\n\n<p><strong>Constraints</strong> <br>\n1 &lt;= <em>T</em> &lt;= 10 <br>\n1 &lt;= <em>N</em> &lt;= 10000 <br>\n1 &lt;= <em>K</em> &lt;= N <br>\n1 &lt;= <em>a<sub>i</sub></em> &lt;= 10<sup>9</sup>  </p>\n\n<p><strong>Sample Input</strong></p>\n\n<pre><code>3\n9 2\n4 5 2 5 4 3 1 3 4\n9 4\n4 5 2 5 4 3 1 3 4\n10 2\n5 4 3 2 1 1 2 3 4 5\n</code></pre>\n\n<p><strong>Sample Output</strong></p>\n\n<pre><code>4 5 3\n-1\n5 4 3 2 1\n</code></pre>\n\n<p><strong>Explanation</strong> <br>\n<em>Sample Case #01:</em> This is the same example mentioned in the problem statement above. <br>\n<em>Sample Case #02:</em> As no elements repeats more than 3 times, we don't have any elements satisfying the criteria of minimum <em>K</em> times. <br>\n<em>Sample Case #03:</em> All elements are repeated 2 times. So we print all of them according to their order of occurance, which is 5 -&gt; 4 -&gt; 3 -&gt; 2 -&gt; 1.</p></div></div></div>", 
        "hacker": {
            "username": "HackerRank", 
            "is_admin": true, 
            "id": 15055, 
            "avatar": "https://hrcdn.net/s3_pub/hr-avatars/4c95f96b-1ff9-46ed-98f8-cb3cb4ed8834/150x150.png"
        }, 
        "id": 2509, 
        "leaderboard_out_of_sync": null, 
        "has_ended": false, 
        "languages": [
            "haskell", 
            "clojure", 
            "scala", 
            "erlang", 
            "sbcl", 
            "ocaml", 
            "fsharp", 
            "racket", 
            "elixir"
        ], 
        "is_custom": false, 
        "compile_and_test": true, 
        "default_language": null, 
        "migrated_resource": null, 
        "submit_disabled": null, 
        "expert_solution_status": false, 
        "can_solve": true, 
        "company_id": null, 
        "custom": null, 
        "can_be_viewed": true, 
        "track": {
            "name": "Recursion", 
            "taxonomy": 3, 
            "track_slug": "fp", 
            "track_id": 5, 
            "track_name": "Functional Programming", 
            "id": 26, 
            "rewards_system_enabled": null, 
            "slug": "fp-recursion"
        }, 
        "primary_contest": {
            "migration_status": null, 
            "contest_broadcast": null, 
            "hacker_timelimit": null, 
            "notification": null, 
            "qualification_rule_value": null, 
            "leaderboard_backend": null, 
            "expose_stats": null, 
            "updated_at": "2016-05-06T21:52:10.000Z", 
            "custom_leaderboard_column_name": null, 
            "organization_type": null, 
            "ended": true, 
            "epoch_starttime": 1400221800, 
            "timezone": "PST", 
            "disable_forum": null, 
            "id": 860, 
            "primary_track_id": 5, 
            "limited_participants": null, 
            "school_leaderboard_enabled": false, 
            "time_limited_contest": false, 
            "archived": true, 
            "rated": true, 
            "parent_contest_id": null, 
            "leaderboard_out_of_sync_message": null, 
            "leaderboard_type": "country", 
            "tagline": "A contest for functional programming enthusiasts.", 
            "effective_epoch_endtime": 1401085800, 
            "show_participants_info": null, 
            "homepage_background_color": "", 
            "organization_name": null, 
            "track": {
                "name": "Functional Programming", 
                "id": 5, 
                "priority": 2, 
                "descriptions": "The art of programming with expressions and functions. Experience the challenge of programming without state. A good paradigm for those interested in Map-Reduce and parallel computing.", 
                "rewards_system_enabled": null, 
                "slug": "fp"
            }, 
            "primary_tag_id": null, 
            "hide_navigation": null, 
            "show_penalty": null, 
            "effective_time_left": -102270961.17661257, 
            "hidden": null, 
            "homepage": "", 
            "public": true, 
            "testers_contest": null, 
            "description": "Functional programming is an elegant programming style where we use functional languages to write mathematically pure functions. The outputs of these pure functions depend only on the input parameters and not on the state of the program. Hence, these programs have almost negligible side effects. <br /> \n  \nYou can solve this contest in any of these functional languages: <i>Haskell, Scala, Lisp, Erlang, Clojure, OCaml and F#</i>.", 
            "hide_difficulty": null, 
            "started": true, 
            "time_left": -102270961.17062972, 
            "challenges_count": 5, 
            "qualification_rule_msg": null, 
            "leaderboard_out_of_sync": null, 
            "team_event": false, 
            "disable_fsi": null, 
            "hide_submissions": null, 
            "leaderboard_format": "", 
            "leaderboard_broadcast_message": null, 
            "has_tracks": null, 
            "college_public": null, 
            "endtime": "2014-05-26T06:30:00.000Z", 
            "qualification_rule_type": null, 
            "slug": "lambda-calculi-may14", 
            "hide_leaderboard": null, 
            "kind": null, 
            "comment_live_sync": null, 
            "name": "Functional Programming Contest - May'14", 
            "is_multi_round": false, 
            "created_at": "2014-04-23T20:32:20.000Z", 
            "epoch_endtime": 1401085800, 
            "company_associated_contest": null, 
            "rating_category": "Functional Programming", 
            "has_codesprint_reg_page": null, 
            "starttime": "2014-05-16T06:30:00.000Z", 
            "is_rating_updated": true, 
            "leaderboard_freeze_time": null, 
            "migration_disabled": null, 
            "template_id": 147
        }, 
        "factor": 10, 
        "is_solution_unlocked": false, 
        "preview": "Frequent elements", 
        "is_editorial_available": false, 
        "status": null, 
        "category": "ai", 
        "public_solutions": true, 
        "color": null, 
        "deleted": false, 
        "dynamic": true, 
        "company": null, 
        "moderator_or_support": false, 
        "is_text": false, 
        "solved_score": 0.5, 
        "difficulty_score": "0.261", 
        "difficulty": 0.9, 
        "active": true, 
        "show_skeliton": null, 
        "max_score": 10, 
        "slug": "filter-elements", 
        "contest_slug": "master", 
        "user_score": 0, 
        "real_dynamic": false, 
        "kind": "code", 
        "player_count": 2, 
        "submitted_hackers_count": 1222, 
        "name": "Filter Elements", 
        "is_preview_contest": false, 
        "level": 42, 
        "success_ratio": 0.779050736497545, 
        "total_count": 1222, 
        "created_at": "2014-05-12T17:03:40.000Z", 
        "epoch_endtime": null, 
        "judgebot": null, 
        "available_translations": [], 
        "codechecker_handle": null, 
        "countdown_time": 0, 
        "author_avatar": "https://hrcdn.net/s3_pub/hr-avatars/bb90185f-75e5-4069-8206-6decf4427384/150x150.png", 
        "custom_tabs": null, 
        "judgebot_language": null, 
        "custom_case": true, 
        "requirements_description": null, 
        "is_skip_band_challenge": false, 
        "custom_checker_language": null
    }
}