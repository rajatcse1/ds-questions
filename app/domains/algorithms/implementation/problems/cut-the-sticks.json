{
    "status": true, 
    "model": {
        "tagAncestry": [], 
        "solved_count": 76650, 
        "python_template_head": "", 
        "can_solve": true, 
        "clojure_template_head": "", 
        "dynamic": true, 
        "epoch_starttime": null, 
        "difficulty_name": "Easy", 
        "compile_and_test": true, 
        "submit_disabled": false, 
        "objectivec_template_head": "", 
        "company_id": null, 
        "languages": [
            "c", 
            "cpp", 
            "java", 
            "csharp", 
            "php", 
            "ruby", 
            "python", 
            "perl", 
            "haskell", 
            "clojure", 
            "scala", 
            "lua", 
            "go", 
            "javascript", 
            "erlang", 
            "d", 
            "ocaml", 
            "pascal", 
            "python3", 
            "groovy", 
            "objectivec", 
            "fsharp", 
            "visualbasic", 
            "lolcode", 
            "smalltalk", 
            "tcl", 
            "whitespace", 
            "sbcl", 
            "java8", 
            "octave", 
            "racket", 
            "rust", 
            "bash", 
            "r", 
            "swift", 
            "fortran", 
            "cpp14", 
            "coffeescript", 
            "ada", 
            "pypy", 
            "pypy3", 
            "elixir", 
            "kotlin", 
            "julia"
        ], 
        "leaderboard_out_of_sync_message": null, 
        "primary_contest": {
            "migration_status": null, 
            "contest_broadcast": null, 
            "hacker_timelimit": null, 
            "notification": null, 
            "qualification_rule_value": null, 
            "leaderboard_backend": null, 
            "expose_stats": null, 
            "updated_at": "2016-05-06T21:50:21.000Z", 
            "custom_leaderboard_column_name": null, 
            "organization_type": null, 
            "ended": true, 
            "epoch_starttime": 1393691400, 
            "timezone": "PST", 
            "disable_forum": null, 
            "id": 635, 
            "primary_track_id": 3, 
            "limited_participants": null, 
            "school_leaderboard_enabled": false, 
            "time_limited_contest": false, 
            "archived": true, 
            "rated": true, 
            "parent_contest_id": null, 
            "leaderboard_out_of_sync_message": null, 
            "leaderboard_type": "country", 
            "tagline": "5 challenges in 2 hours", 
            "effective_epoch_endtime": 1393698600, 
            "show_participants_info": null, 
            "homepage_background_color": "", 
            "organization_name": null, 
            "track": {
                "name": "Algorithms", 
                "id": 3, 
                "priority": 14, 
                "descriptions": "The true test of problem solving: when one realizes that time and memory aren't infinite.\n", 
                "rewards_system_enabled": true, 
                "slug": "algorithms"
            }, 
            "primary_tag_id": 3081, 
            "hide_navigation": null, 
            "show_penalty": null, 
            "effective_time_left": -109655685.96387908, 
            "hidden": null, 
            "homepage": "", 
            "public": true, 
            "testers_contest": null, 
            "description": "101 Hack contest is back with its February edition! It's all about speed, accuracy and efficiency. Inside the contest are 5 challenges. You have exactly 120 minutes to solve them. Every second counts.\n<br>\n<br>\nHackerRank invites you to join the contest to compete against hackers from across the globe.\n<br>", 
            "hide_difficulty": null, 
            "started": true, 
            "time_left": -109655685.96081328, 
            "challenges_count": 5, 
            "qualification_rule_msg": null, 
            "leaderboard_out_of_sync": null, 
            "team_event": false, 
            "disable_fsi": null, 
            "hide_submissions": null, 
            "leaderboard_format": "", 
            "leaderboard_broadcast_message": null, 
            "has_tracks": null, 
            "college_public": null, 
            "endtime": "2014-03-01T18:30:00.000Z", 
            "qualification_rule_type": null, 
            "slug": "101feb14", 
            "hide_leaderboard": null, 
            "kind": null, 
            "comment_live_sync": null, 
            "name": "101 Hack February", 
            "is_multi_round": false, 
            "created_at": "2014-02-03T07:29:09.000Z", 
            "epoch_endtime": 1393698600, 
            "company_associated_contest": null, 
            "rating_category": "101 Hack", 
            "has_codesprint_reg_page": null, 
            "starttime": "2014-03-01T16:30:00.000Z", 
            "is_rating_updated": true, 
            "leaderboard_freeze_time": null, 
            "migration_disabled": null, 
            "template_id": 127
        }, 
        "factor": 25, 
        "erlang_template_head": "", 
        "ruby_template_tail": "", 
        "default_language": null, 
        "moderator_or_support": false, 
        "leaderboard_out_of_sync": null, 
        "contest_slug": "master", 
        "python3_template": "#!/bin/python3\n\nimport sys\n\n\nn = int(input().strip())\narr = [int(arr_temp) for arr_temp in input().strip().split(' ')]\n", 
        "name": "Cut the sticks", 
        "level": 16, 
        "success_ratio": 0.9432104842182981, 
        "total_count": 81265, 
        "javascript_template_head": "", 
        "codechecker_handle": "", 
        "java_template_tail": "", 
        "migrated_resource": null, 
        "custom_tabs": null, 
        "ruby_template_head": "", 
        "is_skip_band_challenge": false, 
        "python_template_tail": "", 
        "public_test_cases": true, 
        "available_translations": [
            {
                "body": "\u7ed9\u4f60N\u6839\u957f\u5ea6\u4e0d\u76f8\u7b49\u7684\u6728\u68cd\u3002\u6709\u4e00\u79cd\u5207\u5272\u64cd\u4f5c\uff1a\u628a\u6240\u6709\u7684\u6728\u68cd\u90fd\u5207\u6210\u6700\u77ed\u7684\u9ad8\u5ea6\uff0c\u5e76\u8bb0\u5f55\u4e0b\u5207\u4e0b\u6765\u7684\u5bbd\u5ea6\uff08\u6728\u68cd\u6570\uff09\uff0c\u6254\u6389\u5207\u4e0b\u7684\u90e8\u5206\u3002\u91cd\u590d\u8fd9\u79cd\u5207\u5272\u64cd\u4f5c\uff0c\u76f4\u5230\u6240\u6709\u7684\u6728\u68cd\u90fd\u88ab\u6254\u6389\u3002\n\u4f60\u9700\u8981\u8f93\u51fa\u6bcf\u6b21\u5207\u5272\u4e0b\u8bb0\u5f55\u7684\u5bbd\u5ea6\uff08\u6728\u68cd\u6570\uff09\u3002\n\n**\u8f93\u5165\u683c\u5f0f**  \n\n\u7b2c\u4e00\u884c\u5305\u542bN, \u4e0b\u4e00\u884c\u5305\u542b\u4e2a\u7a7a\u683c\u5206\u9694\u7684\u6570 A<sub>i</sub>\u3002\n\n**\u8f93\u51fa\u683c\u5f0f**  \n\n\u8f93\u51fa\u6bcf\u6b21\u64cd\u4f5c\u5207\u4e0b\u7684\u6728\u68cd\u5bbd\u5ea6\u3002\n\n**\u7ea6\u675f\u6761\u4ef6**  \n\n1 <= N <= 1000  \n1 <= A<sub>i</sub> <= 1000\n\n\n**\u8f93\u5165\u6837\u4f8b**\n\t\n    8\n    1 2 3 4 3 3 2 1\n    \n**\u8f93\u51fa\u6837\u4f8b**\n\n\t8\n    6\n    4\n    1\n    \n**Explanation**  \n\n\u5176\u4e2d\u67098\u8ddf\u6728\u68cd\uff0c\u90fd\u8981\u5207\u9664\u9ad8\u5ea6\u4e3a1\u7684\u4e00\u6bb5(\u56e0\u4e3a 1\u662f\u6700\u77ed\u7684\u9ad8\u5ea6). \u628a\u5207\u4e0b\u76848\u6839\u653e\u5728\u4e00\u8fb9\u540e\uff0c\u6211\u4eec\u8fd8\u5269\u4f596\u6839\u6728\u68cd\uff0c\u9ad8\u5ea6\u5206\u522b\u4e3a 1,2,3,2,2,1\u3002\n\u6211\u4eec\u518d\u4e00\u6b21\u5207\u4e0b\u73b0\u5728\u7684\u6700\u77ed\u9ad8\u5ea61\uff0c\u6254\u6389\u5207\u4e0b\u76846\u6bb5\u540e\uff0c\u6211\u4eec\u8fd8\u5269\u4e0b4\u6bb5\u9ad8\u5ea6\u5206\u522b\u4e3a1\uff0c2\uff0c1\uff0c1\u3002\n\u518d\u5207\u4e00\u6b21\u6211\u4eec\u5269\u4e0b1\u6bb5\u9ad8\u5ea6\u4e3a1\u7684\u6728\u68cd\uff0c\u672c\u8eab\u518d\u5207\u4e00\u6b21\u624d\u80fd\u6254\u6389\u3002\n\n\u56e0\u6b64\u8f93\u51fa 8,6,4,1\n\n\n", 
                "problem_statement_fields": {
                    "sample_output": " ", 
                    "problem_statement": "\u7ed9\u4f60N\u6839\u957f\u5ea6\u4e0d\u76f8\u7b49\u7684\u6728\u68cd\u3002\u6709\u4e00\u79cd\u5207\u5272\u64cd\u4f5c\uff1a\u628a\u6240\u6709\u7684\u6728\u68cd\u90fd\u5207\u6210\u6700\u77ed\u7684\u9ad8\u5ea6\uff0c\u5e76\u8bb0\u5f55\u4e0b\u5207\u4e0b\u6765\u7684\u5bbd\u5ea6\uff08\u6728\u68cd\u6570\uff09\uff0c\u6254\u6389\u5207\u4e0b\u7684\u90e8\u5206\u3002\u91cd\u590d\u8fd9\u79cd\u5207\u5272\u64cd\u4f5c\uff0c\u76f4\u5230\u6240\u6709\u7684\u6728\u68cd\u90fd\u88ab\u6254\u6389\u3002\n\u4f60\u9700\u8981\u8f93\u51fa\u6bcf\u6b21\u5207\u5272\u4e0b\u8bb0\u5f55\u7684\u5bbd\u5ea6\uff08\u6728\u68cd\u6570\uff09\u3002\n\n**\u8f93\u5165\u683c\u5f0f**  \n\n\u7b2c\u4e00\u884c\u5305\u542bN, \u4e0b\u4e00\u884c\u5305\u542b\u4e2a\u7a7a\u683c\u5206\u9694\u7684\u6570 A<sub>i</sub>\u3002\n\n**\u8f93\u51fa\u683c\u5f0f**  \n\n\u8f93\u51fa\u6bcf\u6b21\u64cd\u4f5c\u5207\u4e0b\u7684\u6728\u68cd\u5bbd\u5ea6\u3002\n\n**\u7ea6\u675f\u6761\u4ef6**  \n\n1 <= N <= 1000  \n1 <= A<sub>i</sub> <= 1000\n\n\n**\u8f93\u5165\u6837\u4f8b**\n\t\n    8\n    1 2 3 4 3 3 2 1\n    \n**\u8f93\u51fa\u6837\u4f8b**\n\n\t8\n    6\n    4\n    1\n    \n**Explanation**  \n\n\u5176\u4e2d\u67098\u8ddf\u6728\u68cd\uff0c\u90fd\u8981\u5207\u9664\u9ad8\u5ea6\u4e3a1\u7684\u4e00\u6bb5(\u56e0\u4e3a 1\u662f\u6700\u77ed\u7684\u9ad8\u5ea6). \u628a\u5207\u4e0b\u76848\u6839\u653e\u5728\u4e00\u8fb9\u540e\uff0c\u6211\u4eec\u8fd8\u5269\u4f596\u6839\u6728\u68cd\uff0c\u9ad8\u5ea6\u5206\u522b\u4e3a 1,2,3,2,2,1\u3002\n\u6211\u4eec\u518d\u4e00\u6b21\u5207\u4e0b\u73b0\u5728\u7684\u6700\u77ed\u9ad8\u5ea61\uff0c\u6254\u6389\u5207\u4e0b\u76846\u6bb5\u540e\uff0c\u6211\u4eec\u8fd8\u5269\u4e0b4\u6bb5\u9ad8\u5ea6\u5206\u522b\u4e3a1\uff0c2\uff0c1\uff0c1\u3002\n\u518d\u5207\u4e00\u6b21\u6211\u4eec\u5269\u4e0b1\u6bb5\u9ad8\u5ea6\u4e3a1\u7684\u6728\u68cd\uff0c\u672c\u8eab\u518d\u5207\u4e00\u6b21\u624d\u80fd\u6254\u6389\u3002\n\n\u56e0\u6b64\u8f93\u51fa 8,6,4,1\n\n\n", 
                    "input_format": " ", 
                    "explanation": " ", 
                    "sample_input": " ", 
                    "output_format": " "
                }, 
                "name": "Cut the sticks", 
                "language": "Chinese", 
                "challenge_id": 1957, 
                "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>\u7ed9\u4f60N\u6839\u957f\u5ea6\u4e0d\u76f8\u7b49\u7684\u6728\u68cd\u3002\u6709\u4e00\u79cd\u5207\u5272\u64cd\u4f5c\uff1a\u628a\u6240\u6709\u7684\u6728\u68cd\u90fd\u5207\u6210\u6700\u77ed\u7684\u9ad8\u5ea6\uff0c\u5e76\u8bb0\u5f55\u4e0b\u5207\u4e0b\u6765\u7684\u5bbd\u5ea6\uff08\u6728\u68cd\u6570\uff09\uff0c\u6254\u6389\u5207\u4e0b\u7684\u90e8\u5206\u3002\u91cd\u590d\u8fd9\u79cd\u5207\u5272\u64cd\u4f5c\uff0c\u76f4\u5230\u6240\u6709\u7684\u6728\u68cd\u90fd\u88ab\u6254\u6389\u3002\n\u4f60\u9700\u8981\u8f93\u51fa\u6bcf\u6b21\u5207\u5272\u4e0b\u8bb0\u5f55\u7684\u5bbd\u5ea6\uff08\u6728\u68cd\u6570\uff09\u3002</p>\n\n<p><strong>\u8f93\u5165\u683c\u5f0f</strong>  </p>\n\n<p>\u7b2c\u4e00\u884c\u5305\u542bN, \u4e0b\u4e00\u884c\u5305\u542b\u4e2a\u7a7a\u683c\u5206\u9694\u7684\u6570 A<sub>i</sub>\u3002</p>\n\n<p><strong>\u8f93\u51fa\u683c\u5f0f</strong>  </p>\n\n<p>\u8f93\u51fa\u6bcf\u6b21\u64cd\u4f5c\u5207\u4e0b\u7684\u6728\u68cd\u5bbd\u5ea6\u3002</p>\n\n<p><strong>\u7ea6\u675f\u6761\u4ef6</strong>  </p>\n\n<p>1 &lt;= N &lt;= 1000 <br>\n1 &lt;= A<sub>i</sub> &lt;= 1000</p>\n\n<p><strong>\u8f93\u5165\u6837\u4f8b</strong></p>\n\n<pre><code>8\n1 2 3 4 3 3 2 1\n</code></pre>\n\n<p><strong>\u8f93\u51fa\u6837\u4f8b</strong></p>\n\n<pre><code>8\n6\n4\n1\n</code></pre>\n\n<p><strong>Explanation</strong>  </p>\n\n<p>\u5176\u4e2d\u67098\u8ddf\u6728\u68cd\uff0c\u90fd\u8981\u5207\u9664\u9ad8\u5ea6\u4e3a1\u7684\u4e00\u6bb5(\u56e0\u4e3a 1\u662f\u6700\u77ed\u7684\u9ad8\u5ea6). \u628a\u5207\u4e0b\u76848\u6839\u653e\u5728\u4e00\u8fb9\u540e\uff0c\u6211\u4eec\u8fd8\u5269\u4f596\u6839\u6728\u68cd\uff0c\u9ad8\u5ea6\u5206\u522b\u4e3a 1,2,3,2,2,1\u3002\n\u6211\u4eec\u518d\u4e00\u6b21\u5207\u4e0b\u73b0\u5728\u7684\u6700\u77ed\u9ad8\u5ea61\uff0c\u6254\u6389\u5207\u4e0b\u76846\u6bb5\u540e\uff0c\u6211\u4eec\u8fd8\u5269\u4e0b4\u6bb5\u9ad8\u5ea6\u5206\u522b\u4e3a1\uff0c2\uff0c1\uff0c1\u3002\n\u518d\u5207\u4e00\u6b21\u6211\u4eec\u5269\u4e0b1\u6bb5\u9ad8\u5ea6\u4e3a1\u7684\u6728\u68cd\uff0c\u672c\u8eab\u518d\u5207\u4e00\u6b21\u624d\u80fd\u6254\u6389\u3002</p>\n\n<p>\u56e0\u6b64\u8f93\u51fa 8,6,4,1</p></div></div>", 
                "preview": null
            }, 
            {
                "body": "\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u0447\u0442\u043e \u0443 \u0432\u0430\u0441 \u043a\u0443\u0447\u043a\u0430 \u0438\u0437 N \u043f\u0430\u043b\u043e\u0447\u0435\u043a. \u041f\u0430\u043b\u043e\u0447\u043a\u0438 \u0432 \u044d\u0442\u043e\u0439 \u043a\u0443\u0447\u043a\u0435 \u0438\u043c\u0435\u044e\u0442 \u0434\u043b\u0438\u043d\u044b: A<sub>1</sub>, A<sub>2</sub>, ..., A<sub>N</sub>. \u0414\u0430\u043b\u0435\u0435 \u0432\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e: \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0435 \u0432\u0441\u0435 \u043f\u0430\u043b\u043e\u0447\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0434\u043b\u0438\u043d\u043d\u0435\u0435, \u0447\u0435\u043c \u0441\u0430\u043c\u0430\u044f \u043a\u043e\u0440\u043e\u0442\u043a\u0430\u044f \u043f\u0430\u043b\u043e\u0447\u043a\u0430 \u0432 \u043a\u0443\u0447\u043a\u0435, \u0438 \u0440\u0430\u0437\u043b\u0430\u043c\u044b\u0432\u0430\u0435\u0442\u0435 \u0438\u0445 \u043d\u0430 \u0434\u0432\u0435 \u0447\u0430\u0441\u0442\u0438, \u0442\u0430\u043a \u0447\u0442\u043e\u0431\u044b \u043e\u0434\u043d\u0430 \u0438\u0437 \u0447\u0430\u0441\u0442\u0435\u0439 \u0431\u044b\u043b\u0430 \u0440\u0430\u0432\u043d\u0430 \u043f\u043e \u0434\u043b\u0438\u043d\u0435 \u0441\u0430\u043c\u043e\u0439 \u043a\u043e\u0440\u043e\u0442\u043a\u043e\u0439 \u043f\u0430\u043b\u043e\u0447\u043a\u0435 \u0432 \u043a\u0443\u0447\u043a\u0435; \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u043f\u0430\u043b\u043e\u0447\u043a\u0438 \u0442\u0443 \u0447\u0430\u0441\u0442\u044c, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0440\u0430\u0432\u043d\u0430 \u043f\u043e \u0434\u043b\u0438\u043d\u0435 \u0441\u0430\u043c\u043e\u0439 \u043a\u043e\u0440\u043e\u0442\u043a\u043e\u0439 \u043f\u0430\u043b\u043e\u0447\u043a\u0435, \u0432\u044b \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442\u0435 \u0432 \u043a\u0443\u0447\u043a\u0435, \u0430 \u0434\u0440\u0443\u0433\u0443\u044e \u043e\u0442\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0435\u0442\u0435 \u0432 \u0441\u0442\u043e\u0440\u043e\u043d\u0443. \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u0443 \u0432\u0430\u0441 \u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u0432\u0435 \u043a\u0443\u0447\u043a\u0438: \u043f\u0435\u0440\u0432\u0430\u044f (\u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f) \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u0442\u044c \u0438\u0437 N \u043f\u0430\u043b\u043e\u0447\u0435\u043a, \u043a\u0430\u0436\u0434\u0430\u044f \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0438\u043c\u0435\u0435\u0442 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u0443\u044e \u0434\u043b\u0438\u043d\u0443 (\u0434\u043b\u0438\u043d\u0430 \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u043f\u043e \u0434\u043b\u0438\u043d\u0435 \u043f\u0430\u043b\u043e\u0447\u043a\u0438), \u0432\u0442\u043e\u0440\u0430\u044f (\u043d\u043e\u0432\u0430\u044f) \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0430 \u0447\u0430\u0441\u0442\u044f\u043c\u0438 \u043f\u0430\u043b\u043e\u0447\u0435\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b \u043e\u0442\u043b\u043e\u0436\u0438\u043b\u0438 \u0432 \u0441\u0442\u043e\u0440\u043e\u043d\u0443.\n\n\u0422\u0435\u043f\u0435\u0440\u044c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u0447\u0442\u043e, \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0432 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u043e\u0434\u0438\u043d \u0440\u0430\u0437 \u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0432 \u0434\u0432\u0435 \u043a\u0443\u0447\u043a\u0438, \u0432\u044b \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u0434\u0430\u043b\u0435\u0435 \u0434\u043b\u044f \u043d\u043e\u0432\u043e\u0439 \u043a\u0443\u0447\u043a\u0438. \u0410 \u0437\u0430\u0442\u0435\u043c \u0441\u043d\u043e\u0432\u0430 \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u0443\u044e \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u0434\u043b\u044f \u043d\u043e\u0432\u043e\u0439 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0439 \u043a\u0443\u0447\u043a\u0438. \u0418 \u0442\u0430\u043a \u0434\u0430\u043b\u0435\u0435 \u0432\u044b \u0431\u0443\u0434\u0435\u0442\u0435 \u0434\u0435\u043b\u0430\u0442\u044c, \u0434\u043e \u0442\u0435\u0445 \u043f\u043e\u0440, \u043f\u043e\u043a\u0430 \u043e\u0442\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0435 \u043f\u0430\u043b\u043e\u0447\u043a\u0438 \u043d\u0435 \u0431\u0443\u0434\u0443\u0442 \u0440\u0430\u0432\u043d\u044b \u043f\u043e \u0434\u043b\u0438\u043d\u0435.\n\n\u0412\u0430\u043c \u0437\u0430\u0434\u0430\u043d\u044b \u043f\u0430\u043b\u043e\u0447\u043a\u0438 \u0432 \u043f\u0435\u0440\u0432\u043e\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0439 \u043a\u0443\u0447\u043a\u0435, \u0432\u0430\u043c \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043f\u0430\u043b\u043e\u0447\u0435\u043a \u0432 \u043a\u0443\u0447\u043a\u0430\u0445 \u0432 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438.\n\n**\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445**  \n\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e N. \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b N \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b A<sub>i</sub>, \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0431\u0435\u043b\u0430\u043c\u0438.\n\n**\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445**  \n\n\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432 \u043f\u0430\u043b\u043e\u0447\u0435\u043a \u0432 \u043a\u0443\u0447\u043a\u0430\u0445, \u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u0447\u0438\u0441\u043b\u0443 \u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0443.\n\n**\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f**  \n\n1 <= N <= 1000  \n1 <= A<sub>i</sub> <= 1000\n\n\n**\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435**\n\t\n    8\n    1 2 3 4 3 3 2 1\n    \n**\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435**\n\n\t8\n    6\n    4\n    1\n    \n**\u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435 \u043a \u043f\u0440\u0438\u043c\u0435\u0440\u0443**  \n\n\u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0437\u0430\u0434\u0430\u043d\u043e 8 \u043f\u0430\u043b\u043e\u0447\u0435\u043a. \u041f\u0440\u0438\u043c\u0435\u043d\u0438\u0432 \u043f\u0435\u0440\u0432\u0443\u044e \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e, \u043c\u044b \u043e\u0442\u043b\u043e\u0436\u0438\u043c 6 \u043f\u0430\u043b\u043e\u0447\u0435\u043a \u0432 \u043d\u043e\u0432\u0443\u044e \u043a\u0443\u0447\u043a\u0443. \u0414\u043b\u0438\u043d\u044b \u043f\u0430\u043b\u043e\u0447\u0435\u043a \u0432 \u043d\u043e\u0432\u043e\u0439 \u043a\u0443\u0447\u043a\u0435 \u0431\u0443\u0434\u0443\u0442 \u0440\u0430\u0432\u043d\u044b: 1,2,3,2,2,1.  \n\u041f\u0440\u0438\u043c\u0435\u043d\u0438\u0432 \u0432\u0442\u043e\u0440\u0443\u044e \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u043a \u043f\u0430\u043b\u043e\u0447\u043a\u0430\u043c \u0432 \u043d\u043e\u0432\u043e\u0439 \u043a\u0443\u0447\u043a\u0435, \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043c \u0435\u0449\u0435 \u043e\u0434\u043d\u0443 \u043d\u043e\u0432\u0443\u044e \u043a\u0443\u0447\u043a\u0443 \u0441 \u0434\u043b\u0438\u043d\u0430\u043c\u0438 \u043f\u0430\u043b\u043e\u0447\u0435\u043a: 1,2,1,1.\n\u0414\u0430\u043b\u0435\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0432 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u043a \u044d\u0442\u0438\u043c \u043f\u0430\u043b\u043e\u0447\u043a\u0430\u043c, \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043c \u043e\u0434\u043d\u0443 \u043d\u043e\u0432\u0443\u044e \u043a\u0443\u0447\u043a\u0443 \u0441 \u043e\u0434\u043d\u043e\u0439 \u043f\u0430\u043b\u043e\u0447\u043a\u043e\u0439 \u0434\u043b\u0438\u043d\u044b 1. \u041d\u0430 \u044d\u0442\u043e\u043c \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u0442\u0441\u044f. \n\n\u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432 \u043f\u0430\u043b\u043e\u0447\u0435\u043a \u0432 \u043a\u0443\u0447\u043a\u0430\u0445: 8, 6, 4, 1.\n\n\n", 
                "problem_statement_fields": {
                    "sample_output": " ", 
                    "problem_statement": "\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u0447\u0442\u043e \u0443 \u0432\u0430\u0441 \u043a\u0443\u0447\u043a\u0430 \u0438\u0437 N \u043f\u0430\u043b\u043e\u0447\u0435\u043a. \u041f\u0430\u043b\u043e\u0447\u043a\u0438 \u0432 \u044d\u0442\u043e\u0439 \u043a\u0443\u0447\u043a\u0435 \u0438\u043c\u0435\u044e\u0442 \u0434\u043b\u0438\u043d\u044b: A<sub>1</sub>, A<sub>2</sub>, ..., A<sub>N</sub>. \u0414\u0430\u043b\u0435\u0435 \u0432\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e: \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0435 \u0432\u0441\u0435 \u043f\u0430\u043b\u043e\u0447\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0434\u043b\u0438\u043d\u043d\u0435\u0435, \u0447\u0435\u043c \u0441\u0430\u043c\u0430\u044f \u043a\u043e\u0440\u043e\u0442\u043a\u0430\u044f \u043f\u0430\u043b\u043e\u0447\u043a\u0430 \u0432 \u043a\u0443\u0447\u043a\u0435, \u0438 \u0440\u0430\u0437\u043b\u0430\u043c\u044b\u0432\u0430\u0435\u0442\u0435 \u0438\u0445 \u043d\u0430 \u0434\u0432\u0435 \u0447\u0430\u0441\u0442\u0438, \u0442\u0430\u043a \u0447\u0442\u043e\u0431\u044b \u043e\u0434\u043d\u0430 \u0438\u0437 \u0447\u0430\u0441\u0442\u0435\u0439 \u0431\u044b\u043b\u0430 \u0440\u0430\u0432\u043d\u0430 \u043f\u043e \u0434\u043b\u0438\u043d\u0435 \u0441\u0430\u043c\u043e\u0439 \u043a\u043e\u0440\u043e\u0442\u043a\u043e\u0439 \u043f\u0430\u043b\u043e\u0447\u043a\u0435 \u0432 \u043a\u0443\u0447\u043a\u0435; \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u043f\u0430\u043b\u043e\u0447\u043a\u0438 \u0442\u0443 \u0447\u0430\u0441\u0442\u044c, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0440\u0430\u0432\u043d\u0430 \u043f\u043e \u0434\u043b\u0438\u043d\u0435 \u0441\u0430\u043c\u043e\u0439 \u043a\u043e\u0440\u043e\u0442\u043a\u043e\u0439 \u043f\u0430\u043b\u043e\u0447\u043a\u0435, \u0432\u044b \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442\u0435 \u0432 \u043a\u0443\u0447\u043a\u0435, \u0430 \u0434\u0440\u0443\u0433\u0443\u044e \u043e\u0442\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0435\u0442\u0435 \u0432 \u0441\u0442\u043e\u0440\u043e\u043d\u0443. \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u0443 \u0432\u0430\u0441 \u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u0432\u0435 \u043a\u0443\u0447\u043a\u0438: \u043f\u0435\u0440\u0432\u0430\u044f (\u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f) \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u0442\u044c \u0438\u0437 N \u043f\u0430\u043b\u043e\u0447\u0435\u043a, \u043a\u0430\u0436\u0434\u0430\u044f \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0438\u043c\u0435\u0435\u0442 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u0443\u044e \u0434\u043b\u0438\u043d\u0443 (\u0434\u043b\u0438\u043d\u0430 \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u043f\u043e \u0434\u043b\u0438\u043d\u0435 \u043f\u0430\u043b\u043e\u0447\u043a\u0438), \u0432\u0442\u043e\u0440\u0430\u044f (\u043d\u043e\u0432\u0430\u044f) \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0430 \u0447\u0430\u0441\u0442\u044f\u043c\u0438 \u043f\u0430\u043b\u043e\u0447\u0435\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b \u043e\u0442\u043b\u043e\u0436\u0438\u043b\u0438 \u0432 \u0441\u0442\u043e\u0440\u043e\u043d\u0443.\n\n\u0422\u0435\u043f\u0435\u0440\u044c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u0447\u0442\u043e, \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0432 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u043e\u0434\u0438\u043d \u0440\u0430\u0437 \u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0432 \u0434\u0432\u0435 \u043a\u0443\u0447\u043a\u0438, \u0432\u044b \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u0434\u0430\u043b\u0435\u0435 \u0434\u043b\u044f \u043d\u043e\u0432\u043e\u0439 \u043a\u0443\u0447\u043a\u0438. \u0410 \u0437\u0430\u0442\u0435\u043c \u0441\u043d\u043e\u0432\u0430 \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u0443\u044e \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u0434\u043b\u044f \u043d\u043e\u0432\u043e\u0439 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0439 \u043a\u0443\u0447\u043a\u0438. \u0418 \u0442\u0430\u043a \u0434\u0430\u043b\u0435\u0435 \u0432\u044b \u0431\u0443\u0434\u0435\u0442\u0435 \u0434\u0435\u043b\u0430\u0442\u044c, \u0434\u043e \u0442\u0435\u0445 \u043f\u043e\u0440, \u043f\u043e\u043a\u0430 \u043e\u0442\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0435 \u043f\u0430\u043b\u043e\u0447\u043a\u0438 \u043d\u0435 \u0431\u0443\u0434\u0443\u0442 \u0440\u0430\u0432\u043d\u044b \u043f\u043e \u0434\u043b\u0438\u043d\u0435.\n\n\u0412\u0430\u043c \u0437\u0430\u0434\u0430\u043d\u044b \u043f\u0430\u043b\u043e\u0447\u043a\u0438 \u0432 \u043f\u0435\u0440\u0432\u043e\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0439 \u043a\u0443\u0447\u043a\u0435, \u0432\u0430\u043c \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043f\u0430\u043b\u043e\u0447\u0435\u043a \u0432 \u043a\u0443\u0447\u043a\u0430\u0445 \u0432 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438.\n\n**\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445**  \n\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e N. \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b N \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b A<sub>i</sub>, \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0431\u0435\u043b\u0430\u043c\u0438.\n\n**\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445**  \n\n\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432 \u043f\u0430\u043b\u043e\u0447\u0435\u043a \u0432 \u043a\u0443\u0447\u043a\u0430\u0445, \u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u0447\u0438\u0441\u043b\u0443 \u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0443.\n\n**\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f**  \n\n1 <= N <= 1000  \n1 <= A<sub>i</sub> <= 1000\n\n\n**\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435**\n\t\n    8\n    1 2 3 4 3 3 2 1\n    \n**\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435**\n\n\t8\n    6\n    4\n    1\n    \n**\u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435 \u043a \u043f\u0440\u0438\u043c\u0435\u0440\u0443**  \n\n\u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0437\u0430\u0434\u0430\u043d\u043e 8 \u043f\u0430\u043b\u043e\u0447\u0435\u043a. \u041f\u0440\u0438\u043c\u0435\u043d\u0438\u0432 \u043f\u0435\u0440\u0432\u0443\u044e \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e, \u043c\u044b \u043e\u0442\u043b\u043e\u0436\u0438\u043c 6 \u043f\u0430\u043b\u043e\u0447\u0435\u043a \u0432 \u043d\u043e\u0432\u0443\u044e \u043a\u0443\u0447\u043a\u0443. \u0414\u043b\u0438\u043d\u044b \u043f\u0430\u043b\u043e\u0447\u0435\u043a \u0432 \u043d\u043e\u0432\u043e\u0439 \u043a\u0443\u0447\u043a\u0435 \u0431\u0443\u0434\u0443\u0442 \u0440\u0430\u0432\u043d\u044b: 1,2,3,2,2,1.  \n\u041f\u0440\u0438\u043c\u0435\u043d\u0438\u0432 \u0432\u0442\u043e\u0440\u0443\u044e \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u043a \u043f\u0430\u043b\u043e\u0447\u043a\u0430\u043c \u0432 \u043d\u043e\u0432\u043e\u0439 \u043a\u0443\u0447\u043a\u0435, \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043c \u0435\u0449\u0435 \u043e\u0434\u043d\u0443 \u043d\u043e\u0432\u0443\u044e \u043a\u0443\u0447\u043a\u0443 \u0441 \u0434\u043b\u0438\u043d\u0430\u043c\u0438 \u043f\u0430\u043b\u043e\u0447\u0435\u043a: 1,2,1,1.\n\u0414\u0430\u043b\u0435\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0432 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u043a \u044d\u0442\u0438\u043c \u043f\u0430\u043b\u043e\u0447\u043a\u0430\u043c, \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043c \u043e\u0434\u043d\u0443 \u043d\u043e\u0432\u0443\u044e \u043a\u0443\u0447\u043a\u0443 \u0441 \u043e\u0434\u043d\u043e\u0439 \u043f\u0430\u043b\u043e\u0447\u043a\u043e\u0439 \u0434\u043b\u0438\u043d\u044b 1. \u041d\u0430 \u044d\u0442\u043e\u043c \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u0442\u0441\u044f. \n\n\u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432 \u043f\u0430\u043b\u043e\u0447\u0435\u043a \u0432 \u043a\u0443\u0447\u043a\u0430\u0445: 8, 6, 4, 1.\n\n\n", 
                    "input_format": " ", 
                    "explanation": " ", 
                    "sample_input": " ", 
                    "output_format": " "
                }, 
                "name": "Cut the sticks", 
                "language": "Russian", 
                "challenge_id": 1957, 
                "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u0447\u0442\u043e \u0443 \u0432\u0430\u0441 \u043a\u0443\u0447\u043a\u0430 \u0438\u0437 N \u043f\u0430\u043b\u043e\u0447\u0435\u043a. \u041f\u0430\u043b\u043e\u0447\u043a\u0438 \u0432 \u044d\u0442\u043e\u0439 \u043a\u0443\u0447\u043a\u0435 \u0438\u043c\u0435\u044e\u0442 \u0434\u043b\u0438\u043d\u044b: A<sub>1</sub>, A<sub>2</sub>, ..., A<sub>N</sub>. \u0414\u0430\u043b\u0435\u0435 \u0432\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e: \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0435 \u0432\u0441\u0435 \u043f\u0430\u043b\u043e\u0447\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0434\u043b\u0438\u043d\u043d\u0435\u0435, \u0447\u0435\u043c \u0441\u0430\u043c\u0430\u044f \u043a\u043e\u0440\u043e\u0442\u043a\u0430\u044f \u043f\u0430\u043b\u043e\u0447\u043a\u0430 \u0432 \u043a\u0443\u0447\u043a\u0435, \u0438 \u0440\u0430\u0437\u043b\u0430\u043c\u044b\u0432\u0430\u0435\u0442\u0435 \u0438\u0445 \u043d\u0430 \u0434\u0432\u0435 \u0447\u0430\u0441\u0442\u0438, \u0442\u0430\u043a \u0447\u0442\u043e\u0431\u044b \u043e\u0434\u043d\u0430 \u0438\u0437 \u0447\u0430\u0441\u0442\u0435\u0439 \u0431\u044b\u043b\u0430 \u0440\u0430\u0432\u043d\u0430 \u043f\u043e \u0434\u043b\u0438\u043d\u0435 \u0441\u0430\u043c\u043e\u0439 \u043a\u043e\u0440\u043e\u0442\u043a\u043e\u0439 \u043f\u0430\u043b\u043e\u0447\u043a\u0435 \u0432 \u043a\u0443\u0447\u043a\u0435; \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u043f\u0430\u043b\u043e\u0447\u043a\u0438 \u0442\u0443 \u0447\u0430\u0441\u0442\u044c, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0440\u0430\u0432\u043d\u0430 \u043f\u043e \u0434\u043b\u0438\u043d\u0435 \u0441\u0430\u043c\u043e\u0439 \u043a\u043e\u0440\u043e\u0442\u043a\u043e\u0439 \u043f\u0430\u043b\u043e\u0447\u043a\u0435, \u0432\u044b \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442\u0435 \u0432 \u043a\u0443\u0447\u043a\u0435, \u0430 \u0434\u0440\u0443\u0433\u0443\u044e \u043e\u0442\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0435\u0442\u0435 \u0432 \u0441\u0442\u043e\u0440\u043e\u043d\u0443. \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u0443 \u0432\u0430\u0441 \u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u0432\u0435 \u043a\u0443\u0447\u043a\u0438: \u043f\u0435\u0440\u0432\u0430\u044f (\u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f) \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u0442\u044c \u0438\u0437 N \u043f\u0430\u043b\u043e\u0447\u0435\u043a, \u043a\u0430\u0436\u0434\u0430\u044f \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0438\u043c\u0435\u0435\u0442 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u0443\u044e \u0434\u043b\u0438\u043d\u0443 (\u0434\u043b\u0438\u043d\u0430 \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u043f\u043e \u0434\u043b\u0438\u043d\u0435 \u043f\u0430\u043b\u043e\u0447\u043a\u0438), \u0432\u0442\u043e\u0440\u0430\u044f (\u043d\u043e\u0432\u0430\u044f) \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0430 \u0447\u0430\u0441\u0442\u044f\u043c\u0438 \u043f\u0430\u043b\u043e\u0447\u0435\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b \u043e\u0442\u043b\u043e\u0436\u0438\u043b\u0438 \u0432 \u0441\u0442\u043e\u0440\u043e\u043d\u0443.</p>\n\n<p>\u0422\u0435\u043f\u0435\u0440\u044c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u0447\u0442\u043e, \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0432 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u043e\u0434\u0438\u043d \u0440\u0430\u0437 \u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0432 \u0434\u0432\u0435 \u043a\u0443\u0447\u043a\u0438, \u0432\u044b \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u0434\u0430\u043b\u0435\u0435 \u0434\u043b\u044f \u043d\u043e\u0432\u043e\u0439 \u043a\u0443\u0447\u043a\u0438. \u0410 \u0437\u0430\u0442\u0435\u043c \u0441\u043d\u043e\u0432\u0430 \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u0443\u044e \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u0434\u043b\u044f \u043d\u043e\u0432\u043e\u0439 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0439 \u043a\u0443\u0447\u043a\u0438. \u0418 \u0442\u0430\u043a \u0434\u0430\u043b\u0435\u0435 \u0432\u044b \u0431\u0443\u0434\u0435\u0442\u0435 \u0434\u0435\u043b\u0430\u0442\u044c, \u0434\u043e \u0442\u0435\u0445 \u043f\u043e\u0440, \u043f\u043e\u043a\u0430 \u043e\u0442\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0435 \u043f\u0430\u043b\u043e\u0447\u043a\u0438 \u043d\u0435 \u0431\u0443\u0434\u0443\u0442 \u0440\u0430\u0432\u043d\u044b \u043f\u043e \u0434\u043b\u0438\u043d\u0435.</p>\n\n<p>\u0412\u0430\u043c \u0437\u0430\u0434\u0430\u043d\u044b \u043f\u0430\u043b\u043e\u0447\u043a\u0438 \u0432 \u043f\u0435\u0440\u0432\u043e\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0439 \u043a\u0443\u0447\u043a\u0435, \u0432\u0430\u043c \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043f\u0430\u043b\u043e\u0447\u0435\u043a \u0432 \u043a\u0443\u0447\u043a\u0430\u0445 \u0432 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438.</p>\n\n<p><strong>\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445</strong>  </p>\n\n<p>\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e N. \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b N \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b A<sub>i</sub>, \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0431\u0435\u043b\u0430\u043c\u0438.</p>\n\n<p><strong>\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445</strong>  </p>\n\n<p>\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432 \u043f\u0430\u043b\u043e\u0447\u0435\u043a \u0432 \u043a\u0443\u0447\u043a\u0430\u0445, \u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u0447\u0438\u0441\u043b\u0443 \u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0443.</p>\n\n<p><strong>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f</strong>  </p>\n\n<p>1 &lt;= N &lt;= 1000 <br>\n1 &lt;= A<sub>i</sub> &lt;= 1000</p>\n\n<p><strong>\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435</strong></p>\n\n<pre><code>8\n1 2 3 4 3 3 2 1\n</code></pre>\n\n<p><strong>\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435</strong></p>\n\n<pre><code>8\n6\n4\n1\n</code></pre>\n\n<p><strong>\u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u0435 \u043a \u043f\u0440\u0438\u043c\u0435\u0440\u0443</strong>  </p>\n\n<p>\u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0437\u0430\u0434\u0430\u043d\u043e 8 \u043f\u0430\u043b\u043e\u0447\u0435\u043a. \u041f\u0440\u0438\u043c\u0435\u043d\u0438\u0432 \u043f\u0435\u0440\u0432\u0443\u044e \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e, \u043c\u044b \u043e\u0442\u043b\u043e\u0436\u0438\u043c 6 \u043f\u0430\u043b\u043e\u0447\u0435\u043a \u0432 \u043d\u043e\u0432\u0443\u044e \u043a\u0443\u0447\u043a\u0443. \u0414\u043b\u0438\u043d\u044b \u043f\u0430\u043b\u043e\u0447\u0435\u043a \u0432 \u043d\u043e\u0432\u043e\u0439 \u043a\u0443\u0447\u043a\u0435 \u0431\u0443\u0434\u0443\u0442 \u0440\u0430\u0432\u043d\u044b: 1,2,3,2,2,1. <br>\n\u041f\u0440\u0438\u043c\u0435\u043d\u0438\u0432 \u0432\u0442\u043e\u0440\u0443\u044e \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u043a \u043f\u0430\u043b\u043e\u0447\u043a\u0430\u043c \u0432 \u043d\u043e\u0432\u043e\u0439 \u043a\u0443\u0447\u043a\u0435, \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043c \u0435\u0449\u0435 \u043e\u0434\u043d\u0443 \u043d\u043e\u0432\u0443\u044e \u043a\u0443\u0447\u043a\u0443 \u0441 \u0434\u043b\u0438\u043d\u0430\u043c\u0438 \u043f\u0430\u043b\u043e\u0447\u0435\u043a: 1,2,1,1.\n\u0414\u0430\u043b\u0435\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0432 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u043a \u044d\u0442\u0438\u043c \u043f\u0430\u043b\u043e\u0447\u043a\u0430\u043c, \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043c \u043e\u0434\u043d\u0443 \u043d\u043e\u0432\u0443\u044e \u043a\u0443\u0447\u043a\u0443 \u0441 \u043e\u0434\u043d\u043e\u0439 \u043f\u0430\u043b\u043e\u0447\u043a\u043e\u0439 \u0434\u043b\u0438\u043d\u044b 1. \u041d\u0430 \u044d\u0442\u043e\u043c \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u0442\u0441\u044f. </p>\n\n<p>\u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432 \u043f\u0430\u043b\u043e\u0447\u0435\u043a \u0432 \u043a\u0443\u0447\u043a\u0430\u0445: 8, 6, 4, 1.</p></div></div>", 
                "preview": null
            }
        ], 
        "clojure_template_tail": "", 
        "cpp_template": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nint main(){\n    int n;\n    cin >> n;\n    vector<int> arr(n);\n    for(int arr_i = 0;arr_i < n;arr_i++){\n    \tcin >> arr[arr_i];\n    }\n    return 0;\n}", 
        "c_template_tail": "", 
        "cpp_template_tail": "", 
        "category": "ai", 
        "haskell_template_tail": "", 
        "php_template": "<?php\n\n$handle = fopen (\"php://stdin\",\"r\");\nfscanf($handle,\"%d\",$n);\n$arr_temp = fgets($handle);\n$arr = explode(\" \",$arr_temp);\narray_walk($arr,'intval');\n\n?>", 
        "perl_template": "#!/usr/bin/perl\n\n$n = <STDIN>;\nchomp $n;\n$arr_temp = <STDIN>;\n@arr = split / /,$arr_temp;\nchomp @arr;\n", 
        "can_be_viewed": true, 
        "submitted_hackers_count": 81265, 
        "public_solutions": true, 
        "javascript_template_tail": "", 
        "c_template_head": "", 
        "deleted": false, 
        "real_dynamic": false, 
        "php_template_tail": "", 
        "difficulty_score": "0.073", 
        "difficulty": 0.9415204678362573, 
        "active": true, 
        "slug": "cut-the-sticks", 
        "show_skeliton": null, 
        "player_count": 2, 
        "is_preview_contest": false, 
        "is_editorial_available": true, 
        "epoch_endtime": null, 
        "cpp_template_head": "", 
        "perl_template_tail": "", 
        "author_avatar": "https://hrcdn.net/s3_pub/hr-avatars/e013db60-c4d5-4fe3-a322-82ab33c96a8c/150x150.png", 
        "judgebot_language": null, 
        "php_template_head": "", 
        "java_template": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int arr[] = new int[n];\n        for(int arr_i=0; arr_i < n; arr_i++){\n            arr[arr_i] = in.nextInt();\n        }\n    }\n}", 
        "python3_template_tail": "", 
        "python_template": "#!/bin/python\n\nimport sys\n\n\nn = int(raw_input().strip())\narr = map(int,raw_input().strip().split(' '))\n", 
        "color": null, 
        "has_all_test_cases_public": false, 
        "time_left": null, 
        "scala_template": "object Solution {\n\n    def main(args: Array[String]) {\n        val sc = new java.util.Scanner (System.in);\n        var n = sc.nextInt();\n        var arr = new Array[Int](n);\n        for(arr_i <- 0 to n-1) {\n        \tarr(arr_i) = sc.nextInt();\n        }\n    }\n}", 
        "lua_template_head": "", 
        "kind": "code", 
        "is_custom": false, 
        "ruby_template": "#!/bin/ruby\n\nn = gets.strip.to_i\narr = gets.strip\narr = arr.split(' ').map(&:to_i)\n", 
        "haskell_template": "import Control.Applicative\nimport Control.Monad\nimport System.IO\n\n\nmain :: IO ()\nmain = do\n    n_temp <- getLine\n    let n = read n_temp :: Int\n    arr_temp <- getLine\n    let arr = map read $ words arr_temp :: [Int]\n\ngetMultipleLines :: Int -> IO [String]\n\ngetMultipleLines n\n    | n <= 0 = return []\n    | otherwise = do          \n        x <- getLine         \n        xs <- getMultipleLines (n-1)    \n        let ret = (x:xs)    \n        return ret          \n\n", 
        "solved_score": 0.5, 
        "expert_solution_status": false, 
        "objectivec_template_tail": "", 
        "custom": false, 
        "preview": "Given the length of N sticks, print the number of sticks that are left before subsequent cut operations.", 
        "company": null, 
        "is_text": false, 
        "python3_template_head": "", 
        "clojure_template": "(use '[clojure.string :only (split triml)])\n\n(\n        let [\n          n_t (read-line) \n          n (Integer/parseInt n_t) \n        ]\n\n      (\n        let [\n          arr_temp (read-line) \n          arr_t (split arr_temp #\"\\s+\") \n          arr (map #(Integer/parseInt %) arr_t) \n        ]\n      )\n\n)", 
        "java_template_head": "", 
        "require_unlock": true, 
        "erlang_template_tail": "", 
        "csharp_template": "using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nclass Solution {\n\n    static void Main(String[] args) {\n        int n = Convert.ToInt32(Console.ReadLine());\n        string[] arr_temp = Console.ReadLine().Split(' ');\n        int[] arr = Array.ConvertAll(arr_temp,Int32.Parse);\n    }\n}", 
        "has_started": true, 
        "erlang_template": "-module(solution).\n-export([main/0]).\n\nmain() ->\n\n    { ok, [N]} = io:fread(\"\", \"~d\"),\n    Arr = read_array(N,\"~d\"),\n    true.\n\nread_array(0,D) -> [];\nread_array(N,D) -> \n\t{ok, [X]} = io:fread(\"\", D),\n\t[X | read_array(N-1,D)].\n\nread_2darray(0,M,D) -> [];\nread_2darray(N,M,D) ->\n\tQ=read_array(M,D),\n\t[Q | read_2darray(N-1,M,D)].\n\n", 
        "judgebot": null, 
        "custom_checker_language": "", 
        "custom_case": true, 
        "scala_template_head": "", 
        "topics": [
            {
                "slug": "sorting", 
                "title": "Sorting"
            }
        ], 
        "updated_at": "2017-07-11T15:45:33.000Z", 
        "author_name": "shashank21j", 
        "onboarding": null, 
        "id": 1957, 
        "lua_template": "n = io.read(\"*number\", \"*l\")\narr = {}\narr_temp = io.read()\narr_i = 1;\nfor token in string.gmatch(arr_temp, \"[^%s]+\") do\n\tarr[arr_i] = token\n\tarr_i = arr_i + 1\nend\n", 
        "has_ended": false, 
        "javascript_template": "process.stdin.resume();\nprocess.stdin.setEncoding('ascii');\n\nvar input_stdin = \"\";\nvar input_stdin_array = \"\";\nvar input_currentline = 0;\n\nprocess.stdin.on('data', function (data) {\n    input_stdin += data;\n});\n\nprocess.stdin.on('end', function () {\n    input_stdin_array = input_stdin.split(\"\\n\");\n    main();    \n});\n\nfunction readLine() {\n    return input_stdin_array[input_currentline++];\n}\n\n/////////////// ignore above this line ////////////////////\n\nfunction main() {\n    var n = parseInt(readLine());\n    arr = readLine().split(' ');\n    arr = arr.map(Number);\n\n}\n", 
        "c_template": "#include <math.h>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <assert.h>\n#include <limits.h>\n#include <stdbool.h>\n\nint main(){\n    int n; \n    scanf(\"%d\",&n);\n    int arr[n];\n    for(int arr_i = 0; arr_i < n; arr_i++){\n    \tscanf(\"%d\",&arr[arr_i]);\n    }\n    return 0;\n}", 
        "is_solution_unlocked": false, 
        "checker_program": null, 
        "scala_template_tail": "", 
        "status": null, 
        "hacker": {
            "username": "HackerRank", 
            "is_admin": true, 
            "id": 15055, 
            "avatar": "https://hrcdn.net/s3_pub/hr-avatars/4c95f96b-1ff9-46ed-98f8-cb3cb4ed8834/150x150.png"
        }, 
        "track": {
            "name": "Implementation", 
            "taxonomy": 1, 
            "track_slug": "algorithms", 
            "track_id": 3, 
            "track_name": "Algorithms", 
            "id": 108, 
            "rewards_system_enabled": true, 
            "slug": "implementation"
        }, 
        "csharp_template_head": "", 
        "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>You are given <span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-1-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"2.064ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -791.3 888.5 936.9\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></g></svg></span> sticks, where the <em>length</em> of each stick is a positive integer. A <em>cut operation</em> is performed on the sticks such that all of them are reduced by the length of the smallest stick.</p>\n\n<p>Suppose we have six sticks of the following lengths:<br></p>\n\n<pre><code>5 4 4 2 2 8\n</code></pre>\n\n<p>Then, in one <em>cut operation</em> we make a cut of length <em>2</em> from each of the six sticks. For the next <em>cut operation</em> four sticks are left (of non-zero length), whose lengths are the following: <br></p>\n\n<pre><code>3 2 2 6\n</code></pre>\n\n<p>The above step is repeated until no sticks are left.</p>\n\n<p>Given the length of <span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-2-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"2.064ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -791.3 888.5 936.9\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></g></svg></span> sticks, print the number of sticks that are left before each subsequent <em>cut operations</em>.</p>\n\n<p><em>Note:</em> For each <em>cut operation</em>, you have to recalcuate the  length of smallest sticks (excluding zero-length sticks).</p>\n\n<p><strong>Input Format</strong> <br>\nThe first line contains a single integer <span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-3-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"2.064ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -791.3 888.5 936.9\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></g></svg></span>. <br>\nThe next line contains <span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-4-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"2.064ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -791.3 888.5 936.9\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></g></svg></span> integers: <em>a<sub>0</sub>, a<sub>1</sub>,...a<sub>N-1</sub></em>  separated by space, where <span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-5-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"2.029ex\" height=\"2.009ex\" style=\"vertical-align: -0.671ex;\" viewBox=\"0 -576.1 873.8 865.1\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><g transform=\"translate(529,-150)\"><path stroke-width=\"1\" transform=\"scale(0.707)\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g></svg></span> represents the length of the <span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-6-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"2.575ex\" height=\"2.509ex\" style=\"vertical-align: -0.338ex;\" viewBox=\"0 -934.9 1108.8 1080.4\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path><g transform=\"translate(345,362)\"><path stroke-width=\"1\" transform=\"scale(0.707)\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"></path><g transform=\"translate(255,0)\"><path stroke-width=\"1\" transform=\"scale(0.707)\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"></path></g></g></g></svg></span> stick.</p>\n\n<p><strong>Output Format</strong> <br>\nFor each operation, print the number of sticks that are cut, on separate lines.  </p>\n\n<p><strong>Constraints</strong>  </p>\n\n<ul>\n<li><span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-7-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"14.073ex\" height=\"2.343ex\" style=\"vertical-align: -0.505ex;\" viewBox=\"0 -791.3 6059.1 1008.6\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><g transform=\"translate(778,0)\"><path stroke-width=\"1\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g transform=\"translate(1834,0)\"><path stroke-width=\"1\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"></path></g><g transform=\"translate(3000,0)\"><path stroke-width=\"1\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g transform=\"translate(4057,0)\"><path stroke-width=\"1\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path stroke-width=\"1\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path><path stroke-width=\"1\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1001,0)\"></path><path stroke-width=\"1\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1501,0)\"></path></g></g></svg></span></li>\n<li><span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-8-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"14.039ex\" height=\"2.509ex\" style=\"vertical-align: -0.671ex;\" viewBox=\"0 -791.3 6044.4 1080.4\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><g transform=\"translate(778,0)\"><path stroke-width=\"1\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g transform=\"translate(1834,0)\"><path stroke-width=\"1\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path><g transform=\"translate(529,-150)\"><path stroke-width=\"1\" transform=\"scale(0.707)\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g></g><g transform=\"translate(2986,0)\"><path stroke-width=\"1\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g transform=\"translate(4042,0)\"><path stroke-width=\"1\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path stroke-width=\"1\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path><path stroke-width=\"1\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1001,0)\"></path><path stroke-width=\"1\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1501,0)\"></path></g></g></svg></span></li>\n</ul>\n\n<p><strong>Sample Input 0</strong></p>\n\n<pre><code>6\n5 4 4 2 2 8\n</code></pre>\n\n<p><strong>Sample Output 0</strong></p>\n\n<pre><code>6\n4\n2\n1\n</code></pre>\n\n<p><strong>Sample Input 1</strong></p>\n\n<pre><code>8\n1 2 3 4 3 3 2 1\n</code></pre>\n\n<p><strong>Sample Output 1</strong></p>\n\n<pre><code>8\n6\n4\n1\n</code></pre>\n\n<p><strong>Explanation</strong></p>\n\n<p><em>Sample Case 0 :</em> </p>\n\n<div class=\"highlight\"><pre>sticks-length        length-of-cut   sticks-cut\n5 4 4 2 2 8             2               6\n3 2 2 _ _ 6             2               4\n1 _ _ _ _ 4             1               2\n_ _ _ _ _ 3             3               1\n_ _ _ _ _ _           DONE            DONE\n</pre></div>\n\n\n<p><em>Sample Case 1</em></p>\n\n<div class=\"highlight\"><pre>sticks-length         length-of-cut   sticks-cut\n1 2 3 4 3 3 2 1         1               8\n_ 1 2 3 2 2 1 _         1               6\n_ _ 1 2 1 1 _ _         1               4\n_ _ _ 1 _ _ _ _         1               1\n_ _ _ _ _ _ _ _       DONE            DONE\n</pre></div>\n</div></div></div>", 
        "haskell_template_head": "", 
        "max_score": 25, 
        "user_score": 0, 
        "requirements_description": null, 
        "created_at": "2014-02-24T10:10:09.000Z", 
        "countdown_time": 0, 
        "objectivec_template": "#import <Foundation/Foundation.h>\n\n\nint main(int argc, const char * argv[]){\n    NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];\n    int n;\n    scanf(\"%i\",&n)\n    int arr[n];\n    for(int arr_i = 0; arr_i < n; arr_i++){\n    \tscanf(\"%d\",&arr[arr_i]);\n    }\n    [pool drain];\n    return 0;\n}\n\n", 
        "csharp_template_tail": "", 
        "lua_template_tail": "", 
        "perl_template_head": ""
    }
}