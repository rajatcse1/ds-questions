{
    "status": true, 
    "model": {
        "onboarding": null, 
        "tagAncestry": [], 
        "solved_count": 340, 
        "leaderboard_out_of_sync_message": null, 
        "public_test_cases": true, 
        "checker_program": null, 
        "topics": [], 
        "time_left": null, 
        "updated_at": "2017-07-11T15:45:53.000Z", 
        "author_name": "Eureka6174", 
        "has_started": true, 
        "epoch_starttime": null, 
        "has_all_test_cases_public": false, 
        "difficulty_name": "Medium", 
        "require_unlock": true, 
        "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>There are N cities and N directed roads in Steven's world. The cities are numbered from 0 to N - 1. Steven can travel from city <em>i</em> to city <em>(i + 1) % N</em>, ( 0-&gt; 1 -&gt; 2 -&gt; .... -&gt; N - 1 -&gt; 0). </p>\n\n<p>Steven wants to travel around the world by car. The capacity of his car's fuel tank is C gallons. There are a[i] gallons he can use at the beginning of city <em>i</em> and the car takes b[i] gallons to travel from city <em>i</em> to <em>(i + 1) % N</em>.  </p>\n\n<p>How many cities can Steven start his car from so that he can travel around the world and reach the same city he started? </p>\n\n<p><strong>Note</strong>  </p>\n\n<p>The fuel tank is initially empty. </p></div></div></div><div class='challenge_input_format'><div class='msB challenge_input_format_title'><p><strong>Input Format</strong></p></div><div class='msB challenge_input_format_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>The first line contains two integers (separated by a space): city number <em>N</em> and capacity <em>C</em>. <br>\nThe second line contains <em>N</em> space-separated integers: a[0], a[1], \u2026 , a[N - 1]. <br>\nThe third line contains <em>N</em> space-separated integers: b[0], b[1], \u2026 , b[N - 1].  </p></div></div></div><div class='challenge_constraints'><div class='msB challenge_constraints_title'><p><strong>Constraints</strong></p></div><div class='msB challenge_constraints_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>2 \u2264 N \u2264 10<sup>5</sup> <br>\n1 \u2264 C \u2264 10<sup>18</sup> <br>\n0 \u2264 a[i], b[i] \u2264 10<sup>9</sup>  </p></div></div></div><div class='challenge_output_format'><div class='msB challenge_output_format_title'><p><strong>Output Format</strong></p></div><div class='msB challenge_output_format_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>The number of cities which can be chosen as the start city.</p></div></div></div><div class='challenge_sample_input'><div class='msB challenge_sample_input_title'><p><strong>Sample Input</strong></p></div><div class='msB challenge_sample_input_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><pre><code>3 3\n3 1 2\n2 2 2\n</code></pre></div></div></div><div class='challenge_sample_output'><div class='msB challenge_sample_output_title'><p><strong>Sample Output</strong></p></div><div class='msB challenge_sample_output_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><pre><code>2\n</code></pre></div></div></div><div class='challenge_explanation'><div class='msB challenge_explanation_title'><p><strong>Explanation</strong></p></div><div class='msB challenge_explanation_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>Steven starts from city 0, fills his car with 3 gallons of fuel, and use 2 gallons of fuel to travel to city 1. His fuel tank now has 1 gallon of fuel. <br>\nOn refueling 1 gallon of fuel at city 1, he then travels to city 2 by using 2 gallons of fuel. His fuel tank is now empty. <br>\nOn refueling 2 gallon of fuel at city 2, he then travels back to city 0 by using 2 gallons of fuel.  </p>\n\n<p>Here is the second possible solution. <br>\nSteven starts from city 2, fill his car with 2 gallons, and travels to city 0. <br>\nOn refueling 3 gallons of fuel from city 0, he then travels to city 1, and exhausts 2 gallons of fuel. His fuel tank contains 1 gallon of fuel now.\nHe can then refuel 1 gallon of fuel at City 1, and increase his car's fuel to 2 gallons and travel to city 2. </p>\n\n<p>However, Steven cannot start from city 1, because he is given only 1 gallon of fuel, but travelling to city 2 requires 2 gallons. </p>\n\n<p>Hence the answer 2.  </p></div></div></div>", 
        "hacker": {
            "username": "HackerRank", 
            "is_admin": true, 
            "id": 15055, 
            "avatar": "https://hrcdn.net/s3_pub/hr-avatars/4c95f96b-1ff9-46ed-98f8-cb3cb4ed8834/150x150.png"
        }, 
        "id": 2186, 
        "leaderboard_out_of_sync": null, 
        "has_ended": false, 
        "languages": [
            "c", 
            "cpp", 
            "java", 
            "csharp", 
            "php", 
            "ruby", 
            "python", 
            "perl", 
            "haskell", 
            "clojure", 
            "scala", 
            "lua", 
            "go", 
            "javascript", 
            "erlang", 
            "d", 
            "ocaml", 
            "pascal", 
            "python3", 
            "groovy", 
            "objectivec", 
            "fsharp", 
            "visualbasic", 
            "lolcode", 
            "smalltalk", 
            "tcl", 
            "whitespace", 
            "sbcl", 
            "java8", 
            "octave", 
            "racket", 
            "rust", 
            "bash", 
            "r", 
            "swift", 
            "fortran", 
            "cpp14", 
            "coffeescript", 
            "ada", 
            "pypy", 
            "pypy3", 
            "elixir", 
            "kotlin", 
            "julia"
        ], 
        "is_custom": false, 
        "compile_and_test": true, 
        "default_language": null, 
        "migrated_resource": null, 
        "submit_disabled": false, 
        "expert_solution_status": false, 
        "can_solve": true, 
        "company_id": null, 
        "custom": false, 
        "can_be_viewed": true, 
        "track": {
            "name": "Dynamic Programming", 
            "taxonomy": 1, 
            "track_slug": "algorithms", 
            "track_id": 3, 
            "track_name": "Algorithms", 
            "id": 35, 
            "rewards_system_enabled": true, 
            "slug": "dynamic-programming"
        }, 
        "primary_contest": {
            "migration_status": null, 
            "contest_broadcast": null, 
            "hacker_timelimit": null, 
            "notification": null, 
            "qualification_rule_value": null, 
            "leaderboard_backend": null, 
            "expose_stats": null, 
            "updated_at": "2016-08-07T15:02:48.000Z", 
            "custom_leaderboard_column_name": null, 
            "organization_type": null, 
            "ended": true, 
            "epoch_starttime": 1399305600, 
            "timezone": "PST", 
            "disable_forum": null, 
            "id": 775, 
            "primary_track_id": 3, 
            "limited_participants": null, 
            "school_leaderboard_enabled": false, 
            "time_limited_contest": false, 
            "archived": true, 
            "rated": true, 
            "parent_contest_id": null, 
            "leaderboard_out_of_sync_message": null, 
            "leaderboard_type": "country", 
            "tagline": "1 challenge every day! ", 
            "effective_epoch_endtime": 1399910400, 
            "show_participants_info": null, 
            "homepage_background_color": "", 
            "organization_name": null, 
            "track": {
                "name": "Algorithms", 
                "id": 3, 
                "priority": 14, 
                "descriptions": "The true test of problem solving: when one realizes that time and memory aren't infinite.\n", 
                "rewards_system_enabled": true, 
                "slug": "algorithms"
            }, 
            "primary_tag_id": 3081, 
            "hide_navigation": null, 
            "show_penalty": null, 
            "effective_time_left": -103444666.23068032, 
            "hidden": null, 
            "homepage": "", 
            "public": true, 
            "testers_contest": null, 
            "description": "This is our 2nd Week of daily challenges. Each day you get to solve a challenge and the difficulty increases as the week progresses! <br />\n\nYou have an entire weekend to solve the final challenge. <br />\n\nThere are 5 challenges in total!!  <br /> <br />\n\nTie-breaking rule is little different for the contest. For each challenge, we calculate your \"solved time\" which is difference between the time you submitted to the challenge and time you opened the challenge. This way, you do not have to worry about solving the challenge as soon as it becomes available. <br />\n\nRead more about this contest  <a href=\"/blog/daily-challenge\">here</a>. ", 
            "hide_difficulty": null, 
            "started": true, 
            "time_left": -103444666.22324237, 
            "challenges_count": 5, 
            "qualification_rule_msg": null, 
            "leaderboard_out_of_sync": null, 
            "team_event": false, 
            "disable_fsi": null, 
            "hide_submissions": null, 
            "leaderboard_format": "", 
            "leaderboard_broadcast_message": null, 
            "has_tracks": null, 
            "college_public": null, 
            "endtime": "2014-05-12T16:00:00.000Z", 
            "qualification_rule_type": null, 
            "slug": "w2", 
            "hide_leaderboard": null, 
            "kind": "weekly", 
            "comment_live_sync": null, 
            "name": "Weekly Challenges - Week 2", 
            "is_multi_round": false, 
            "created_at": "2014-03-19T10:53:06.000Z", 
            "epoch_endtime": 1399910400, 
            "company_associated_contest": null, 
            "rating_category": "Weekly", 
            "has_codesprint_reg_page": null, 
            "starttime": "2014-05-05T16:00:00.000Z", 
            "is_rating_updated": true, 
            "leaderboard_freeze_time": null, 
            "migration_disabled": null, 
            "template_id": 103
        }, 
        "factor": 120, 
        "is_solution_unlocked": false, 
        "preview": "Generalized TSP, counting total number of staring point for the journey so that fuel is sufficient to complete the journey", 
        "is_editorial_available": true, 
        "status": null, 
        "category": "ai", 
        "public_solutions": true, 
        "color": null, 
        "deleted": false, 
        "dynamic": true, 
        "company": null, 
        "moderator_or_support": false, 
        "is_text": false, 
        "solved_score": 0.5, 
        "difficulty_score": "0.383", 
        "difficulty": 0.6280487804878049, 
        "active": true, 
        "show_skeliton": null, 
        "max_score": 120, 
        "slug": "travel-around-the-world", 
        "contest_slug": "master", 
        "user_score": 0, 
        "real_dynamic": false, 
        "kind": "code", 
        "player_count": 2, 
        "submitted_hackers_count": 838, 
        "name": "Travel around the world", 
        "is_preview_contest": false, 
        "level": 43, 
        "success_ratio": 0.40572792362768495, 
        "total_count": 838, 
        "created_at": "2014-03-21T04:48:51.000Z", 
        "epoch_endtime": null, 
        "judgebot": null, 
        "available_translations": [
            {
                "body": "\n\u5728Steven\u7684\u4e16\u754c\u91cc\uff0c\u6709\u901a\u8fc7N\u6761\u5355\u5411\u9053\u8def\u8fde\u63a5\u7684N\u4e2a\u57ce\u5e02\u3002\u7a0b\u5e8f\u6807\u53f7\u5206\u522b\u4e3a 0 \u5230 N - 1\u3002Steven\u53ef\u4ee5\u4ece \u57ce\u5e02 *i* \u8d70\u5230 \u57ce\u5e02 *(i + 1) % N*\uff0c( 0-> 1 -> 2 -> .... -> N - 1 -> 0). <br>\n\nSteven \u60f3\u5f00\u6c7d\u8f66\u5de1\u6e38\u4e16\u754c\u3002\u4ed6\u7684\u8f66\u5b50\u7684\u6cb9\u7bb1\u5bb9\u79ef\u4e3a C \u5347\u3002\u5728\u6bcf\u4e00\u5ea7\u57ce\u5e02\u4ed6\u53ef\u4ee5\u6700\u591a\u52a0 a[i] \u5347\u6cb9\uff0c\u5e76\u4e14\u4ece \u57ce\u5e02 *i* \u5230\u4e0b\u4e00\u4e2a\u57ce\u5e02\u6cb9\u8017\u4e3a b[i] \u5347\u3002\n\nSteven \u5e0c\u671b\u53ef\u4ee5\u4ece\u4e00\u4e2a\u57ce\u5e02\u51fa\u53d1\u7136\u540e\u6e38\u73a9\u6240\u6709\u7684\u57ce\u5e02\u56de\u5230\u51fa\u53d1\u7684\u57ce\u5e02\u3002\u4ed6\u6709\u591a\u5c11\u4e2a\u57ce\u5e02\u80fd\u591f\u4f5c\u4e3a\u51fa\u53d1\u70b9\uff1f\n\n**\u6ce8\u610f**  \n\n\u6cb9\u7bb1\u521d\u59cb\u4e3a\u7a7a\u3002\n\n**\u8f93\u5165\u683c\u5f0f**\n\n\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570\uff1a\u57ce\u5e02\u4e2a\u6570 *N* \u548c \u6cb9\u7bb1\u5bb9\u79ef *C* <br>\n\u7b2c\u4e8c\u884c\u5305\u542b *N* \u4e2a\u6574\u6570\uff1a a[0]  a[1]  \u2026   a[N - 1]\n\u7b2c\u4e09\u884c\u5305\u542b *N* \u4e2a\u6574\u6570\uff1a b[0]  b[1]  \u2026   b[N - 1]\n\n**\u8f93\u51fa\u683c\u5f0f** \n\n\u80fd\u591f\u4f5c\u4e3a\u51fa\u53d1\u57ce\u5e02\u7684\u4e2a\u6570\u3002\n\n**\u6570\u636e\u8303\u56f4**  \n\n2 \u2264 N \u2264 10<sup>5</sup>    \n1 \u2264 C \u2264 10<sup>18</sup>  \n1 \u2264 a[i], b[i] \u2264 10<sup>9</sup>  \n\n**\u6837\u4f8b\u8f93\u5165**\n\n    3 3\n    3 1 2\n    2 2 2\n\n**\u6837\u4f8b\u8f93\u51fa**  \n\n    2\n\n**\u6837\u4f8b\u89e3\u6790**  \n\nSteven \u5982\u679c\u4ece\u57ce\u5e02 0 \u51fa\u53d1\uff1a<br>\n\u5728\u57ce\u5e020\uff0c\u5148\u52a03\u5347\u6cb9\uff0c\u7136\u540e\u75282\u5347\u6cb9\u5230\u8fbe\u57ce\u5e021. \u6cb9\u7bb1\u8fd8\u52691\u5347\u6cb9\u3002<br>\n\u5728\u57ce\u5e021\uff0c\u5148\u52a01\u5347\u6cb9\uff0c\u7136\u540e\u75282\u5347\u6cb9\u5230\u8fbe\u57ce\u5e022. \u6cb9\u7bb1\u8fd8\u52690\u5347\u6cb9\u3002<br>\n\u5728\u57ce\u5e022\uff0c\u5148\u52a02\u5347\u6cb9\uff0c\u7136\u540e\u75282\u5347\u6cb9\u5230\u8fbe\u57ce\u5e020. \u6cb9\u7bb1\u8fd8\u52690\u5347\u6cb9\u3002<br>\n\n\nSteven \u5982\u679c\u4ece\u57ce\u5e02 2 \u51fa\u53d1\uff1a<br>\n\u5728\u57ce\u5e022\uff0c\u5148\u52a02\u5347\u6cb9\uff0c\u7136\u540e\u75282\u5347\u6cb9\u5230\u8fbe\u57ce\u5e020. \u6cb9\u7bb1\u8fd8\u52690\u5347\u6cb9\u3002<br>\n\u5728\u57ce\u5e020\uff0c\u5148\u52a03\u5347\u6cb9\uff0c\u7136\u540e\u75282\u5347\u6cb9\u5230\u8fbe\u57ce\u5e021. \u6cb9\u7bb1\u8fd8\u52691\u5347\u6cb9\u3002<br>\n\u5728\u57ce\u5e021\uff0c\u5148\u52a01\u5347\u6cb9\uff0c\u7136\u540e\u75282\u5347\u6cb9\u5230\u8fbe\u57ce\u5e022. \u6cb9\u7bb1\u8fd8\u52690\u5347\u6cb9\u3002<br>\n\n\u6240\u4ee5\u7b54\u6848\u662f 2. \n", 
                "problem_statement_fields": {
                    "sample_output": " ", 
                    "problem_statement": "\n\u5728Steven\u7684\u4e16\u754c\u91cc\uff0c\u6709\u901a\u8fc7N\u6761\u5355\u5411\u9053\u8def\u8fde\u63a5\u7684N\u4e2a\u57ce\u5e02\u3002\u7a0b\u5e8f\u6807\u53f7\u5206\u522b\u4e3a 0 \u5230 N - 1\u3002Steven\u53ef\u4ee5\u4ece \u57ce\u5e02 *i* \u8d70\u5230 \u57ce\u5e02 *(i + 1) % N*\uff0c( 0-> 1 -> 2 -> .... -> N - 1 -> 0). <br>\n\nSteven \u60f3\u5f00\u6c7d\u8f66\u5de1\u6e38\u4e16\u754c\u3002\u4ed6\u7684\u8f66\u5b50\u7684\u6cb9\u7bb1\u5bb9\u79ef\u4e3a C \u5347\u3002\u5728\u6bcf\u4e00\u5ea7\u57ce\u5e02\u4ed6\u53ef\u4ee5\u6700\u591a\u52a0 a[i] \u5347\u6cb9\uff0c\u5e76\u4e14\u4ece \u57ce\u5e02 *i* \u5230\u4e0b\u4e00\u4e2a\u57ce\u5e02\u6cb9\u8017\u4e3a b[i] \u5347\u3002\n\nSteven \u5e0c\u671b\u53ef\u4ee5\u4ece\u4e00\u4e2a\u57ce\u5e02\u51fa\u53d1\u7136\u540e\u6e38\u73a9\u6240\u6709\u7684\u57ce\u5e02\u56de\u5230\u51fa\u53d1\u7684\u57ce\u5e02\u3002\u4ed6\u6709\u591a\u5c11\u4e2a\u57ce\u5e02\u80fd\u591f\u4f5c\u4e3a\u51fa\u53d1\u70b9\uff1f\n\n**\u6ce8\u610f**  \n\n\u6cb9\u7bb1\u521d\u59cb\u4e3a\u7a7a\u3002\n\n**\u8f93\u5165\u683c\u5f0f**\n\n\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570\uff1a\u57ce\u5e02\u4e2a\u6570 *N* \u548c \u6cb9\u7bb1\u5bb9\u79ef *C* <br>\n\u7b2c\u4e8c\u884c\u5305\u542b *N* \u4e2a\u6574\u6570\uff1a a[0]  a[1]  \u2026   a[N - 1]\n\u7b2c\u4e09\u884c\u5305\u542b *N* \u4e2a\u6574\u6570\uff1a b[0]  b[1]  \u2026   b[N - 1]\n\n**\u8f93\u51fa\u683c\u5f0f** \n\n\u80fd\u591f\u4f5c\u4e3a\u51fa\u53d1\u57ce\u5e02\u7684\u4e2a\u6570\u3002\n\n**\u6570\u636e\u8303\u56f4**  \n\n2 \u2264 N \u2264 10<sup>5</sup>    \n1 \u2264 C \u2264 10<sup>18</sup>  \n1 \u2264 a[i], b[i] \u2264 10<sup>9</sup>  \n\n**\u6837\u4f8b\u8f93\u5165**\n\n    3 3\n    3 1 2\n    2 2 2\n\n**\u6837\u4f8b\u8f93\u51fa**  \n\n    2\n\n**\u6837\u4f8b\u89e3\u6790**  \n\nSteven \u5982\u679c\u4ece\u57ce\u5e02 0 \u51fa\u53d1\uff1a<br>\n\u5728\u57ce\u5e020\uff0c\u5148\u52a03\u5347\u6cb9\uff0c\u7136\u540e\u75282\u5347\u6cb9\u5230\u8fbe\u57ce\u5e021. \u6cb9\u7bb1\u8fd8\u52691\u5347\u6cb9\u3002<br>\n\u5728\u57ce\u5e021\uff0c\u5148\u52a01\u5347\u6cb9\uff0c\u7136\u540e\u75282\u5347\u6cb9\u5230\u8fbe\u57ce\u5e022. \u6cb9\u7bb1\u8fd8\u52690\u5347\u6cb9\u3002<br>\n\u5728\u57ce\u5e022\uff0c\u5148\u52a02\u5347\u6cb9\uff0c\u7136\u540e\u75282\u5347\u6cb9\u5230\u8fbe\u57ce\u5e020. \u6cb9\u7bb1\u8fd8\u52690\u5347\u6cb9\u3002<br>\n\n\nSteven \u5982\u679c\u4ece\u57ce\u5e02 2 \u51fa\u53d1\uff1a<br>\n\u5728\u57ce\u5e022\uff0c\u5148\u52a02\u5347\u6cb9\uff0c\u7136\u540e\u75282\u5347\u6cb9\u5230\u8fbe\u57ce\u5e020. \u6cb9\u7bb1\u8fd8\u52690\u5347\u6cb9\u3002<br>\n\u5728\u57ce\u5e020\uff0c\u5148\u52a03\u5347\u6cb9\uff0c\u7136\u540e\u75282\u5347\u6cb9\u5230\u8fbe\u57ce\u5e021. \u6cb9\u7bb1\u8fd8\u52691\u5347\u6cb9\u3002<br>\n\u5728\u57ce\u5e021\uff0c\u5148\u52a01\u5347\u6cb9\uff0c\u7136\u540e\u75282\u5347\u6cb9\u5230\u8fbe\u57ce\u5e022. \u6cb9\u7bb1\u8fd8\u52690\u5347\u6cb9\u3002<br>\n\n\u6240\u4ee5\u7b54\u6848\u662f 2. \n", 
                    "input_format": " ", 
                    "explanation": " ", 
                    "sample_input": " ", 
                    "output_format": " "
                }, 
                "name": "Travel around the world", 
                "language": "Chinese", 
                "challenge_id": 2186, 
                "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>\u5728Steven\u7684\u4e16\u754c\u91cc\uff0c\u6709\u901a\u8fc7N\u6761\u5355\u5411\u9053\u8def\u8fde\u63a5\u7684N\u4e2a\u57ce\u5e02\u3002\u7a0b\u5e8f\u6807\u53f7\u5206\u522b\u4e3a 0 \u5230 N - 1\u3002Steven\u53ef\u4ee5\u4ece \u57ce\u5e02 <em>i</em> \u8d70\u5230 \u57ce\u5e02 <em>(i + 1) % N</em>\uff0c( 0-&gt; 1 -&gt; 2 -&gt; .... -&gt; N - 1 -&gt; 0). <br></p>\n\n<p>Steven \u60f3\u5f00\u6c7d\u8f66\u5de1\u6e38\u4e16\u754c\u3002\u4ed6\u7684\u8f66\u5b50\u7684\u6cb9\u7bb1\u5bb9\u79ef\u4e3a C \u5347\u3002\u5728\u6bcf\u4e00\u5ea7\u57ce\u5e02\u4ed6\u53ef\u4ee5\u6700\u591a\u52a0 a[i] \u5347\u6cb9\uff0c\u5e76\u4e14\u4ece \u57ce\u5e02 <em>i</em> \u5230\u4e0b\u4e00\u4e2a\u57ce\u5e02\u6cb9\u8017\u4e3a b[i] \u5347\u3002</p>\n\n<p>Steven \u5e0c\u671b\u53ef\u4ee5\u4ece\u4e00\u4e2a\u57ce\u5e02\u51fa\u53d1\u7136\u540e\u6e38\u73a9\u6240\u6709\u7684\u57ce\u5e02\u56de\u5230\u51fa\u53d1\u7684\u57ce\u5e02\u3002\u4ed6\u6709\u591a\u5c11\u4e2a\u57ce\u5e02\u80fd\u591f\u4f5c\u4e3a\u51fa\u53d1\u70b9\uff1f</p>\n\n<p><strong>\u6ce8\u610f</strong>  </p>\n\n<p>\u6cb9\u7bb1\u521d\u59cb\u4e3a\u7a7a\u3002</p>\n\n<p><strong>\u8f93\u5165\u683c\u5f0f</strong></p>\n\n<p>\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570\uff1a\u57ce\u5e02\u4e2a\u6570 <em>N</em> \u548c \u6cb9\u7bb1\u5bb9\u79ef <em>C</em> <br>\n\u7b2c\u4e8c\u884c\u5305\u542b <em>N</em> \u4e2a\u6574\u6570\uff1a a[0]  a[1]  \u2026   a[N - 1]\n\u7b2c\u4e09\u884c\u5305\u542b <em>N</em> \u4e2a\u6574\u6570\uff1a b[0]  b[1]  \u2026   b[N - 1]</p>\n\n<p><strong>\u8f93\u51fa\u683c\u5f0f</strong> </p>\n\n<p>\u80fd\u591f\u4f5c\u4e3a\u51fa\u53d1\u57ce\u5e02\u7684\u4e2a\u6570\u3002</p>\n\n<p><strong>\u6570\u636e\u8303\u56f4</strong>  </p>\n\n<p>2 \u2264 N \u2264 10<sup>5</sup> <br>\n1 \u2264 C \u2264 10<sup>18</sup> <br>\n1 \u2264 a[i], b[i] \u2264 10<sup>9</sup>  </p>\n\n<p><strong>\u6837\u4f8b\u8f93\u5165</strong></p>\n\n<pre><code>3 3\n3 1 2\n2 2 2\n</code></pre>\n\n<p><strong>\u6837\u4f8b\u8f93\u51fa</strong>  </p>\n\n<pre><code>2\n</code></pre>\n\n<p><strong>\u6837\u4f8b\u89e3\u6790</strong>  </p>\n\n<p>Steven \u5982\u679c\u4ece\u57ce\u5e02 0 \u51fa\u53d1\uff1a<br>\n\u5728\u57ce\u5e020\uff0c\u5148\u52a03\u5347\u6cb9\uff0c\u7136\u540e\u75282\u5347\u6cb9\u5230\u8fbe\u57ce\u5e021. \u6cb9\u7bb1\u8fd8\u52691\u5347\u6cb9\u3002<br>\n\u5728\u57ce\u5e021\uff0c\u5148\u52a01\u5347\u6cb9\uff0c\u7136\u540e\u75282\u5347\u6cb9\u5230\u8fbe\u57ce\u5e022. \u6cb9\u7bb1\u8fd8\u52690\u5347\u6cb9\u3002<br>\n\u5728\u57ce\u5e022\uff0c\u5148\u52a02\u5347\u6cb9\uff0c\u7136\u540e\u75282\u5347\u6cb9\u5230\u8fbe\u57ce\u5e020. \u6cb9\u7bb1\u8fd8\u52690\u5347\u6cb9\u3002<br></p>\n\n<p>Steven \u5982\u679c\u4ece\u57ce\u5e02 2 \u51fa\u53d1\uff1a<br>\n\u5728\u57ce\u5e022\uff0c\u5148\u52a02\u5347\u6cb9\uff0c\u7136\u540e\u75282\u5347\u6cb9\u5230\u8fbe\u57ce\u5e020. \u6cb9\u7bb1\u8fd8\u52690\u5347\u6cb9\u3002<br>\n\u5728\u57ce\u5e020\uff0c\u5148\u52a03\u5347\u6cb9\uff0c\u7136\u540e\u75282\u5347\u6cb9\u5230\u8fbe\u57ce\u5e021. \u6cb9\u7bb1\u8fd8\u52691\u5347\u6cb9\u3002<br>\n\u5728\u57ce\u5e021\uff0c\u5148\u52a01\u5347\u6cb9\uff0c\u7136\u540e\u75282\u5347\u6cb9\u5230\u8fbe\u57ce\u5e022. \u6cb9\u7bb1\u8fd8\u52690\u5347\u6cb9\u3002<br></p>\n\n<p>\u6240\u4ee5\u7b54\u6848\u662f 2. </p></div></div>", 
                "preview": null
            }, 
            {
                "body": "\u0412 \u0433\u043e\u0440\u043e\u0434\u0435 Z \u0435\u0441\u0442\u044c **n** \u0434\u043e\u0440\u043e\u0433 \u0438 **n** \u043e\u0434\u043d\u043e\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0434\u043e\u0440\u043e\u0433. \u0414\u043b\u044f \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430 \u043f\u0440\u043e\u043d\u0443\u043c\u0435\u0440\u0443\u0435\u043c \u0433\u043e\u0440\u043e\u0434\u0430 \u043e\u0442 **0** \u0434\u043e **n-1**, \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e, \u043f\u0440\u043e\u043d\u0443\u043c\u0435\u0440\u0443\u0435\u043c \u0434\u043e\u0440\u043e\u0433\u0438 \u043e\u0442 **0** \u0434\u043e **n-1**. \u0418\u0437\u0432\u0435\u0441\u0442\u043d\u043e, \u0447\u0442\u043e \u0434\u043e\u0440\u043e\u0433\u0430 \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c **i** \u0432\u0435\u0434\u0435\u0442 \u0438\u0437 \u0433\u043e\u0440\u043e\u0434\u0430 \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c **i** \u0432 \u0433\u043e\u0440\u043e\u0434 \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c **(i+1)**. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0434\u043e\u0440\u043e\u0433\u0430 \u043d\u0430\u0447\u0438\u043d\u0430\u044e\u0449\u0430\u044f\u0441\u044f \u0432 \u0433\u043e\u0440\u043e\u0434\u0435 \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c **n-1** \u0432\u0435\u0434\u0435\u0442 \u0432 \u0433\u043e\u0440\u043e\u0434 **0** \u0438 \u0438\u043c\u0435\u0435\u0442 \u043d\u043e\u043c\u0435\u0440 **n-1**.\n\n\u0423 \u0421\u0442\u0438\u0432\u0435\u043d\u0430 \u0435\u0441\u0442\u044c \u043c\u0430\u0448\u0438\u043d\u0430, \u043e\u043d \u0445\u043e\u0447\u0435\u0442 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u0430\u0442\u044c \u0438\u0437 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0433\u043e\u0440\u043e\u0434\u0430, \u043f\u0440\u043e\u0435\u0445\u0430\u0442\u044c \u0432\u0441\u0435 \u0433\u043e\u0440\u043e\u0434\u0430 \u043f\u043e \u043a\u0440\u0443\u0433\u0443 \u0438 \u0432\u0435\u0440\u043d\u0443\u0442\u044c\u0441\u044f \u0432 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u0433\u043e\u0440\u043e\u0434. \u0418\u0437\u0432\u0435\u0441\u0442\u043d\u043e, \u0447\u0442\u043e \u0432 \u0433\u043e\u0440\u043e\u0434\u0435 \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c **i** \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043f\u0440\u0430\u0432\u0438\u0442\u044c **a[i]** \u043b\u0438\u0442\u0440\u043e\u0432 \u0431\u0435\u043d\u0437\u0438\u043d\u0430 \u0432 \u0431\u0435\u043d\u0437\u043e\u0431\u0430\u043a \u043c\u0430\u0448\u0438\u043d\u044b, \u0430 \u043d\u0430 \u043f\u0440\u0435\u043e\u0434\u043e\u043b\u0435\u043d\u0438\u0435 **i**-\u0439 \u0434\u043e\u0440\u043e\u0433\u0438 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f **b[i]** \u043b\u0438\u0442\u0440\u043e\u0432 \u0431\u0435\u043d\u0437\u0438\u043d\u0430. \u0421\u043a\u043e\u043b\u044c\u043a\u0438\u043c\u0438 \u0441\u043f\u043e\u0441\u043e\u0431\u0430\u043c\u0438 \u0421\u0442\u0438\u0432\u0435\u043d \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u0433\u043e\u0440\u043e\u0434, \u0435\u0441\u043b\u0438 \u0435\u0433\u043e \u0431\u0430\u043a \u0441 \u0431\u0435\u043d\u0437\u0438\u043d\u043e\u043c \u0432\u043c\u0435\u0449\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f **C** \u043b\u0438\u0442\u0440\u043e\u0432 \u0431\u0435\u043d\u0437\u0438\u043d\u0430? \u0421\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0431\u0435\u043d\u0437\u043e\u0431\u0430\u043a \u043c\u0430\u0448\u0438\u043d\u044b \u0421\u0442\u0438\u0432\u0435\u043d\u0430 \u043f\u0443\u0441\u0442\u043e\u0439.\n\n**\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:**\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0434\u0432\u0430 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 **n** \u0438 **C**.\n\u0412\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b **n** \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u043c \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b: **a[0]**, **a[1]**, ..., **a[n-1]**.\n\u0412 \u0442\u0440\u0435\u0442\u044c\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b **n** \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u043c \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b: **b[0]**, **b[1]**, ..., **b[n-1]**.\n\n**\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:**\n\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u0430\u043a\u0438\u0445 \u0433\u043e\u0440\u043e\u0434\u043e\u0432, \u0447\u0442\u043e \u0421\u0442\u0438\u0432\u0435\u043d \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0438\u0437 \u043d\u0438\u0445 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u043e\u0433\u043e.\n\n**\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f:**\n2 <= **n** <= 100000\n1 <= **C** <= 10^18\n1 <= **a[i]**, **b[i]** <= 10^9\n\n**\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445**\n3 3\n3 1 2\n2 2 2\n\n**\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445**\n2\n", 
                "problem_statement_fields": {
                    "sample_output": " ", 
                    "problem_statement": "\u0412 \u043c\u0438\u0440\u0435 \u0421\u0442\u0438\u0432\u0435\u043d\u0430 \u0435\u0441\u0442\u044c **n** \u0433\u043e\u0440\u043e\u0434\u043e\u0432 \u0438 **n** \u043e\u0434\u043d\u043e\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0434\u043e\u0440\u043e\u0433. \u0414\u043b\u044f \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430 \u043f\u0440\u043e\u043d\u0443\u043c\u0435\u0440\u0443\u0435\u043c \u0433\u043e\u0440\u043e\u0434\u0430 \u043e\u0442 **0** \u0434\u043e **n-1**, \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e, \u043f\u0440\u043e\u043d\u0443\u043c\u0435\u0440\u0443\u0435\u043c \u0434\u043e\u0440\u043e\u0433\u0438 \u043e\u0442 **0** \u0434\u043e **n-1**. \u0418\u0437\u0432\u0435\u0441\u0442\u043d\u043e, \u0447\u0442\u043e \u0434\u043e\u0440\u043e\u0433\u0430 \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c **i** \u0432\u0435\u0434\u0435\u0442 \u0438\u0437 \u0433\u043e\u0440\u043e\u0434\u0430 \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c **i** \u0432 \u0433\u043e\u0440\u043e\u0434 \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c **(i+1)**. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0434\u043e\u0440\u043e\u0433\u0430 \u043d\u0430\u0447\u0438\u043d\u0430\u044e\u0449\u0430\u044f\u0441\u044f \u0432 \u0433\u043e\u0440\u043e\u0434\u0435 \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c **n-1** \u0432\u0435\u0434\u0435\u0442 \u0432 \u0433\u043e\u0440\u043e\u0434 **0** \u0438 \u0438\u043c\u0435\u0435\u0442 \u043d\u043e\u043c\u0435\u0440 **n-1**.  \n\n\u0423 \u0421\u0442\u0438\u0432\u0435\u043d\u0430 \u0435\u0441\u0442\u044c \u043c\u0430\u0448\u0438\u043d\u0430, \u043e\u043d \u0445\u043e\u0447\u0435\u0442 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u0430\u0442\u044c \u0438\u0437 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0433\u043e\u0440\u043e\u0434\u0430, \u043f\u0440\u043e\u0435\u0445\u0430\u0442\u044c \u0432\u0441\u0435 \u0433\u043e\u0440\u043e\u0434\u0430 \u043f\u043e \u043a\u0440\u0443\u0433\u0443 \u0438 \u0432\u0435\u0440\u043d\u0443\u0442\u044c\u0441\u044f \u0432 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u0433\u043e\u0440\u043e\u0434. \u0418\u0437\u0432\u0435\u0441\u0442\u043d\u043e, \u0447\u0442\u043e \u0432 \u0433\u043e\u0440\u043e\u0434\u0435 \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c **i** \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043f\u0440\u0430\u0432\u0438\u0442\u044c **a[i]** \u043b\u0438\u0442\u0440\u043e\u0432 \u0431\u0435\u043d\u0437\u0438\u043d\u0430 \u0432 \u0431\u0435\u043d\u0437\u043e\u0431\u0430\u043a \u043c\u0430\u0448\u0438\u043d\u044b, \u0430 \u043d\u0430 \u043f\u0440\u0435\u043e\u0434\u043e\u043b\u0435\u043d\u0438\u0435 **i**-\u0439 \u0434\u043e\u0440\u043e\u0433\u0438 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f **b[i]** \u043b\u0438\u0442\u0440\u043e\u0432 \u0431\u0435\u043d\u0437\u0438\u043d\u0430. \u0421\u043a\u043e\u043b\u044c\u043a\u0438\u043c\u0438 \u0441\u043f\u043e\u0441\u043e\u0431\u0430\u043c\u0438 \u0421\u0442\u0438\u0432\u0435\u043d \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u0433\u043e\u0440\u043e\u0434, \u0435\u0441\u043b\u0438 \u0435\u0433\u043e \u0431\u0430\u043a \u0441 \u0431\u0435\u043d\u0437\u0438\u043d\u043e\u043c \u0432\u043c\u0435\u0449\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f **C** \u043b\u0438\u0442\u0440\u043e\u0432 \u0431\u0435\u043d\u0437\u0438\u043d\u0430? \u0421\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0431\u0435\u043d\u0437\u043e\u0431\u0430\u043a \u043c\u0430\u0448\u0438\u043d\u044b \u0421\u0442\u0438\u0432\u0435\u043d\u0430 \u043f\u0443\u0441\u0442\u043e\u0439.  \n\n**\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:**  \n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0434\u0432\u0430 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 **n** \u0438 **C**.  \n\u0412\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b **n** \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u043c \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b: **a[0]**, **a[1]**, ..., **a[n-1]**.  \n\u0412 \u0442\u0440\u0435\u0442\u044c\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b **n** \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u043c \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b: **b[0]**, **b[1]**, ..., **b[n-1]**.  \n\n**\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:**  \n\n\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u0430\u043a\u0438\u0445 \u0433\u043e\u0440\u043e\u0434\u043e\u0432, \u0447\u0442\u043e \u0421\u0442\u0438\u0432\u0435\u043d \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0438\u0437 \u043d\u0438\u0445 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u043e\u0433\u043e.\n\n**\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f:**  \n\n$2 \\le n \\le 100000$  \n$1 \\le C \\le 10^{18}$  \n$1 \\le a[i], b[i] \\le 10^{9}$  \n\n**\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445**\n\n    3 3\n    3 1 2\n    2 2 2\n\n**\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445**  \n\n    2\n", 
                    "input_format": " ", 
                    "explanation": " ", 
                    "sample_input": " ", 
                    "output_format": " "
                }, 
                "name": "Travel around the world", 
                "language": "Russian", 
                "challenge_id": 2186, 
                "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>\u0412 \u043c\u0438\u0440\u0435 \u0421\u0442\u0438\u0432\u0435\u043d\u0430 \u0435\u0441\u0442\u044c <strong>n</strong> \u0433\u043e\u0440\u043e\u0434\u043e\u0432 \u0438 <strong>n</strong> \u043e\u0434\u043d\u043e\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0434\u043e\u0440\u043e\u0433. \u0414\u043b\u044f \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430 \u043f\u0440\u043e\u043d\u0443\u043c\u0435\u0440\u0443\u0435\u043c \u0433\u043e\u0440\u043e\u0434\u0430 \u043e\u0442 <strong>0</strong> \u0434\u043e <strong>n-1</strong>, \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e, \u043f\u0440\u043e\u043d\u0443\u043c\u0435\u0440\u0443\u0435\u043c \u0434\u043e\u0440\u043e\u0433\u0438 \u043e\u0442 <strong>0</strong> \u0434\u043e <strong>n-1</strong>. \u0418\u0437\u0432\u0435\u0441\u0442\u043d\u043e, \u0447\u0442\u043e \u0434\u043e\u0440\u043e\u0433\u0430 \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c <strong>i</strong> \u0432\u0435\u0434\u0435\u0442 \u0438\u0437 \u0433\u043e\u0440\u043e\u0434\u0430 \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c <strong>i</strong> \u0432 \u0433\u043e\u0440\u043e\u0434 \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c <strong>(i+1)</strong>. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0434\u043e\u0440\u043e\u0433\u0430 \u043d\u0430\u0447\u0438\u043d\u0430\u044e\u0449\u0430\u044f\u0441\u044f \u0432 \u0433\u043e\u0440\u043e\u0434\u0435 \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c <strong>n-1</strong> \u0432\u0435\u0434\u0435\u0442 \u0432 \u0433\u043e\u0440\u043e\u0434 <strong>0</strong> \u0438 \u0438\u043c\u0435\u0435\u0442 \u043d\u043e\u043c\u0435\u0440 <strong>n-1</strong>.  </p>\n\n<p>\u0423 \u0421\u0442\u0438\u0432\u0435\u043d\u0430 \u0435\u0441\u0442\u044c \u043c\u0430\u0448\u0438\u043d\u0430, \u043e\u043d \u0445\u043e\u0447\u0435\u0442 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u0430\u0442\u044c \u0438\u0437 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0433\u043e\u0440\u043e\u0434\u0430, \u043f\u0440\u043e\u0435\u0445\u0430\u0442\u044c \u0432\u0441\u0435 \u0433\u043e\u0440\u043e\u0434\u0430 \u043f\u043e \u043a\u0440\u0443\u0433\u0443 \u0438 \u0432\u0435\u0440\u043d\u0443\u0442\u044c\u0441\u044f \u0432 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u0433\u043e\u0440\u043e\u0434. \u0418\u0437\u0432\u0435\u0441\u0442\u043d\u043e, \u0447\u0442\u043e \u0432 \u0433\u043e\u0440\u043e\u0434\u0435 \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c <strong>i</strong> \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043f\u0440\u0430\u0432\u0438\u0442\u044c <strong>a[i]</strong> \u043b\u0438\u0442\u0440\u043e\u0432 \u0431\u0435\u043d\u0437\u0438\u043d\u0430 \u0432 \u0431\u0435\u043d\u0437\u043e\u0431\u0430\u043a \u043c\u0430\u0448\u0438\u043d\u044b, \u0430 \u043d\u0430 \u043f\u0440\u0435\u043e\u0434\u043e\u043b\u0435\u043d\u0438\u0435 <strong>i</strong>-\u0439 \u0434\u043e\u0440\u043e\u0433\u0438 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f <strong>b[i]</strong> \u043b\u0438\u0442\u0440\u043e\u0432 \u0431\u0435\u043d\u0437\u0438\u043d\u0430. \u0421\u043a\u043e\u043b\u044c\u043a\u0438\u043c\u0438 \u0441\u043f\u043e\u0441\u043e\u0431\u0430\u043c\u0438 \u0421\u0442\u0438\u0432\u0435\u043d \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u0433\u043e\u0440\u043e\u0434, \u0435\u0441\u043b\u0438 \u0435\u0433\u043e \u0431\u0430\u043a \u0441 \u0431\u0435\u043d\u0437\u0438\u043d\u043e\u043c \u0432\u043c\u0435\u0449\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f <strong>C</strong> \u043b\u0438\u0442\u0440\u043e\u0432 \u0431\u0435\u043d\u0437\u0438\u043d\u0430? \u0421\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0431\u0435\u043d\u0437\u043e\u0431\u0430\u043a \u043c\u0430\u0448\u0438\u043d\u044b \u0421\u0442\u0438\u0432\u0435\u043d\u0430 \u043f\u0443\u0441\u0442\u043e\u0439.  </p>\n\n<p><strong>\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:</strong> <br>\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0434\u0432\u0430 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 <strong>n</strong> \u0438 <strong>C</strong>. <br>\n\u0412\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b <strong>n</strong> \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u043c \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b: <strong>a[0]</strong>, <strong>a[1]</strong>, ..., <strong>a[n-1]</strong>. <br>\n\u0412 \u0442\u0440\u0435\u0442\u044c\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b <strong>n</strong> \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u043c \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b: <strong>b[0]</strong>, <strong>b[1]</strong>, ..., <strong>b[n-1]</strong>.  </p>\n\n<p><strong>\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:</strong>  </p>\n\n<p>\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u0430\u043a\u0438\u0445 \u0433\u043e\u0440\u043e\u0434\u043e\u0432, \u0447\u0442\u043e \u0421\u0442\u0438\u0432\u0435\u043d \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u043e\u0434\u0438\u043d \u0438\u0437 \u043d\u0438\u0445 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u043e\u0433\u043e.</p>\n\n<p><strong>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f:</strong>  </p>\n\n<p><span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-1-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"15.729ex\" height=\"2.343ex\" style=\"vertical-align: -0.505ex;\" viewBox=\"0 -791.3 6772.1 1008.6\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"></path><g transform=\"translate(778,0)\"><path stroke-width=\"1\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g transform=\"translate(1834,0)\"><path stroke-width=\"1\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"></path></g><g transform=\"translate(2712,0)\"><path stroke-width=\"1\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g transform=\"translate(3769,0)\"><path stroke-width=\"1\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path stroke-width=\"1\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path><path stroke-width=\"1\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1001,0)\"></path><path stroke-width=\"1\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(1501,0)\"></path><path stroke-width=\"1\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(2002,0)\"></path><path stroke-width=\"1\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(2502,0)\"></path></g></g></svg></span> <br>\n<span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-2-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"13.327ex\" height=\"2.843ex\" style=\"vertical-align: -0.505ex;\" viewBox=\"0 -1006.6 5737.9 1223.9\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><g transform=\"translate(778,0)\"><path stroke-width=\"1\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g transform=\"translate(1834,0)\"><path stroke-width=\"1\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"></path></g><g transform=\"translate(2872,0)\"><path stroke-width=\"1\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g transform=\"translate(3929,0)\"><path stroke-width=\"1\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path stroke-width=\"1\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path><g transform=\"translate(1001,393)\"><path stroke-width=\"1\" transform=\"scale(0.707)\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path stroke-width=\"1\" transform=\"translate(353,0) scale(0.707)\" d=\"M70 417T70 494T124 618T248 666Q319 666 374 624T429 515Q429 485 418 459T392 417T361 389T335 371T324 363L338 354Q352 344 366 334T382 323Q457 264 457 174Q457 95 399 37T249 -22Q159 -22 101 29T43 155Q43 263 172 335L154 348Q133 361 127 368Q70 417 70 494ZM286 386L292 390Q298 394 301 396T311 403T323 413T334 425T345 438T355 454T364 471T369 491T371 513Q371 556 342 586T275 624Q268 625 242 625Q201 625 165 599T128 534Q128 511 141 492T167 463T217 431Q224 426 228 424L286 386ZM250 21Q308 21 350 55T392 137Q392 154 387 169T375 194T353 216T330 234T301 253T274 270Q260 279 244 289T218 306L210 311Q204 311 181 294T133 239T107 157Q107 98 150 60T250 21Z\"></path></g></g></g></svg></span> <br>\n<span style=\"font-size: 100%; display: inline-block;\" class=\"MathJax_SVG\" id=\"MathJax-Element-3-Frame\"><svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"18.192ex\" height=\"3.176ex\" style=\"vertical-align: -0.838ex;\" viewBox=\"0 -1006.6 7832.7 1367.4\" role=\"img\" focusable=\"false\"><g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\"><path stroke-width=\"1\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><g transform=\"translate(778,0)\"><path stroke-width=\"1\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g transform=\"translate(1834,0)\"><path stroke-width=\"1\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"></path></g><g transform=\"translate(2364,0)\"><path stroke-width=\"1\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path></g><g transform=\"translate(2642,0)\"><path stroke-width=\"1\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g><g transform=\"translate(2988,0)\"><path stroke-width=\"1\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></g><g transform=\"translate(3266,0)\"><path stroke-width=\"1\" d=\"M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z\"></path></g><g transform=\"translate(3711,0)\"><path stroke-width=\"1\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"></path></g><g transform=\"translate(4141,0)\"><path stroke-width=\"1\" d=\"M118 -250V750H255V710H158V-210H255V-250H118Z\"></path></g><g transform=\"translate(4419,0)\"><path stroke-width=\"1\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"></path></g><g transform=\"translate(4765,0)\"><path stroke-width=\"1\" d=\"M22 710V750H159V-250H22V-210H119V710H22Z\"></path></g><g transform=\"translate(5321,0)\"><path stroke-width=\"1\" d=\"M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z\"></path></g><g transform=\"translate(6377,0)\"><path stroke-width=\"1\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"></path><path stroke-width=\"1\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\" transform=\"translate(500,0)\"></path><g transform=\"translate(1001,393)\"><path stroke-width=\"1\" transform=\"scale(0.707)\" d=\"M352 287Q304 211 232 211Q154 211 104 270T44 396Q42 412 42 436V444Q42 537 111 606Q171 666 243 666Q245 666 249 666T257 665H261Q273 665 286 663T323 651T370 619T413 560Q456 472 456 334Q456 194 396 97Q361 41 312 10T208 -22Q147 -22 108 7T68 93T121 149Q143 149 158 135T173 96Q173 78 164 65T148 49T135 44L131 43Q131 41 138 37T164 27T206 22H212Q272 22 313 86Q352 142 352 280V287ZM244 248Q292 248 321 297T351 430Q351 508 343 542Q341 552 337 562T323 588T293 615T246 625Q208 625 181 598Q160 576 154 546T147 441Q147 358 152 329T172 282Q197 248 244 248Z\"></path></g></g></g></svg></span>  </p>\n\n<p><strong>\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445</strong></p>\n\n<pre><code>3 3\n3 1 2\n2 2 2\n</code></pre>\n\n<p><strong>\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445</strong>  </p>\n\n<pre><code>2\n</code></pre></div></div>", 
                "preview": " "
            }
        ], 
        "codechecker_handle": null, 
        "countdown_time": 0, 
        "author_avatar": "https://d3rpyts3de3lx8.cloudfront.net/hackerrank/assets/gravatar.jpg", 
        "custom_tabs": null, 
        "judgebot_language": null, 
        "custom_case": true, 
        "requirements_description": null, 
        "is_skip_band_challenge": false, 
        "custom_checker_language": null
    }
}