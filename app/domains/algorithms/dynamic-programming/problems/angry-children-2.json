{
    "status": true, 
    "model": {
        "tagAncestry": [], 
        "solved_count": 1187, 
        "can_solve": true, 
        "dynamic": true, 
        "epoch_starttime": null, 
        "difficulty_name": "Hard", 
        "compile_and_test": true, 
        "submit_disabled": false, 
        "company_id": null, 
        "languages": [
            "c", 
            "cpp", 
            "java", 
            "csharp", 
            "php", 
            "ruby", 
            "python", 
            "perl", 
            "haskell", 
            "clojure", 
            "scala", 
            "lua", 
            "go", 
            "javascript", 
            "erlang", 
            "d", 
            "ocaml", 
            "pascal", 
            "python3", 
            "groovy", 
            "objectivec", 
            "fsharp", 
            "visualbasic", 
            "lolcode", 
            "smalltalk", 
            "tcl", 
            "whitespace", 
            "sbcl", 
            "java8", 
            "octave", 
            "racket", 
            "rust", 
            "bash", 
            "r", 
            "swift", 
            "fortran", 
            "cpp14", 
            "coffeescript", 
            "ada", 
            "pypy", 
            "pypy3", 
            "elixir", 
            "kotlin", 
            "julia"
        ], 
        "leaderboard_out_of_sync_message": null, 
        "primary_contest": {
            "migration_status": null, 
            "contest_broadcast": null, 
            "hacker_timelimit": null, 
            "notification": null, 
            "qualification_rule_value": null, 
            "leaderboard_backend": null, 
            "expose_stats": null, 
            "updated_at": "2017-03-24T19:11:31.000Z", 
            "custom_leaderboard_column_name": null, 
            "organization_type": null, 
            "ended": true, 
            "epoch_starttime": 1382126400, 
            "timezone": "PST", 
            "disable_forum": null, 
            "id": 310, 
            "primary_track_id": 3, 
            "limited_participants": null, 
            "school_leaderboard_enabled": false, 
            "time_limited_contest": false, 
            "archived": true, 
            "rated": true, 
            "parent_contest_id": null, 
            "leaderboard_out_of_sync_message": null, 
            "leaderboard_type": "country", 
            "tagline": "9 day programming marathon", 
            "effective_epoch_endtime": 1382904000, 
            "show_participants_info": null, 
            "homepage_background_color": "", 
            "organization_name": null, 
            "track": {
                "name": "Algorithms", 
                "id": 3, 
                "priority": 14, 
                "descriptions": "The true test of problem solving: when one realizes that time and memory aren't infinite.\n", 
                "rewards_system_enabled": true, 
                "slug": "algorithms"
            }, 
            "primary_tag_id": 3081, 
            "hide_navigation": null, 
            "show_penalty": null, 
            "effective_time_left": -120450919.13828051, 
            "hidden": null, 
            "homepage": "", 
            "public": true, 
            "testers_contest": null, 
            "description": "<h3>Are you ready to crack 7 more mind-boggling challenges this month?</h3>\n<br>\n\n<br>The contest hosts 7 challenges which are progressively harder to solve. You'll have to 'unlock' each problem to view and solve the next one for a chance to win a cool prize. \n\n", 
            "hide_difficulty": null, 
            "started": true, 
            "time_left": -120450919.13530834, 
            "challenges_count": 7, 
            "qualification_rule_msg": null, 
            "leaderboard_out_of_sync": null, 
            "team_event": false, 
            "disable_fsi": null, 
            "hide_submissions": null, 
            "leaderboard_format": "", 
            "leaderboard_broadcast_message": null, 
            "has_tracks": null, 
            "college_public": null, 
            "endtime": "2013-10-27T20:00:00.000Z", 
            "qualification_rule_type": null, 
            "slug": "oct13", 
            "hide_leaderboard": null, 
            "kind": null, 
            "comment_live_sync": null, 
            "name": "20/20 Hack October", 
            "is_multi_round": false, 
            "created_at": "2013-10-02T05:25:36.000Z", 
            "epoch_endtime": 1382904000, 
            "company_associated_contest": null, 
            "rating_category": "20/20 Hack", 
            "has_codesprint_reg_page": null, 
            "starttime": "2013-10-18T20:00:00.000Z", 
            "is_rating_updated": true, 
            "leaderboard_freeze_time": null, 
            "migration_disabled": null, 
            "template_id": 101
        }, 
        "factor": 50, 
        "default_language": null, 
        "leaderboard_out_of_sync": null, 
        "contest_slug": "master", 
        "name": "Angry Children 2", 
        "level": 32, 
        "success_ratio": 0.4682445759368836, 
        "total_count": 2535, 
        "moderator_or_support": false, 
        "codechecker_handle": "", 
        "java_template_tail": "    public static void main(String[] args)  throws Exception {\n    \tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n      \tint N = Integer.parseInt(br.readLine());\n      \tint K = Integer.parseInt(br.readLine());\n      \tint [] arr = new int[N];\n      \tfor(int i = 0; i < N; i++)\n          arr[i] = Integer.parseInt(br.readLine());\n      \tsolve(arr, N, K);\n    }\n}", 
        "migrated_resource": null, 
        "custom_tabs": null, 
        "is_skip_band_challenge": false, 
        "public_test_cases": true, 
        "available_translations": [], 
        "cpp_template": "void solve(int arr[], int N, int K) {\n    \n}", 
        "c_template_tail": "\nint main() {\n    int N, K;\n    scanf(\"%d\", &N);\n    scanf(\"%d\", &K);\n    int arr[N];\n    for(int i = 0; i < N; i++) {\n        scanf(\"%d\",&arr[i]);\n    }\n    return 0;\n}\n", 
        "cpp_template_tail": "int main() {\n    int N, K;\n  \tcin >> N >> K;\n    int arr[N];\n    for(int i = 0; i < N; i++) {\n        cin >> arr[i];\n    }\n  \tsolve(arr, N, K);\n    return 0;\n}", 
        "hacker": {
            "username": "HackerRank", 
            "is_admin": true, 
            "id": 15055, 
            "avatar": "https://hrcdn.net/s3_pub/hr-avatars/4c95f96b-1ff9-46ed-98f8-cb3cb4ed8834/150x150.png"
        }, 
        "haskell_template_tail": "\n---------------------Input---------------------------- {{{\ngetInteger = (\\(Just (x_yzpqr,_)) -> x_yzpqr). BS.readInteger\ngetInt     = (\\(Just (x_yzpqr,_)) -> x_yzpqr). BS.readInt\n\ngetIntArray     = readIntArray\ngetIntegerArray = readIntegerArray\n\nreadIntArray input_pqr =\n  case x_yzpqr of\n    Just (a_yzpqr, xs_pqr) -> a_yzpqr : readIntArray xs_pqr\n    Nothing                -> []\n  where\n    x_yzpqr = BS.readInt. BS.dropWhile isSpace $ input_pqr\n\nreadIntegerArray input_pqr =\n  case x_yzpqr of\n    Nothing               -> []\n    Just (y_zpqr, ys_pqr) -> y_zpqr : readIntegerArray ys_pqr\n  where\n    x_yzpqr = BS.readInteger. BS.dropWhile isSpace $ input_pqr\n------------------------------------------------------ }}}", 
        "can_be_viewed": true, 
        "submitted_hackers_count": 2535, 
        "public_solutions": true, 
        "c_template_head": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\n", 
        "deleted": false, 
        "real_dynamic": false, 
        "difficulty_score": "0.466", 
        "difficulty": 0.5328947368421053, 
        "active": true, 
        "slug": "angry-children-2", 
        "show_skeliton": null, 
        "player_count": 2, 
        "is_preview_contest": false, 
        "is_editorial_available": true, 
        "epoch_endtime": null, 
        "cpp_template_head": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n", 
        "author_avatar": "https://hrcdn.net/s3_pub/hr-avatars/20791764-b9ea-4720-bc8c-416ec41364c8/150x150.png", 
        "judgebot_language": null, 
        "requirements_description": null, 
        "java_template": "public class Solution {\n  \n  \tpublic static void solve(int[] arr, int N, int K) {\n    \n  \t}\n\n", 
        "python_template": "# Enter your code here. Read input from STDIN. Print output to STDOUT\nn = int(raw_input())\nk = int(raw_input())\ncandies = []\nfor i in xrange(0, n):\n\tcandies.append(int(raw_input()))\n# Compute answer using n,k,candies\n    \n    \nprint ans", 
        "color": null, 
        "has_all_test_cases_public": false, 
        "time_left": null, 
        "kind": "code", 
        "is_custom": false, 
        "ruby_template": "# Enter your code here. Read input from STDIN. Print output to STDOUT\nn = gets.to_i\nk = gets.to_i\ncandies = []\nn.times do\n    candies << gets.to_i\nend    \n# Computer answer from n,k,candies    \n\nputs answer", 
        "haskell_template": "\n\nmain :: IO ()\nmain = BS.getContents >>= (\\(n:k:arr) -> solve n k arr).readIntArray\n\nsolve :: Int -> Int -> [Int] -> IO()\nsolve n k arr = return ()\n\n", 
        "solved_score": 0.5, 
        "expert_solution_status": false, 
        "custom": false, 
        "preview": "Select K elements from N elements such that the sum absolute value of differences of adjacent elements is minimized", 
        "company": null, 
        "is_text": false, 
        "java_template_head": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\n", 
        "require_unlock": true, 
        "has_started": true, 
        "judgebot": null, 
        "custom_checker_language": null, 
        "custom_case": true, 
        "topics": [], 
        "updated_at": "2017-07-11T15:44:10.000Z", 
        "author_name": "amititkgp", 
        "onboarding": null, 
        "id": 1049, 
        "has_ended": false, 
        "c_template": "\n\nvoid solve(int arr[], int N, int K) {\n    \n}\n", 
        "is_solution_unlocked": false, 
        "checker_program": null, 
        "status": null, 
        "category": "ai", 
        "track": {
            "name": "Dynamic Programming", 
            "taxonomy": 1, 
            "track_slug": "algorithms", 
            "track_id": 3, 
            "track_name": "Algorithms", 
            "id": 35, 
            "rewards_system_enabled": true, 
            "slug": "dynamic-programming"
        }, 
        "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>Bill Gates is on one of his philanthropic journeys to a village in Utopia. He has  <strong>N</strong> packets of candies and would like to distribute one packet to each of the <strong>K</strong> children in the village (each packet may contain different number of candies). To avoid a fight between the children, he would like to pick <strong>K</strong> out of <strong>N</strong> packets such that the unfairness is minimized. </p>\n\n<p>Suppose the <strong>K</strong> packets have (x<sub>1</sub>, x<sub>2</sub>, x<sub>3</sub>,....x<sub>k</sub>) candies in them, where x<sub>i</sub> denotes the number of candies in the i<sup>th</sup> packet, then we define <em>unfairness</em> as </p>\n\n<p><img src=\"https://hr-filepicker.s3.amazonaws.com/angry-children-2-eq-1.png\" alt=\"image1\" title=\"\"></p>\n\n<p>where |a| denotes the absolute value of a.  </p>\n\n<p><strong>Input Format</strong> <br>\nThe first line contains an integer N. <br>\nThe second line contains an integer K. <br>\nN lines follow each integer containing the candy in the i<sup>th</sup> packet.</p>\n\n<p><strong>Output Format</strong> <br>\nA single integer which will be minimum unfairness.</p>\n\n<p><strong>Constraints</strong> <br>\n2&lt;=N&lt;=10<sup>5</sup> <br>\n2&lt;=K&lt;=N <br>\n0&lt;= number of candies in each packet &lt;=10<sup>9</sup> </p>\n\n<p><strong>Sample Input #00</strong>  </p>\n\n<pre><code>7\n3\n10\n100\n300\n200\n1000\n20\n30\n</code></pre>\n\n<p><strong>Sample Output #00</strong>  </p>\n\n<pre><code>40\n</code></pre>\n\n<p><strong>Explanation #00</strong></p>\n\n<p>Bill Gates will choose packets having 10, 20 and 30 candies.So unfairness will be |10-20| + |20-30| + |10-30| = 40. We can verify that it will be minimum in this way.</p>\n\n<p><strong>Sample Input #01</strong>  </p>\n\n<pre><code>10\n4\n1\n2\n3\n4\n10\n20\n30\n40\n100\n200\n</code></pre>\n\n<p><strong>Sample Output #01</strong>  </p>\n\n<pre><code>10\n</code></pre>\n\n<p><strong>Explanation #01</strong>  </p>\n\n<p>Bill Gates will choose 4 packets having 1,2,3 and 4 candies. So, unfairness will be |1-2| + |1-3| + |1-4| + |2-3| + |2-4| + |3-4| = 10</p></div></div></div>", 
        "haskell_template_head": "-- {{{\nmodule Main where\n---------------------Import-------------------------\nimport Data.List\nimport qualified Data.Map as Map\nimport qualified Data.Set as Set\nimport Data.Char\nimport Data.Int                                     -- Int32, Int64\nimport System.IO\nimport Data.Ratio                                   -- x = 5%6\nimport Data.Bits                                    -- (.&.), (.|.), shiftL...\nimport Text.Printf                                  -- printf \"%0.6f\" (1.0)\nimport Control.Monad\nimport qualified Data.ByteString.Lazy.Char8 as BS\nimport qualified Data.Vector as V\n-- }}}", 
        "max_score": 50, 
        "user_score": 0, 
        "created_at": "2013-10-08T12:22:10.000Z", 
        "countdown_time": 0
    }
}