{
    "status": true, 
    "model": {
        "tagAncestry": [], 
        "solved_count": 111, 
        "python_template_head": "", 
        "can_solve": true, 
        "clojure_template_head": "", 
        "dynamic": true, 
        "epoch_starttime": null, 
        "difficulty_name": "Expert", 
        "compile_and_test": true, 
        "submit_disabled": false, 
        "objectivec_template_head": "", 
        "company_id": null, 
        "languages": [
            "c", 
            "cpp", 
            "java", 
            "csharp", 
            "php", 
            "ruby", 
            "python", 
            "perl", 
            "haskell", 
            "clojure", 
            "scala", 
            "lua", 
            "go", 
            "javascript", 
            "erlang", 
            "d", 
            "ocaml", 
            "pascal", 
            "python3", 
            "groovy", 
            "objectivec", 
            "fsharp", 
            "visualbasic", 
            "lolcode", 
            "smalltalk", 
            "tcl", 
            "whitespace", 
            "sbcl", 
            "java8", 
            "octave", 
            "racket", 
            "rust", 
            "bash", 
            "r", 
            "swift", 
            "fortran", 
            "cpp14", 
            "coffeescript", 
            "ada", 
            "pypy", 
            "pypy3", 
            "elixir", 
            "kotlin", 
            "julia"
        ], 
        "leaderboard_out_of_sync_message": null, 
        "primary_contest": {
            "migration_status": null, 
            "contest_broadcast": null, 
            "hacker_timelimit": null, 
            "notification": null, 
            "qualification_rule_value": null, 
            "leaderboard_backend": null, 
            "expose_stats": null, 
            "updated_at": "2016-05-06T21:50:21.000Z", 
            "custom_leaderboard_column_name": null, 
            "organization_type": null, 
            "ended": true, 
            "epoch_starttime": 1392481800, 
            "timezone": "PST", 
            "disable_forum": null, 
            "id": 636, 
            "primary_track_id": 3, 
            "limited_participants": null, 
            "school_leaderboard_enabled": false, 
            "time_limited_contest": false, 
            "archived": true, 
            "rated": true, 
            "parent_contest_id": null, 
            "leaderboard_out_of_sync_message": null, 
            "leaderboard_type": "country", 
            "tagline": "9 day programming marathon", 
            "effective_epoch_endtime": 1393259400, 
            "show_participants_info": null, 
            "homepage_background_color": "", 
            "organization_name": null, 
            "track": {
                "name": "Algorithms", 
                "id": 3, 
                "priority": 14, 
                "descriptions": "The true test of problem solving: when one realizes that time and memory aren't infinite.\n", 
                "rewards_system_enabled": true, 
                "slug": "algorithms"
            }, 
            "primary_tag_id": 3081, 
            "hide_navigation": null, 
            "show_penalty": null, 
            "effective_time_left": -110095087.42716943, 
            "hidden": null, 
            "homepage": "", 
            "public": true, 
            "testers_contest": null, 
            "description": "<h3>Are you ready to crack 7 more mind-boggling challenges this month?</h3>\n<br>\n\n<br>The contest hosts 7 challenges which are progressively harder to solve. You'll have to 'unlock' each problem to view and solve the next one for a chance to win a cool prize. ", 
            "hide_difficulty": null, 
            "started": true, 
            "time_left": -110095087.42474551, 
            "challenges_count": 7, 
            "qualification_rule_msg": null, 
            "leaderboard_out_of_sync": null, 
            "team_event": false, 
            "disable_fsi": null, 
            "hide_submissions": null, 
            "leaderboard_format": "", 
            "leaderboard_broadcast_message": null, 
            "has_tracks": null, 
            "college_public": null, 
            "endtime": "2014-02-24T16:30:00.000Z", 
            "qualification_rule_type": null, 
            "slug": "feb14", 
            "hide_leaderboard": null, 
            "kind": null, 
            "comment_live_sync": null, 
            "name": "20/20 Hack February", 
            "is_multi_round": false, 
            "created_at": "2014-02-03T18:12:29.000Z", 
            "epoch_endtime": 1393259400, 
            "company_associated_contest": null, 
            "rating_category": "20/20 Hack", 
            "has_codesprint_reg_page": null, 
            "starttime": "2014-02-15T16:30:00.000Z", 
            "is_rating_updated": true, 
            "leaderboard_freeze_time": null, 
            "migration_disabled": null, 
            "template_id": 126
        }, 
        "factor": 100, 
        "erlang_template_head": "", 
        "ruby_template_tail": "", 
        "default_language": null, 
        "moderator_or_support": false, 
        "leaderboard_out_of_sync": null, 
        "contest_slug": "master", 
        "python3_template": "# Enter your code here. Read input from STDIN. Print output to STDOUT", 
        "name": "Two Strings Game", 
        "level": 79, 
        "success_ratio": 0.43529411764705883, 
        "total_count": 255, 
        "javascript_template_head": "", 
        "codechecker_handle": "", 
        "java_template_tail": "", 
        "migrated_resource": null, 
        "custom_tabs": null, 
        "ruby_template_head": "", 
        "java8_template_head": "", 
        "is_skip_band_challenge": false, 
        "python_template_tail": "", 
        "public_test_cases": true, 
        "available_translations": [
            {
                "body": null, 
                "problem_statement_fields": {
                    "sample_output": " ", 
                    "problem_statement": "\u8003\u8651\u4e0b\u9762\u7684\u53cc\u4eba\u535a\u5f08\u6e38\u620f\uff1a\n\n\u6709\u4e24\u4e2a\u5b57\u7b26\u4e32A\u548cB\u3002\u8d77\u521d\uff0c\u5728\u4e00\u5f20\u7eb8\u4e0a\u5199\u51fa\u5b57\u7b26\u4e32A\u2019\u548cB\u2019\uff0cA\u2019\u662fA\u7684\u5b50\u4e32\uff0cB\u2019\u662fB\u7684\u5b50\u4e32\u3002\u6e38\u620f\u7684\u6bcf\u6b65\u64cd\u4f5c\u662f\u5728A\u2019\u6216\u8005B\u2019**\u4e4b\u4e00**\u7684\u672b\u5c3e\u6dfb\u52a0\u4e00\u4e2a\u5b57\u6bcd\u3002\u8981\u6c42\u6bcf\u6b65\u7ed3\u675f\u4e4b\u540e\uff0c\u4ecd\u7136\u6ee1\u8db3A\u2019\u662fA\u7684\u5b50\u4e32\uff0cB\u2019\u662fB\u7684\u5b50\u4e32\u3002\u4e24\u4e2a\u4eba\u8f6e\u6d41\u8fdb\u884c\u64cd\u4f5c\uff0c\u8c01\u65e0\u6cd5\u8fdb\u884c\u5408\u6cd5\u64cd\u4f5c\u5c31\u662f\u8f93\u5bb6\uff0c\u53e6\u5916\u4e00\u4e2a\u4eba\u662f\u8d62\u5bb6\u3002\u6211\u4eec\u79f0\u4e00\u5bf9\u5b57\u7b26\u4e32(A\u2019, B\u2019)\u53eb\u505a\u4e00\u4e2a\u5c40\u9762\u3002\n\u4e24\u4e2a\u4eba\u90fd\u91c7\u53d6\u6700\u4f18\u7684\u7b56\u7565\u8fdb\u884c\u8fd9\u4e2a\u6e38\u620f\uff0c\u6700\u4f18\u7684\u610f\u601d\u662f\u6307\u5982\u679c\u6709\u4e00\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u4f7f\u5f97\u4e00\u4e2a\u4eba\u8d70\u5411\u6700\u7ec8\u7684\u80dc\u5229\uff0c\u4ed6\uff0f\u5979\u4e00\u5b9a\u4f1a\u91c7\u53d6\u8fd9\u6837\u7684\u64cd\u4f5c\u3002\nAlice\u548cBob\u6b63\u5728\u73a9\u8fd9\u4e2a\u6e38\u620f\u3002Alice\u5148\u5f00\u59cb\u64cd\u4f5c\u3002\u5982\u5f80\u5e38\u4e00\u6837\uff0cAlice\u60f3\u8d62\u5f97\u8fd9\u4e2a\u6e38\u620f\u3002\u8fd9\u6b21\uff0c\u5979\u4f5c\u5f0a\u4e86\u3002\u5979\u60f3\u8ba9\u5f00\u59cb\u7684\u5c40\u9762\u662f\u4f7f\u5f97\u7b2c\u4e00\u4e2a\u4eba\uff08\u5979\u81ea\u5df1\uff09\u80dc\u5229\u7684\u5b57\u5178\u5e8f\u7b2cK\u5c0f\u7684\u5c40\u9762\u3002\n\n\u8003\u8651\u4e24\u4e2a\u5c40\u9762(A'<sub>1</sub>, B'<sub>1</sub>) \u548c (A'<sub>2</sub>, B'<sub>2</sub>)\uff0c\u6211\u4eec\u8ba4\u4e3a\u7b2c\u4e00\u4e2a\u5c40\u9762\u7684\u5b57\u5178\u5e8f\u5c0f\u4e8e\u7b2c\u4e8c\u4e2a\u5c40\u9762\uff0c\u5f53\u4e14\u4ec5\u5f53 A'<sub>1</sub>\u7684\u5b57\u5178\u5e8f\u5c0f\u4e8eA'<sub>2</sub>\u6216\u8005A'<sub>1</sub>\u7b49\u4e8eA'<sub>2</sub>\u5e76\u4e14 B'<sub>1</sub>\u7684\u5b57\u5178\u5e8f\u5c0f\u4e8eB'<sub>2</sub>. \u5df2\u77e5\u5b57\u7b26\u4e32A\uff0cB\u548c\u6574\u6570K\uff0c\u8bf7\u5e2e\u5979\u7b97\u51fa\u8fd9\u6837\u7684\u521d\u59cb\u5c40\u9762\u3002\n\n**\u8f93\u5165\u683c\u5f0f**  \n\u7b2c\u4e00\u884c\u5305\u542b3\u4e2a\u7a7a\u683c\u5206\u9694\u7684\u6574\u6570N,M\u548cK\uff0c\u5206\u522b\u662fA\u7684\u957f\u5ea6,B\u7684\u957f\u5ea6\u548cK\u3002\n\u7b2c\u4e8c\u884c\u5305\u542bN\u4e2a\u5c0f\u5199\u5b57\u6bcd\uff0c\u8868\u793a\u5b57\u7b26\u4e32A\u3002\n\u7b2c\u4e09\u884c\u5305\u542bM\u4e2a\u5c0f\u5199\u5b57\u6bcd\uff0c\u8868\u793a\u5b57\u7b26\u4e32B\u3002\n\n**\u7ea6\u675f\u6761\u4ef6*  \n1 <= N, M <= 3 * 10<sup>5</sup> <br>\n1 <= K <= 10<sup>18</sup>\n\n**\u8f93\u51fa\u683c\u5f0f**  \n\u7b2c\u4e00\u884c\u8f93\u51fa A\u2019\uff0c\u7b2c\u4e8c\u884c\u8f93\u51faB\u2019\u3002\u8bf7\u6ce8\u610f\uff0c\u8f93\u51fa\u7ed3\u679c\u53ef\u80fd\u662f\u7a7a\u4e32\u3002\u5982\u679c\u65e0\u89e3\uff0c\u8bf7\u8f93\u51fa\u201dno solution\u201d\uff08\u6ca1\u6709\u5f15\u53f7\uff09\u3002\n\n**\u8f93\u5165\u6837\u4f8b**\n\n\t2 2 5\n\tab\n\tcd\n    \n**\u8f93\u51fa\u6837\u4f8b**\n\n\ta\n    cd\n\n**\u6837\u4f8b\u89e3\u91ca**\n\n\t\u8003\u8651\u521d\u59cb\u5c40\u9762 (\"\", \u201c\u201d)\uff0c\n    \u6709\u4e24\u79cd\u64cd\u4f5c\uff1a\u6dfb\u52a0\u67d0\u4e2a\u4e32\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\uff0c\u6216\u8005\u6dfb\u52a0\u67d0\u4e2a\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u3002\u5982\u679c\u7b2c\u4e00\u4e2a\u4eba\u91c7\u53d6\u7b2c\u4e00\u79cd\u64cd\u4f5c\uff0c\u7b2c\u4e8c\u4e2a\u4eba\u5728\u53e6\u5916\u4e00\u4e2a\u4e32\u4e0a\u6dfb\u52a0\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\uff0c\u76f4\u63a5\u83b7\u80dc\u3002\u6240\u4ee5\u7b2c\u4e00\u4e2a\u4eba\u80dc\u5229\u7684\u673a\u4f1a\u53ea\u53ef\u80fd\u662f\u5728\u4e00\u4e2a\u4e32\u4e0a\u6dfb\u52a0\u7b2c\u4e00\u4e2a\u5b57\u6bcd\uff0c\u7b2c\u4e8c\u4e2a\u4eba\u53ef\u4ee5\u548c\u7b2c\u4e00\u4e2a\u4eba\u540c\u6837\u7684\u64cd\u4f5c\uff08\u5728\u53e6\u5916\u4e00\u4e2a\u4e32\u4e0a\uff09\u3002\u8fd9\u6837\u4e24\u6b65\u4e4b\u540e\uff0c\u6211\u4eec\u5f97\u5230\u5c40\u9762(\"a\", \u201cc\u201d)\u3002\u7136\u540e\u7b2c\u4e00\u4e2a\u4eba\u53ea\u80fd\u6dfb\u52a0\u7b2c\u4e8c\u4e2a\u5b57\u6bcd\u5230\u4e00\u4e2a\u5b57\u6bcd\u5230\u5176\u4e2d\u4e00\u4e2a\u4e32\u4e0a\uff0c\u7136\u540e\u7b2c\u4e8c\u4e2a\u4eba\u4e5f\u53ea\u6709\u4e00\u4e2a\u9009\u62e9\uff0c\u6240\u4ee5\u6700\u7ec8\u5f97\u5230\u5c40\u9762(\u201cab\u201d,\u201dcd\u201d)\u3002\u8fd9\u6837, \u5c40\u9762(\u201c\u201d, \u201c\u201d)\u662f\u7b2c\u4e00\u4e2a\u4eba\u7684\u5931\u8d25\u5c40\u9762\u3002\n    \u5982\u679c\u6211\u4eec\u8003\u8651\u521d\u59cb\u5c40\u9762(\"\", \"c\"), \u7b2c\u4e00\u4e2a\u4eba\u53ef\u4ee5\u4f7f\u5f97\u5c40\u9762\u53d8\u4e3a(\u201ca\u201d, \u201cc\u201d)\uff0c\u7136\u540e\u65e0\u8bba\u7b2c\u4e8c\u4e2a\u4eba\u4f7f\u5c40\u9762\u53d8\u4e3a(\u201cab\", \"c\") \u6216\u8005(\u201ca\u201d, \"cd\"), \u7b2c\u4e00\u4e2a\u4eba\u90fd\u53ef\u4ee5\u628a\u5c40\u9762\u53d8\u4e3a(\"ab\", \"cd\u201d)\u4ece\u800c\u83b7\u5f97\u80dc\u5229\u3002\u56e0\u6b64\uff0c\u5c40\u9762(\u201c\u201d, \u201cc\u201d)\u662f\u7b2c\u4e00\u4e2a\u4eba\u7684\u80dc\u5229\u5c40\u9762\u3002    \n    \u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u524d5\u4e2a\u7b2c\u4e00\u4e2a\u4eba\u80dc\u5229\u521d\u59cb\u5c40\u9762\u662f(\u201c\u201d, \"c\"), (\"\", \"cd\"), (\"\", \"d\"), (\"a\", \"\"), (\"a\", \"cd\u201d)\u3002\n", 
                    "input_format": "  ", 
                    "explanation": " ", 
                    "sample_input": " ", 
                    "output_format": " "
                }, 
                "name": "Two Strings Game", 
                "language": "Chinese", 
                "challenge_id": 1878, 
                "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>\u8003\u8651\u4e0b\u9762\u7684\u53cc\u4eba\u535a\u5f08\u6e38\u620f\uff1a</p>\n\n<p>\u6709\u4e24\u4e2a\u5b57\u7b26\u4e32A\u548cB\u3002\u8d77\u521d\uff0c\u5728\u4e00\u5f20\u7eb8\u4e0a\u5199\u51fa\u5b57\u7b26\u4e32A\u2019\u548cB\u2019\uff0cA\u2019\u662fA\u7684\u5b50\u4e32\uff0cB\u2019\u662fB\u7684\u5b50\u4e32\u3002\u6e38\u620f\u7684\u6bcf\u6b65\u64cd\u4f5c\u662f\u5728A\u2019\u6216\u8005B\u2019<strong>\u4e4b\u4e00</strong>\u7684\u672b\u5c3e\u6dfb\u52a0\u4e00\u4e2a\u5b57\u6bcd\u3002\u8981\u6c42\u6bcf\u6b65\u7ed3\u675f\u4e4b\u540e\uff0c\u4ecd\u7136\u6ee1\u8db3A\u2019\u662fA\u7684\u5b50\u4e32\uff0cB\u2019\u662fB\u7684\u5b50\u4e32\u3002\u4e24\u4e2a\u4eba\u8f6e\u6d41\u8fdb\u884c\u64cd\u4f5c\uff0c\u8c01\u65e0\u6cd5\u8fdb\u884c\u5408\u6cd5\u64cd\u4f5c\u5c31\u662f\u8f93\u5bb6\uff0c\u53e6\u5916\u4e00\u4e2a\u4eba\u662f\u8d62\u5bb6\u3002\u6211\u4eec\u79f0\u4e00\u5bf9\u5b57\u7b26\u4e32(A\u2019, B\u2019)\u53eb\u505a\u4e00\u4e2a\u5c40\u9762\u3002\n\u4e24\u4e2a\u4eba\u90fd\u91c7\u53d6\u6700\u4f18\u7684\u7b56\u7565\u8fdb\u884c\u8fd9\u4e2a\u6e38\u620f\uff0c\u6700\u4f18\u7684\u610f\u601d\u662f\u6307\u5982\u679c\u6709\u4e00\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u4f7f\u5f97\u4e00\u4e2a\u4eba\u8d70\u5411\u6700\u7ec8\u7684\u80dc\u5229\uff0c\u4ed6\uff0f\u5979\u4e00\u5b9a\u4f1a\u91c7\u53d6\u8fd9\u6837\u7684\u64cd\u4f5c\u3002\nAlice\u548cBob\u6b63\u5728\u73a9\u8fd9\u4e2a\u6e38\u620f\u3002Alice\u5148\u5f00\u59cb\u64cd\u4f5c\u3002\u5982\u5f80\u5e38\u4e00\u6837\uff0cAlice\u60f3\u8d62\u5f97\u8fd9\u4e2a\u6e38\u620f\u3002\u8fd9\u6b21\uff0c\u5979\u4f5c\u5f0a\u4e86\u3002\u5979\u60f3\u8ba9\u5f00\u59cb\u7684\u5c40\u9762\u662f\u4f7f\u5f97\u7b2c\u4e00\u4e2a\u4eba\uff08\u5979\u81ea\u5df1\uff09\u80dc\u5229\u7684\u5b57\u5178\u5e8f\u7b2cK\u5c0f\u7684\u5c40\u9762\u3002</p>\n\n<p>\u8003\u8651\u4e24\u4e2a\u5c40\u9762(A'<sub>1</sub>, B'<sub>1</sub>) \u548c (A'<sub>2</sub>, B'<sub>2</sub>)\uff0c\u6211\u4eec\u8ba4\u4e3a\u7b2c\u4e00\u4e2a\u5c40\u9762\u7684\u5b57\u5178\u5e8f\u5c0f\u4e8e\u7b2c\u4e8c\u4e2a\u5c40\u9762\uff0c\u5f53\u4e14\u4ec5\u5f53 A'<sub>1</sub>\u7684\u5b57\u5178\u5e8f\u5c0f\u4e8eA'<sub>2</sub>\u6216\u8005A'<sub>1</sub>\u7b49\u4e8eA'<sub>2</sub>\u5e76\u4e14 B'<sub>1</sub>\u7684\u5b57\u5178\u5e8f\u5c0f\u4e8eB'<sub>2</sub>. \u5df2\u77e5\u5b57\u7b26\u4e32A\uff0cB\u548c\u6574\u6570K\uff0c\u8bf7\u5e2e\u5979\u7b97\u51fa\u8fd9\u6837\u7684\u521d\u59cb\u5c40\u9762\u3002</p>\n\n<p><strong>\u8f93\u5165\u683c\u5f0f</strong> <br>\n\u7b2c\u4e00\u884c\u5305\u542b3\u4e2a\u7a7a\u683c\u5206\u9694\u7684\u6574\u6570N,M\u548cK\uff0c\u5206\u522b\u662fA\u7684\u957f\u5ea6,B\u7684\u957f\u5ea6\u548cK\u3002\n\u7b2c\u4e8c\u884c\u5305\u542bN\u4e2a\u5c0f\u5199\u5b57\u6bcd\uff0c\u8868\u793a\u5b57\u7b26\u4e32A\u3002\n\u7b2c\u4e09\u884c\u5305\u542bM\u4e2a\u5c0f\u5199\u5b57\u6bcd\uff0c\u8868\u793a\u5b57\u7b26\u4e32B\u3002</p>\n\n<p>*<em>\u7ea6\u675f\u6761\u4ef6</em> <br>\n1 &lt;= N, M &lt;= 3 * 10<sup>5</sup> <br>\n1 &lt;= K &lt;= 10<sup>18</sup></p>\n\n<p><strong>\u8f93\u51fa\u683c\u5f0f</strong> <br>\n\u7b2c\u4e00\u884c\u8f93\u51fa A\u2019\uff0c\u7b2c\u4e8c\u884c\u8f93\u51faB\u2019\u3002\u8bf7\u6ce8\u610f\uff0c\u8f93\u51fa\u7ed3\u679c\u53ef\u80fd\u662f\u7a7a\u4e32\u3002\u5982\u679c\u65e0\u89e3\uff0c\u8bf7\u8f93\u51fa\u201dno solution\u201d\uff08\u6ca1\u6709\u5f15\u53f7\uff09\u3002</p>\n\n<p><strong>\u8f93\u5165\u6837\u4f8b</strong></p>\n\n<pre><code>2 2 5\nab\ncd\n</code></pre>\n\n<p><strong>\u8f93\u51fa\u6837\u4f8b</strong></p>\n\n<pre><code>a\ncd\n</code></pre>\n\n<p><strong>\u6837\u4f8b\u89e3\u91ca</strong></p>\n\n<pre><code>\u8003\u8651\u521d\u59cb\u5c40\u9762 (\"\", \u201c\u201d)\uff0c\n\u6709\u4e24\u79cd\u64cd\u4f5c\uff1a\u6dfb\u52a0\u67d0\u4e2a\u4e32\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\uff0c\u6216\u8005\u6dfb\u52a0\u67d0\u4e2a\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u3002\u5982\u679c\u7b2c\u4e00\u4e2a\u4eba\u91c7\u53d6\u7b2c\u4e00\u79cd\u64cd\u4f5c\uff0c\u7b2c\u4e8c\u4e2a\u4eba\u5728\u53e6\u5916\u4e00\u4e2a\u4e32\u4e0a\u6dfb\u52a0\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\uff0c\u76f4\u63a5\u83b7\u80dc\u3002\u6240\u4ee5\u7b2c\u4e00\u4e2a\u4eba\u80dc\u5229\u7684\u673a\u4f1a\u53ea\u53ef\u80fd\u662f\u5728\u4e00\u4e2a\u4e32\u4e0a\u6dfb\u52a0\u7b2c\u4e00\u4e2a\u5b57\u6bcd\uff0c\u7b2c\u4e8c\u4e2a\u4eba\u53ef\u4ee5\u548c\u7b2c\u4e00\u4e2a\u4eba\u540c\u6837\u7684\u64cd\u4f5c\uff08\u5728\u53e6\u5916\u4e00\u4e2a\u4e32\u4e0a\uff09\u3002\u8fd9\u6837\u4e24\u6b65\u4e4b\u540e\uff0c\u6211\u4eec\u5f97\u5230\u5c40\u9762(\"a\", \u201cc\u201d)\u3002\u7136\u540e\u7b2c\u4e00\u4e2a\u4eba\u53ea\u80fd\u6dfb\u52a0\u7b2c\u4e8c\u4e2a\u5b57\u6bcd\u5230\u4e00\u4e2a\u5b57\u6bcd\u5230\u5176\u4e2d\u4e00\u4e2a\u4e32\u4e0a\uff0c\u7136\u540e\u7b2c\u4e8c\u4e2a\u4eba\u4e5f\u53ea\u6709\u4e00\u4e2a\u9009\u62e9\uff0c\u6240\u4ee5\u6700\u7ec8\u5f97\u5230\u5c40\u9762(\u201cab\u201d,\u201dcd\u201d)\u3002\u8fd9\u6837, \u5c40\u9762(\u201c\u201d, \u201c\u201d)\u662f\u7b2c\u4e00\u4e2a\u4eba\u7684\u5931\u8d25\u5c40\u9762\u3002\n\u5982\u679c\u6211\u4eec\u8003\u8651\u521d\u59cb\u5c40\u9762(\"\", \"c\"), \u7b2c\u4e00\u4e2a\u4eba\u53ef\u4ee5\u4f7f\u5f97\u5c40\u9762\u53d8\u4e3a(\u201ca\u201d, \u201cc\u201d)\uff0c\u7136\u540e\u65e0\u8bba\u7b2c\u4e8c\u4e2a\u4eba\u4f7f\u5c40\u9762\u53d8\u4e3a(\u201cab\", \"c\") \u6216\u8005(\u201ca\u201d, \"cd\"), \u7b2c\u4e00\u4e2a\u4eba\u90fd\u53ef\u4ee5\u628a\u5c40\u9762\u53d8\u4e3a(\"ab\", \"cd\u201d)\u4ece\u800c\u83b7\u5f97\u80dc\u5229\u3002\u56e0\u6b64\uff0c\u5c40\u9762(\u201c\u201d, \u201cc\u201d)\u662f\u7b2c\u4e00\u4e2a\u4eba\u7684\u80dc\u5229\u5c40\u9762\u3002    \n\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u524d5\u4e2a\u7b2c\u4e00\u4e2a\u4eba\u80dc\u5229\u521d\u59cb\u5c40\u9762\u662f(\u201c\u201d, \"c\"), (\"\", \"cd\"), (\"\", \"d\"), (\"a\", \"\"), (\"a\", \"cd\u201d)\u3002\n</code></pre></div></div>", 
                "preview": null
            }, 
            {
                "body": null, 
                "problem_statement_fields": {
                    "sample_output": " ", 
                    "problem_statement": "\u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0438\u0433\u0440\u0443 \u0434\u043b\u044f \u0434\u0432\u0443\u0445 \u0438\u0433\u0440\u043e\u043a\u043e\u0432:\n\n\u0417\u0430\u0434\u0430\u043d\u044b \u0434\u0432\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 A \u0438 B. \u0412 \u0438\u0433\u0440\u0443 \u0438\u0433\u0440\u0430\u044e\u0442 \u0434\u0432\u0430 \u0438\u0433\u0440\u043e\u043a\u0430, \u043e\u043d\u0438 \u0434\u0435\u043b\u0430\u044e\u0442 \u0445\u043e\u0434\u044b \u043f\u043e \u043e\u0447\u0435\u0440\u0435\u0434\u0438. \u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u043d\u0430 \u0434\u043e\u0441\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0434\u0432\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 A' \u0438 B', \u0441\u0442\u0440\u043e\u043a\u0430 A' - \u044d\u0442\u043e \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0430 A, \u0441\u0442\u0440\u043e\u043a\u0430 B' - \u044d\u0442\u043e \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0430 B. \u0425\u043e\u0434 \u0432 \u0438\u0433\u0440\u0435 - \u044d\u0442\u043e \u0434\u043e\u043f\u0438\u0441\u044b\u0432\u0430\u043d\u0438\u0435 \u0432 \u043a\u043e\u043d\u0435\u0446 \u0441\u0442\u0440\u043e\u043a\u0438 \u043e\u0434\u043d\u043e\u0433\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u043a **\u0440\u043e\u0432\u043d\u043e \u043e\u0434\u043d\u043e\u0439** \u0438\u0437 \u044d\u0442\u0438\u0445 \u0434\u0432\u0443\u0445 \u0441\u0442\u0440\u043e\u043a (A' \u0438\u043b\u0438 B'). \u041f\u043e\u0441\u043b\u0435 \u043b\u044e\u0431\u043e\u0433\u043e \u0445\u043e\u0434\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 A' \u0434\u043e\u043b\u0436\u043d\u0430 \u043e\u0441\u0442\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u043e\u0439 A, \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e, B' \u0434\u043e\u043b\u0436\u043d\u0430 \u043e\u0441\u0442\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u043e\u0439 B. \u041f\u0440\u043e\u0438\u0433\u0440\u044b\u0432\u0430\u0435\u0442 \u0442\u043e\u0442, \u043a\u0442\u043e \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0445\u043e\u0434. \u0411\u0443\u0434\u0435\u043c \u043d\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043f\u0430\u0440\u0443 (A', B') - \u043f\u043e\u0437\u0438\u0446\u0438\u0435\u0439 \u0432 \u0438\u0433\u0440\u0435. \n\n\u0410\u043b\u0438\u0441\u0430 \u0438 \u0411\u043e\u0431 \u0438\u0433\u0440\u0430\u044e\u0442 \u0432 \u044d\u0442\u0443 \u0438\u0433\u0440\u0443. \u0410\u043b\u0438\u0441\u0430 \u0434\u0435\u043b\u0430\u0435\u0442 \u043f\u0435\u0440\u0432\u044b\u0439 \u0445\u043e\u0434, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043e\u043d\u0430 \u0445\u043e\u0447\u0435\u0442 \u043e\u0431\u043c\u0430\u043d\u0443\u0442\u044c \u0411\u043e\u0431\u0430, \u043f\u043e\u043b\u0443\u0447\u0438\u0432 \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0432\u044b\u0438\u0433\u0440\u044b\u0448\u043d\u0443\u044e \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u0432 \u0438\u0433\u0440\u0435. \u041f\u043e\u043c\u043e\u0433\u0438\u0442\u0435 \u0410\u043b\u0438\u0441\u0435 \u043e\u0431\u043c\u0430\u043d\u0443\u0442\u044c \u0411\u043e\u0431\u0430, \u043f\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c A, B \u0438 K \u043d\u0430\u0439\u0434\u0438\u0442\u0435 \u0435\u0439 K-\u044e \u0432 \u043b\u0435\u043a\u0441\u0438\u043a\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u043f\u043e\u0437\u0438\u0446\u0438\u044e (A', B'), \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043e\u043d\u0430 \u0441\u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u0438\u0433\u0440\u0430\u0442\u044c \u0411\u043e\u0431\u0430 (A' \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u043e\u0439 A, B' \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u043e\u0439 B). \u0421\u0447\u0438\u0442\u0430\u0439\u0442\u0435, \u0447\u0442\u043e \u043e\u0431\u0430 \u0438\u0433\u0440\u043e\u043a\u0430 \u0438\u0433\u0440\u0430\u044e\u0442 \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u043e.\n\n\u0421\u0447\u0438\u0442\u0430\u0439\u0442\u0435, \u0447\u0442\u043e \u043f\u043e\u0437\u0438\u0446\u0438\u044f (A'<sub>1</sub>, B'<sub>1</sub>) \u043c\u0435\u043d\u044c\u0448\u0435 \u043b\u0435\u043a\u0441\u0438\u043a\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u0438, \u0447\u0435\u043c (A'<sub>2</sub>, B'<sub>2</sub>), \u0435\u0441\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u0435: (A'<sub>1</sub> \u043b\u0435\u043a\u0441\u0438\u043a\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u0438 \u043c\u0435\u043d\u044c\u0448\u0435 A'<sub>2</sub>) \u0418\u041b\u0418 ((A'<sub>1</sub> \u0440\u0430\u0432\u043d\u0430 A'<sub>2</sub>) \u0418 (B'<sub>1</sub> \u043b\u0435\u043a\u0441\u0438\u043a\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u0438 \u043c\u0435\u043d\u044c\u0448\u0435 B'<sub>2</sub>)).\n\n**\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445**  \n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0442\u0440\u0438 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b: N, M \u0438 K - \u0434\u043b\u0438\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0438 A, \u0434\u043b\u0438\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0438 B \u0438 K.\n\u0412\u0442\u043e\u0440\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 N \u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0445 \u043b\u0430\u0442\u0438\u043d\u0441\u043a\u0438\u0445 \u0431\u0443\u043a\u0432 - \u0441\u0442\u0440\u043e\u043a\u0430 A.\n\u0422\u0440\u0435\u0442\u044c\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 M \u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0445 \u043b\u0430\u0442\u0438\u043d\u0441\u043a\u0438\u0445 \u0431\u0443\u043a\u0432 - \u0441\u0442\u0440\u043e\u043a\u0430 B.\n\n**\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f**  \n1 <= N, M <= 3 * 10<sup>5</sup> <br>\n1 <= K <= 10<sup>18</sup>\n\n**\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445**  \n\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 A' \u0432 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0438 B' \u0432\u043e \u0432\u0442\u043e\u0440\u043e\u0439. \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0441\u0442\u0440\u043e\u043a\u0438 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043f\u0443\u0441\u0442\u044b\u043c\u0438. \u0415\u0441\u043b\u0438 \u043d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0435\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \"no solution\" \u0431\u0435\u0437 \u043a\u0430\u0432\u044b\u0447\u0435\u043a.\n\n**\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 #00**\n\n\t2 2 5\n\tab\n\tcd\n    \n**\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 #00**\n\n\ta\n    cd\n\n**\u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u044f \u043a \u043f\u0440\u0438\u043c\u0435\u0440\u0430\u043c**\n\n\t\u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043f\u043e\u0437\u0438\u0446\u0438\u044e (\"\", \"\").\n    \u0421\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0434\u0432\u0430 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0445 \u0442\u0438\u043f\u0430 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0445\u043e\u0434\u0430: \u043b\u0438\u0431\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u0435\u0440\u0432\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u043e\u0434\u043d\u043e\u0439 \u0438\u0437 \u0441\u0442\u0440\u043e\u043a, \u043b\u0438\u0431\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u043e\u0434\u043d\u043e\u0439 \u0438\u0437 \u0441\u0442\u0440\u043e\u043a. \u041d\u043e \u043a\u0430\u043a \u0431\u044b \u043d\u0435 \u0441\u0445\u043e\u0434\u0438\u043b \u043f\u0435\u0440\u0432\u044b\u0439 \u0438\u0433\u0440\u043e\u043a, \u0432\u0442\u043e\u0440\u043e\u0439 \u0432\u0441\u0435\u0433\u0434\u0430 \u043c\u043e\u0436\u0435\u0442 \u043e\u0442\u0432\u0435\u0442\u0438\u0442\u044c \u0435\u043c\u0443 \u0441\u0438\u043c\u043c\u0435\u0442\u0440\u0438\u0447\u043d\u043e \u0432\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u044d\u0442\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u044f \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0438\u0433\u0440\u044b\u0448\u043d\u043e\u0439.\n    \n    \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0434\u043b\u044f \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u044e (\"\", \"c\"), \u043f\u0435\u0440\u0432\u044b\u0439 \u0438\u0433\u0440\u043e\u043a \u043c\u043e\u0436\u0435\u0442 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0445\u043e\u0434 \u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u043e\u0437\u0438\u0446\u0438\u044e (\"a\", \"c\"). \u041d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e \u043e\u0442 \u0442\u043e\u0433\u043e \u043a\u0430\u043a\u043e\u0439 \u0445\u043e\u0434 \u0441\u043e\u0432\u0435\u0440\u0448\u0438\u0442 \u0434\u0430\u043b\u0435\u0435 \u0432\u0442\u043e\u0440\u043e\u0439 \u0438\u0433\u0440\u043e\u043a: (\"ab\", \"c\") \u0438\u043b\u0438 (\"a\", \"cd\"), \u043f\u0435\u0440\u0432\u044b\u0439 \u0438\u0433\u0440\u043e\u043a \u043c\u043e\u0436\u0435\u0442 \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u0432 \u043f\u043e\u0437\u0438\u0446\u0438\u044e (\"ab\", \"cd\") \u0438 \u0438\u0433\u0440\u0430 \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u0442\u0441\u044f \u0435\u0433\u043e \u043f\u043e\u0431\u0435\u0434\u043e\u0439. \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u043f\u043e\u0437\u0438\u0446\u0438\u044f (\"\", \"c\") - \u0432\u044b\u0438\u0433\u0440\u044b\u0448\u043d\u0430\u044f \u0434\u043b\u044f \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0438\u0433\u0440\u043e\u043a\u0430.\n    \n    \u0412\u044b\u0438\u0433\u0440\u044b\u0448\u043d\u044b\u0435 \u0434\u043b\u044f \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0438\u0433\u0440\u043e\u043a\u0430 \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0432 \u043b\u0435\u043a\u0441\u0438\u043a\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u043f\u0435\u0440\u0432\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438: (\"\", \"c\"), (\"\", \"cd\"), (\"\", \"d\"), (\"a\", \"\"), (\"a\", \"cd\").\n", 
                    "input_format": " ", 
                    "explanation": " ", 
                    "sample_input": " ", 
                    "output_format": " "
                }, 
                "name": "Two Strings Game", 
                "language": "Russian", 
                "challenge_id": 1878, 
                "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>\u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0438\u0433\u0440\u0443 \u0434\u043b\u044f \u0434\u0432\u0443\u0445 \u0438\u0433\u0440\u043e\u043a\u043e\u0432:</p>\n\n<p>\u0417\u0430\u0434\u0430\u043d\u044b \u0434\u0432\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 A \u0438 B. \u0412 \u0438\u0433\u0440\u0443 \u0438\u0433\u0440\u0430\u044e\u0442 \u0434\u0432\u0430 \u0438\u0433\u0440\u043e\u043a\u0430, \u043e\u043d\u0438 \u0434\u0435\u043b\u0430\u044e\u0442 \u0445\u043e\u0434\u044b \u043f\u043e \u043e\u0447\u0435\u0440\u0435\u0434\u0438. \u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u043d\u0430 \u0434\u043e\u0441\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0434\u0432\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 A' \u0438 B', \u0441\u0442\u0440\u043e\u043a\u0430 A' - \u044d\u0442\u043e \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0430 A, \u0441\u0442\u0440\u043e\u043a\u0430 B' - \u044d\u0442\u043e \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0430 B. \u0425\u043e\u0434 \u0432 \u0438\u0433\u0440\u0435 - \u044d\u0442\u043e \u0434\u043e\u043f\u0438\u0441\u044b\u0432\u0430\u043d\u0438\u0435 \u0432 \u043a\u043e\u043d\u0435\u0446 \u0441\u0442\u0440\u043e\u043a\u0438 \u043e\u0434\u043d\u043e\u0433\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u0430 \u043a <strong>\u0440\u043e\u0432\u043d\u043e \u043e\u0434\u043d\u043e\u0439</strong> \u0438\u0437 \u044d\u0442\u0438\u0445 \u0434\u0432\u0443\u0445 \u0441\u0442\u0440\u043e\u043a (A' \u0438\u043b\u0438 B'). \u041f\u043e\u0441\u043b\u0435 \u043b\u044e\u0431\u043e\u0433\u043e \u0445\u043e\u0434\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 A' \u0434\u043e\u043b\u0436\u043d\u0430 \u043e\u0441\u0442\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u043e\u0439 A, \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e, B' \u0434\u043e\u043b\u0436\u043d\u0430 \u043e\u0441\u0442\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u043e\u0439 B. \u041f\u0440\u043e\u0438\u0433\u0440\u044b\u0432\u0430\u0435\u0442 \u0442\u043e\u0442, \u043a\u0442\u043e \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0445\u043e\u0434. \u0411\u0443\u0434\u0435\u043c \u043d\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043f\u0430\u0440\u0443 (A', B') - \u043f\u043e\u0437\u0438\u0446\u0438\u0435\u0439 \u0432 \u0438\u0433\u0440\u0435. </p>\n\n<p>\u0410\u043b\u0438\u0441\u0430 \u0438 \u0411\u043e\u0431 \u0438\u0433\u0440\u0430\u044e\u0442 \u0432 \u044d\u0442\u0443 \u0438\u0433\u0440\u0443. \u0410\u043b\u0438\u0441\u0430 \u0434\u0435\u043b\u0430\u0435\u0442 \u043f\u0435\u0440\u0432\u044b\u0439 \u0445\u043e\u0434, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043e\u043d\u0430 \u0445\u043e\u0447\u0435\u0442 \u043e\u0431\u043c\u0430\u043d\u0443\u0442\u044c \u0411\u043e\u0431\u0430, \u043f\u043e\u043b\u0443\u0447\u0438\u0432 \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0432\u044b\u0438\u0433\u0440\u044b\u0448\u043d\u0443\u044e \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u0432 \u0438\u0433\u0440\u0435. \u041f\u043e\u043c\u043e\u0433\u0438\u0442\u0435 \u0410\u043b\u0438\u0441\u0435 \u043e\u0431\u043c\u0430\u043d\u0443\u0442\u044c \u0411\u043e\u0431\u0430, \u043f\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c A, B \u0438 K \u043d\u0430\u0439\u0434\u0438\u0442\u0435 \u0435\u0439 K-\u044e \u0432 \u043b\u0435\u043a\u0441\u0438\u043a\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u043f\u043e\u0437\u0438\u0446\u0438\u044e (A', B'), \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043e\u043d\u0430 \u0441\u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u0438\u0433\u0440\u0430\u0442\u044c \u0411\u043e\u0431\u0430 (A' \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u043e\u0439 A, B' \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u043e\u0439 B). \u0421\u0447\u0438\u0442\u0430\u0439\u0442\u0435, \u0447\u0442\u043e \u043e\u0431\u0430 \u0438\u0433\u0440\u043e\u043a\u0430 \u0438\u0433\u0440\u0430\u044e\u0442 \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u043e.</p>\n\n<p>\u0421\u0447\u0438\u0442\u0430\u0439\u0442\u0435, \u0447\u0442\u043e \u043f\u043e\u0437\u0438\u0446\u0438\u044f (A'<sub>1</sub>, B'<sub>1</sub>) \u043c\u0435\u043d\u044c\u0448\u0435 \u043b\u0435\u043a\u0441\u0438\u043a\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u0438, \u0447\u0435\u043c (A'<sub>2</sub>, B'<sub>2</sub>), \u0435\u0441\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u0435: (A'<sub>1</sub> \u043b\u0435\u043a\u0441\u0438\u043a\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u0438 \u043c\u0435\u043d\u044c\u0448\u0435 A'<sub>2</sub>) \u0418\u041b\u0418 ((A'<sub>1</sub> \u0440\u0430\u0432\u043d\u0430 A'<sub>2</sub>) \u0418 (B'<sub>1</sub> \u043b\u0435\u043a\u0441\u0438\u043a\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u0438 \u043c\u0435\u043d\u044c\u0448\u0435 B'<sub>2</sub>)).</p>\n\n<p><strong>\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445</strong> <br>\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0442\u0440\u0438 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b: N, M \u0438 K - \u0434\u043b\u0438\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0438 A, \u0434\u043b\u0438\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0438 B \u0438 K.\n\u0412\u0442\u043e\u0440\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 N \u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0445 \u043b\u0430\u0442\u0438\u043d\u0441\u043a\u0438\u0445 \u0431\u0443\u043a\u0432 - \u0441\u0442\u0440\u043e\u043a\u0430 A.\n\u0422\u0440\u0435\u0442\u044c\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 M \u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0445 \u043b\u0430\u0442\u0438\u043d\u0441\u043a\u0438\u0445 \u0431\u0443\u043a\u0432 - \u0441\u0442\u0440\u043e\u043a\u0430 B.</p>\n\n<p><strong>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f</strong> <br>\n1 &lt;= N, M &lt;= 3 * 10<sup>5</sup> <br>\n1 &lt;= K &lt;= 10<sup>18</sup></p>\n\n<p><strong>\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445</strong> <br>\n\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 A' \u0432 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0438 B' \u0432\u043e \u0432\u0442\u043e\u0440\u043e\u0439. \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0441\u0442\u0440\u043e\u043a\u0438 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043f\u0443\u0441\u0442\u044b\u043c\u0438. \u0415\u0441\u043b\u0438 \u043d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0435\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \"no solution\" \u0431\u0435\u0437 \u043a\u0430\u0432\u044b\u0447\u0435\u043a.</p>\n\n<p><strong>\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 #00</strong></p>\n\n<pre><code>2 2 5\nab\ncd\n</code></pre>\n\n<p><strong>\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 #00</strong></p>\n\n<pre><code>a\ncd\n</code></pre>\n\n<p><strong>\u041f\u043e\u044f\u0441\u043d\u0435\u043d\u0438\u044f \u043a \u043f\u0440\u0438\u043c\u0435\u0440\u0430\u043c</strong></p>\n\n<pre><code>\u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043f\u043e\u0437\u0438\u0446\u0438\u044e (\"\", \"\").\n\u0421\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0434\u0432\u0430 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0445 \u0442\u0438\u043f\u0430 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0445\u043e\u0434\u0430: \u043b\u0438\u0431\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u0435\u0440\u0432\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u043e\u0434\u043d\u043e\u0439 \u0438\u0437 \u0441\u0442\u0440\u043e\u043a, \u043b\u0438\u0431\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u043e\u0434\u043d\u043e\u0439 \u0438\u0437 \u0441\u0442\u0440\u043e\u043a. \u041d\u043e \u043a\u0430\u043a \u0431\u044b \u043d\u0435 \u0441\u0445\u043e\u0434\u0438\u043b \u043f\u0435\u0440\u0432\u044b\u0439 \u0438\u0433\u0440\u043e\u043a, \u0432\u0442\u043e\u0440\u043e\u0439 \u0432\u0441\u0435\u0433\u0434\u0430 \u043c\u043e\u0436\u0435\u0442 \u043e\u0442\u0432\u0435\u0442\u0438\u0442\u044c \u0435\u043c\u0443 \u0441\u0438\u043c\u043c\u0435\u0442\u0440\u0438\u0447\u043d\u043e \u0432\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u044d\u0442\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u044f \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0438\u0433\u0440\u044b\u0448\u043d\u043e\u0439.\n\n\u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0434\u043b\u044f \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u044e (\"\", \"c\"), \u043f\u0435\u0440\u0432\u044b\u0439 \u0438\u0433\u0440\u043e\u043a \u043c\u043e\u0436\u0435\u0442 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0445\u043e\u0434 \u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u043e\u0437\u0438\u0446\u0438\u044e (\"a\", \"c\"). \u041d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e \u043e\u0442 \u0442\u043e\u0433\u043e \u043a\u0430\u043a\u043e\u0439 \u0445\u043e\u0434 \u0441\u043e\u0432\u0435\u0440\u0448\u0438\u0442 \u0434\u0430\u043b\u0435\u0435 \u0432\u0442\u043e\u0440\u043e\u0439 \u0438\u0433\u0440\u043e\u043a: (\"ab\", \"c\") \u0438\u043b\u0438 (\"a\", \"cd\"), \u043f\u0435\u0440\u0432\u044b\u0439 \u0438\u0433\u0440\u043e\u043a \u043c\u043e\u0436\u0435\u0442 \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u0432 \u043f\u043e\u0437\u0438\u0446\u0438\u044e (\"ab\", \"cd\") \u0438 \u0438\u0433\u0440\u0430 \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u0442\u0441\u044f \u0435\u0433\u043e \u043f\u043e\u0431\u0435\u0434\u043e\u0439. \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u043f\u043e\u0437\u0438\u0446\u0438\u044f (\"\", \"c\") - \u0432\u044b\u0438\u0433\u0440\u044b\u0448\u043d\u0430\u044f \u0434\u043b\u044f \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0438\u0433\u0440\u043e\u043a\u0430.\n\n\u0412\u044b\u0438\u0433\u0440\u044b\u0448\u043d\u044b\u0435 \u0434\u043b\u044f \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0438\u0433\u0440\u043e\u043a\u0430 \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0432 \u043b\u0435\u043a\u0441\u0438\u043a\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u043f\u0435\u0440\u0432\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438: (\"\", \"c\"), (\"\", \"cd\"), (\"\", \"d\"), (\"a\", \"\"), (\"a\", \"cd\").\n</code></pre></div></div>", 
                "preview": null
            }
        ], 
        "clojure_template_tail": "", 
        "cpp_template": "#include <map>\n#include <set>\n#include <list>\n#include <cmath>\n#include <ctime>\n#include <deque>\n#include <queue>\n#include <stack>\n#include <string>\n#include <bitset>\n#include <cstdio>\n#include <limits>\n#include <vector>\n#include <climits>\n#include <cstring>\n#include <cstdlib>\n#include <fstream>\n#include <numeric>\n#include <sstream>\n#include <iostream>\n#include <algorithm>\n#include <unordered_map>\n\nusing namespace std;\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */\n    return 0;\n}", 
        "c_template_tail": "", 
        "cpp_template_tail": "", 
        "category": "ai", 
        "haskell_template_tail": "", 
        "php_template": "<?php\n /* Enter your code here. Read input from STDIN. Print output to STDOUT */", 
        "perl_template": "# Enter your code here. Read input from STDIN. Print output to STDOUT", 
        "can_be_viewed": true, 
        "submitted_hackers_count": 255, 
        "public_solutions": true, 
        "javascript_template_tail": "", 
        "c_template_head": "", 
        "deleted": false, 
        "real_dynamic": false, 
        "php_template_tail": "", 
        "difficulty_score": "0.529", 
        "difficulty": 0.1, 
        "active": true, 
        "slug": "two-strings-game", 
        "show_skeliton": null, 
        "player_count": 2, 
        "is_preview_contest": false, 
        "is_editorial_available": false, 
        "epoch_endtime": null, 
        "cpp_template_head": "", 
        "perl_template_tail": "", 
        "author_avatar": "https://hrcdn.net/s3_pub/hr-avatars/871a559a-479e-43ee-9348-aac0d68931c2/150x150.png", 
        "judgebot_language": null, 
        "php_template_head": "", 
        "java_template": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n    public static void main(String args[] ) throws Exception {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT */\n    }\n}", 
        "python3_template_tail": "", 
        "python_template": "# Enter your code here. Read input from STDIN. Print output to STDOUT", 
        "color": null, 
        "has_all_test_cases_public": false, 
        "time_left": null, 
        "scala_template": "// main method in \"Solution\" will be run as your answer\nobject Solution {\n\n    def main(args: Array[String]) {\n        //Enter your code here. Read input from STDIN. Print output to STDOUT\n    }\n\n}", 
        "lua_template_head": "", 
        "kind": "code", 
        "is_custom": false, 
        "ruby_template": "# Enter your code here. Read input from STDIN. Print output to STDOUT", 
        "haskell_template": "main :: IO ()\nmain = do\n-- Enter your code here. Read input from STDIN. Print output to STDOUT\nreturn ()", 
        "java8_template": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n    public static void main(String args[] ) throws Exception {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT */\n    }\n}", 
        "solved_score": 0.5, 
        "expert_solution_status": false, 
        "objectivec_template_tail": "", 
        "custom": false, 
        "preview": "Determine the K-th lexicographically wining position in a two player game.", 
        "company": null, 
        "is_text": false, 
        "python3_template_head": "", 
        "clojure_template": "; Enter your code here. Read input from STDIN. Print output to STDOUT", 
        "java_template_head": "", 
        "require_unlock": true, 
        "erlang_template_tail": "", 
        "csharp_template": "using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\n\nnamespace Solution {\nclass Solution {\n    static void Main(string[] args) {\n        /* Enter your code here. Read input from STDIN. Print output to STDOUT */\n    }\n}\n}", 
        "has_started": true, 
        "erlang_template": "% Enter your code here. Read input from STDIN. Print output to STDOUT\n% Your class should be named solution\n\n-module(solution).\n-export([main/0]).\n\nmain() ->\n.\n", 
        "judgebot": null, 
        "custom_checker_language": null, 
        "custom_case": true, 
        "scala_template_head": "", 
        "topics": [], 
        "updated_at": "2017-07-11T15:45:19.000Z", 
        "author_name": "zxqfd555", 
        "onboarding": null, 
        "id": 1878, 
        "lua_template": "-- Enter your code here. Read input from STDIN. Print output to STDOUT", 
        "has_ended": false, 
        "javascript_template": "process.stdin.resume();\nprocess.stdin.setEncoding(\"ascii\");\nvar input = \"\";\nprocess.stdin.on(\"data\", function (chunk) {\n    input += chunk;\n});\nprocess.stdin.on(\"end\", function () {\n    // now we can read/parse input\n});", 
        "c_template": "#include <math.h>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <assert.h>\n#include <limits.h>\n#include <stdbool.h>\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */\n    return 0;\n}", 
        "java8_template_tail": "", 
        "is_solution_unlocked": false, 
        "checker_program": null, 
        "scala_template_tail": "", 
        "status": null, 
        "hacker": {
            "username": "HackerRank", 
            "is_admin": true, 
            "id": 15055, 
            "avatar": "https://hrcdn.net/s3_pub/hr-avatars/4c95f96b-1ff9-46ed-98f8-cb3cb4ed8834/150x150.png"
        }, 
        "track": {
            "name": "Strings", 
            "taxonomy": 1, 
            "track_slug": "algorithms", 
            "track_id": 3, 
            "track_name": "Algorithms", 
            "id": 34, 
            "rewards_system_enabled": true, 
            "slug": "strings"
        }, 
        "csharp_template_head": "", 
        "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>Consider the following game for two players:</p>\n\n<p>There are two strings A and B. Initially, some strings A' and B' are written on the sheet of paper. A' is always a substring of A and B' is always a substring of B. A move consists of appending a letter to <strong>exactly one</strong> of these strings: either to A' or to B'. After the move the constraint of A' being a substring of A and B' is a substring of B should still be satisfied. Players take their moves alternately. We call a pair (A', B') a position.</p>\n\n<p>Two players are playing this game optimally. That means that if a player has a move that leads to his/her victory, he/she will definitely use this move. If a player is unable to make a move, he loses. </p>\n\n<p>Alice and Bob are playing this game. Alice makes the first move. As always, she wants to win and this time she does a clever trick. She wants the starting position to be the <em>K<sup>th</sup></em> lexicographically winning position for the first player (i.e. her). Consider two positions (A'<sub>1</sub>, B'<sub>1</sub>) and (A'<sub>2</sub>, B'<sub>2</sub>). We consider the first position lexicographically smaller than the second if A1 is lexicographically smaller than A2, or if A1 is equal to A2 and B1 is lexicographically smaller than B2.</p>\n\n<p>Please help her to find such a position, knowing the strings A, B and the integer <em>K</em>.</p></div></div></div><div class='challenge_input_format'><div class='msB challenge_input_format_title'><p><strong>Input Format</strong></p></div><div class='msB challenge_input_format_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>The first line of input consists of three integers, separated by a single space: N, M and K denoting the length of <em>A</em>, the length of <em>B</em> and K respectively.\nThe second line consists of N small latin letters, corresponding to the string A.\nThe third line consists of M small latin letters, corresponding to the string B.</p></div></div></div><div class='challenge_constraints'><div class='msB challenge_constraints_title'><p><strong>Constraints</strong></p></div><div class='msB challenge_constraints_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>1 &lt;= N, M &lt;= 3 * 10<sup>5</sup> <br>\n1 &lt;= K &lt;= 10<sup>18</sup></p></div></div></div><div class='challenge_output_format'><div class='msB challenge_output_format_title'><p><strong>Output Format</strong></p></div><div class='msB challenge_output_format_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>Output A' on the first line of input and B' on the second line of input. Please, pay attention that some of these strings can be empty.\nIf there's no such pair, output \"no solution\" without quotes.</p></div></div></div><div class='challenge_sample_input'><div class='msB challenge_sample_input_title'><p><strong>Sample Input</strong></p></div><div class='msB challenge_sample_input_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><pre><code>2 2 5\nab\ncd\n</code></pre></div></div></div><div class='challenge_sample_output'><div class='msB challenge_sample_output_title'><p><strong>Sample Output</strong></p></div><div class='msB challenge_sample_output_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><pre><code>a\ncd\n</code></pre></div></div></div><div class='challenge_explanation'><div class='msB challenge_explanation_title'><p><strong>Explanation</strong></p></div><div class='msB challenge_explanation_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><pre><code>Consider the position (\"\", \"\").\nThere are two different kinds of moves: either append the last letter to one of the strings, either to append the first one. If the first player behaves in the first way, then second player can just do the same for another string and win the game. So, the only chance that remains for the first player is to append the first letter to one of the strings. Then, the second player can do the same. This way, after the first two moves we get (\"a\", \"c\"). Then there's no option for the first player than to append the second letter to one of the strings. After this, there's only one move that will be made by the second player. Then, we get (\"ab\", \"cd\"). This way, is the position (\"\", \"\") is a losing one for the first player.\n\nIf we consider, for example, a position (\"\", \"c\"), the first player can make a move to make the position equal to (\"a\", \"c\"). After that, no matter what will the second player's move - (\"ab\", \"c\") or (\"a\", \"cd\"), the first will make the position (\"ab\", \"cd\") and the game will be ended with her victory. So, the position (\"\", \"c\") is a winning one for the first player.\n\nThe first five winning positions in the lexicographical order, starting with the first one are: (\"\", \"c\"), (\"\", \"cd\"), (\"\", \"d\"), (\"a\", \"\"), (\"a\", \"cd\").\n</code></pre></div></div></div>", 
        "haskell_template_head": "", 
        "max_score": 100, 
        "user_score": 0, 
        "requirements_description": null, 
        "created_at": "2014-02-09T14:33:57.000Z", 
        "countdown_time": 0, 
        "objectivec_template": "#import <objc/objc.h>\n#import <objc/Object.h>\n#import <Foundation/Foundation.h>\n\nint main ( int argc, const char *argv[] ) {\n    //Enter your code here. Read input from STDIN. Print output to STDOUT\n    return 0;\n}", 
        "csharp_template_tail": "", 
        "lua_template_tail": "", 
        "perl_template_head": ""
    }
}