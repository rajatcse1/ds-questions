{
    "models": [
        {
            "onboarding": {
                "fsharp": {
                    "solution": "open System\n\n[<EntryPoint>]\nlet main argv = \n    let a = Console.ReadLine() |> int\n    let b = Console.ReadLine() |> int\n    printfn \"%d\" (a+b)\n    0 // return an integer exit code\n", 
                    "template": "open System\n\n[<EntryPoint>]\nlet main argv = \n    let a = Console.ReadLine() |> int\n    let b = Console.ReadLine() |> int\n    // print the sum\n    0 // return an integer exit code\n"
                }, 
                "pascal": {
                    "solution": "Program solveMeFirst;\nfunction solveMeFirst(num1, num2: integer): integer;\nvar\n   result: integer;\nbegin\n   result := num1+num2;\n   solveMeFirst := result;\nend;\n\nvar A : integer;\n    B : integer;\n    Res : integer;\nbegin\n  Readln (A);\n  Readln (B);\n  Res := solveMeFirst(A,B);\n  WriteLn(Res);\nend.\n", 
                    "template": "Program solveMeFirst;\nfunction solveMeFirst(num1, num2: integer): integer;\nvar\n   result: integer;\nbegin\n\nend;\n\nvar A : integer;\n    B : integer;\n    Res : integer;\nbegin\n  Readln (A);\n  Readln (B);\n  Res := solveMeFirst(A,B);\n  WriteLn(Res);\nend.\n"
                }, 
                "haskell": {
                    "solution": "solveMeFirst a b = a + b\n\nmain = do\n    val1 <- readLn\n    val2 <- readLn\n    let sum = solveMeFirst val1 val2\n    print sum\n", 
                    "template": "solveMeFirst a b =\n\nmain = do\n    val1 <- readLn\n    val2 <- readLn\n    let sum = solveMeFirst val1 val2\n    print sum\n"
                }, 
                "csharp": {
                    "solution": "using System;\nusing System.Collections.Generic;\nusing System.IO;\nclass Solution {\n    static int solveMeFirst(int a, int b) { \n        return a+b;\n    }\n    static void Main(String[] args) {\n        int val1 = Convert.ToInt32(Console.ReadLine());\n        int val2 = Convert.ToInt32(Console.ReadLine());\n        int sum = solveMeFirst(val1,val2);\n        Console.WriteLine(sum);\n    }\n}      \n", 
                    "template": "using System;\nusing System.Collections.Generic;\nusing System.IO;\nclass Solution {\n    static int solveMeFirst(int a, int b) { \n\n    }\n    static void Main(String[] args) {\n        int val1 = Convert.ToInt32(Console.ReadLine());\n        int val2 = Convert.ToInt32(Console.ReadLine());\n        int sum = solveMeFirst(val1,val2);\n        Console.WriteLine(sum);\n    }\n}      \n"
                }, 
                "go": {
                    "solution": "package main\nimport \"fmt\"\n\nfunc solveMeFirst(a uint32,b uint32) uint32{\n    return (a+b)\n}\n\nfunc main() {\n    var a, b, res uint32\n    fmt.Scanf(\"%v %v\", &a,&b)\n    res = solveMeFirst(a,b)\n    fmt.Println(res)\n}\n", 
                    "template": "package main\nimport \"fmt\"\n\nfunc solveMeFirst(a uint32,b uint32) uint32{\n\n}\n\nfunc main() {\n    var a, b, res uint32\n    fmt.Scanf(\"%v %v\", &a,&b)\n    res = solveMeFirst(a,b)\n    fmt.Println(res)\n}\n"
                }, 
                "smalltalk": {
                    "solution": "solveMeFirst := [ :num1 :num2 | \n    num1 + num2 \n].\n\n\ninput := stdin.\n[input atEnd] whileFalse: [\n    a:= input nextLine asInteger.\n    b:= input nextLine asInteger.\n    res := solveMeFirst value: a value: b\n].\n(res) printNl\n", 
                    "template": "solveMeFirst := [ :num1 :num2 | \n\n].\n\n\ninput := stdin.\n[input atEnd] whileFalse: [\n    a:= input nextLine asInteger.\n    b:= input nextLine asInteger.\n    res := solveMeFirst value: a value: b\n].\n(res) printNl\n"
                }, 
                "java": {
                    "solution": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n\n    static int solveMeFirst(int a, int b) {\n        return a+b;\n   }\n\n   \n public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int _a;\n        _a = in.nextInt();\n        int _b;\n        _b = in.nextInt();\n        int sum;\n        sum = solveMeFirst(_a, _b);\n        System.out.println(sum);\n   }\n}\n", 
                    "template": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Solution {\n\n\n    static int solveMeFirst(int a, int b) {\n   }\n\n   \n public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        int _a;\n        _a = in.nextInt();\n        int _b;\n        _b = in.nextInt();\n        int sum;\n        sum = solveMeFirst(_a, _b);\n        System.out.println(sum);\n   }\n}\n"
                }, 
                "lolcode": {
                    "solution": "HAI 1.2\n\nHOW IZ I SOLVEMEFIRST YR NUM1 AN YR NUM2\n  FOUND YR SUM OF NUM1 AN NUM2\nIF U SAY SO\n\nI HAS A Num1\nI HAS A Num2\nI HAS A Res\nGIMMEH Num1\nGIMMEH Num2\nRes R I IZ SOLVEMEFIRST YR Num1 AN YR Num2 MKAY\nVISIBLE Res\nKTHXBYE\n", 
                    "template": "HAI 1.2\n\nHOW IZ I SOLVEMEFIRST YR NUM1 AN YR NUM2\n\nIF U SAY SO\n\nI HAS A Num1\nI HAS A Num2\nI HAS A Res\nGIMMEH Num1\nGIMMEH Num2\nRes R I IZ SOLVEMEFIRST YR Num1 AN YR Num2 MKAY\nVISIBLE Res\nKTHXBYE\n"
                }, 
                "scala": {
                    "solution": "object Solution {\n\n    def main(args: Array[String]) {\n        println(io.Source.stdin.getLines().take(2).map(_.toInt).sum)\n    }\n}\n", 
                    "template": "object Solution {\n    \n    def solveMeFirst (a: Int, b: Int): Int = {\n\n    }\n\n    def main(args: Array[String]) {\n        var a:Int = Console.readInt\n        var b:Int = Console.readInt\n        println(solveMeFirst(a, b))\n    }\n}\n"
                }, 
                "perl": {
                    "solution": "sub solveMeFirst{\n    ($x,$y) = @_;   \n    $res = $x + $y ;\n    return $res ;   \n}\n\n\n$choise1 = <STDIN> ;\n$choise2 = <STDIN> ;\n$res = solveMeFirst($choise1 , $choise2);\nprint \"$res\" ;\n", 
                    "template": "sub solveMeFirst{\n    ($x,$y) = @_;\n    \n}\n\n\n$choise1 = <STDIN> ;\n$choise2 = <STDIN> ;\n$res = solveMeFirst($choise1 , $choise2);\nprint \"$res\" ;\n"
                }, 
                "lua": {
                    "solution": "solveMeFirst = function(a,b)\n    return a+b\nend\n\n    \na = io.read(\"*number\")\nb = io.read(\"*number\")\nres = solveMeFirst(a,b)\nprint (res)\n", 
                    "template": "solveMeFirst = function(a,b)\n\nend\n\n    \na = io.read(\"*number\")\nb = io.read(\"*number\")\nres = solveMeFirst(a,b)\nprint (res)\n"
                }, 
                "sbcl": {
                    "solution": "(defun solveMeFirst (x y)    \n    (+ x y))\n(setq a (read-line))\n(setq b (read-line))\n\n(write (solveMeFirst (parse-integer a) (parse-integer b)))\n", 
                    "template": "(defun solveMeFirst (x y)    \n    )\n(setq a (read-line))\n(setq b (read-line))\n\n(write (solveMeFirst (parse-integer a) (parse-integer b)))\n"
                }, 
                "statement": "Complete the function solveMeFirst which takes two integers and returns their sum.", 
                "objectivec": {
                    "solution": "#import <Foundation/Foundation.h>\nint solveMeFirst(int a, int b) { \n    return a+b;\n}\n \nint main (int argc, const char * argv[]) {\n    NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];\n    int a,b,res;\n    scanf(\"%d %d\", &a, &b);\n    res = solveMeFirst(a,b);\n    printf(\"%d\", res);\n    [pool drain];\n    return 0;\n}\n", 
                    "template": "#import <Foundation/Foundation.h>\nint solveMeFirst(int a, int b) { \n\n}\n \nint main (int argc, const char * argv[]) {\n    NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];\n    int a,b,res;\n    scanf(\"%d %d\", &a, &b);\n    res = solveMeFirst(a,b);\n    printf(\"%d\", res);\n    [pool drain];\n    return 0;\n}\n"
                }, 
                "erlang": {
                    "solution": "-module(solution).\n-export([main/0]).\nsolveMeFirst(A, B) ->\n    A + B.\nmain() -> \n    {ok, [A, B]} = io:fread(\"\", \"~d~d\"),\n    Res = solveMeFirst(A,B),\n    io:format(\"~p~n\",[Res]).\n", 
                    "template": "-module(solution).\n-export([main/0]).\nsolveMeFirst(A, B) ->\n    \nmain() -> \n    {ok, [A, B]} = io:fread(\"\", \"~d~d\"),\n    Res = solveMeFirst(A,B),\n    io:format(\"~p~n\",[Res]).\n"
                }, 
                "python": {
                    "solution": "def solveMeFirst(a,b):\n  return a+b\n\n\nnum1 = input()\nnum2 = input()\nres = solveMeFirst(num1,num2)\nprint res\n", 
                    "template": "def solveMeFirst(a,b):\n    \n\n\nnum1 = input()\nnum2 = input()\nres = solveMeFirst(num1,num2)\nprint res\n"
                }, 
                "javascript": {
                    "solution": "process.stdin.resume();\nprocess.stdin.setEncoding('ascii');\n\nvar __input_stdin = \"\";\nvar __input_stdin_array = \"\";\nvar __input_currentline = 0;\n\nprocess.stdin.on('data', function (data) {\n    __input_stdin += data;\n});\n\nfunction solveMeFirst(a, b) {\n    return a+b;\n}\nprocess.stdin.on('end', function () {\n    __input_stdin_array = __input_stdin.split(\"\\n\");\n    var res;\n    var _a = parseInt(__input_stdin_array[__input_currentline].trim(), 10);\n    __input_currentline += 1;\n    \n    var _b = parseInt(__input_stdin_array[__input_currentline].trim(), 10);\n    __input_currentline += 1;\n    \n    res = solveMeFirst(_a, _b);\n    process.stdout.write(\"\"+res+\"\\n\");\n    \n});\n", 
                    "template": "process.stdin.resume();\nprocess.stdin.setEncoding('ascii');\n\nvar __input_stdin = \"\";\nvar __input_stdin_array = \"\";\nvar __input_currentline = 0;\n\nprocess.stdin.on('data', function (data) {\n    __input_stdin += data;\n});\n\nfunction solveMeFirst(a, b) {\n\n}\nprocess.stdin.on('end', function () {\n    __input_stdin_array = __input_stdin.split(\"\\n\");\n    var res;\n    var _a = parseInt(__input_stdin_array[__input_currentline].trim(), 10);\n    __input_currentline += 1;\n    \n    var _b = parseInt(__input_stdin_array[__input_currentline].trim(), 10);\n    __input_currentline += 1;\n    \n    res = solveMeFirst(_a, _b);\n    process.stdout.write(\"\"+res+\"\\n\");\n    \n});\n"
                }, 
                "php": {
                    "solution": "<?php\nfunction solveMeFirst($a,$b){\n    return $a + $b;\n}\n$handle = fopen (\"php://stdin\",\"r\");\n$_a = fgets($handle);\n$_b = fgets($handle);\n$sum = solveMeFirst((int)$_a,(int)$_b);\nprint ($sum);\nfclose($handle);\n?>\n", 
                    "template": "<?php\nfunction solveMeFirst($a,$b){\n}\n$handle = fopen (\"php://stdin\",\"r\");\n$_a = fgets($handle);\n$_b = fgets($handle);\n$sum = solveMeFirst((int)$_a,(int)$_b);\nprint ($sum);\nfclose($handle);\n?>\n"
                }, 
                "ruby": {
                    "solution": "def solveMeFirst (a, b)\n    return a+b\nend\nval1 = gets.to_i\nval2 = gets.to_i\nsum = solveMeFirst(val1,val2)\nprint (sum)\n", 
                    "template": "def solveMeFirst (a, b)\n\nend\nval1 = gets.to_i\nval2 = gets.to_i\nsum = solveMeFirst(val1,val2)\nprint (sum)\n"
                }, 
                "python3": {
                    "solution": "def solveMeFirst(a,b):\n  return a+b\n\nnum1 = int(input())\nnum2 = int(input())\nres = solveMeFirst(num1,num2)\nprint (res)\n", 
                    "template": "def solveMeFirst(a,b):\n  \n\nnum1 = int(input())\nnum2 = int(input())\nres = solveMeFirst(num1,num2)\nprint (res)\n"
                }, 
                "visualbasic": {
                    "solution": "Imports System\n\n\nModule Solution\n    Function solveMeFirst(ByVal a,b As Integer) As Integer\n        Return a+b\n    End Function\n    \n   Public Shared Sub Main()\n      Dim a As Integer \n        Dim b As Integer \n        Dim res As Integer \n        a = Console.Readline() \n        b = Console.Readline() \n        res = solveMeFirst(a,b)\n        Console.WriteLine(\"{0}\",res)\n   End Sub\nEnd Module\n", 
                    "template": "Imports System\n\n\nModule Solution\n    Function solveMeFirst(ByVal a,b As Integer) As Integer\n\n    End Function\n    \n   Public Shared Sub Main()\n      Dim a As Integer \n        Dim b As Integer \n        Dim res As Integer \n        a = Console.Readline() \n        b = Console.Readline() \n        res = solveMeFirst(a,b)\n        Console.WriteLine(\"{0}\",res)\n   End Sub\nEnd Module\n"
                }, 
                "groovy": {
                    "solution": "def solveMeFirst(a,b) { \n    a+b\n}\n\nBufferedReader br = new BufferedReader(new InputStreamReader(System.in))\ndef a = Integer.parseInt(br.readLine())\ndef b = Integer.parseInt(br.readLine())\ndef res = solveMeFirst(a,b)\nprintln res\n", 
                    "template": "def solveMeFirst(a,b) { \n\n}\n\nBufferedReader br = new BufferedReader(new InputStreamReader(System.in))\ndef a = Integer.parseInt(br.readLine())\ndef b = Integer.parseInt(br.readLine())\ndef res = solveMeFirst(a,b)\nprintln res\n"
                }, 
                "c": {
                    "solution": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\n\nint solveMeFirst(int a, int b) {\n  return a+b;\n}\nint main() {\n  int num1,num2;\n  scanf(\"%d %d\",&num1,&num2);\n  int sum; \n  sum = solveMeFirst(num1,num2);\n  printf(\"%d\",sum);\n  return 0;\n}\n", 
                    "template": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n\n\nint solveMeFirst(int a, int b) {\n  \n}\nint main() {\n  int num1,num2;\n  scanf(\"%d %d\",&num1,&num2);\n  int sum; \n  sum = solveMeFirst(num1,num2);\n  printf(\"%d\",sum);\n  return 0;\n}\n"
                }, 
                "d": {
                    "solution": "import std.stdio;\nint solveMeFirst (int a,int b) {\n    return a+b;\n}\n \nvoid main()\n{\n    int a,b,res;\n    readf(\"%d %d\", &a,&b);\n    res = solveMeFirst(a,b);\n    writeln(res);\n}\n", 
                    "template": "import std.stdio;\nint solveMeFirst (int a,int b) {\n\n}\n \nvoid main()\n{\n    int a,b,res;\n    readf(\"%d %d\", &a,&b);\n    res = solveMeFirst(a,b);\n    writeln(res);\n}\n"
                }, 
                "ocaml": {
                    "solution": "let () =\n    let a = read_int() in\n    let b = read_int() in\n    print_int(a+b);\n", 
                    "template": "let () =\n    let a = read_int() in\n    let b = read_int() in\n    print_int();\n"
                }, 
                "cpp": {
                    "solution": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\nint solveMeFirst(int a, int b) {\n  return a+b;\n}\nint main() {\n  int num1, num2;\n  int sum;\n  cin>>num1>>num2;\n  sum = solveMeFirst(num1,num2);\n  cout<<sum;\n  return 0;\n}\n", 
                    "template": "#include <cmath>\n#include <cstdio>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\n\nint solveMeFirst(int a, int b) {\n}\nint main() {\n  int num1, num2;\n  int sum;\n  cin>>num1>>num2;\n  sum = solveMeFirst(num1,num2);\n  cout<<sum;\n  return 0;\n}\n"
                }, 
                "tcl": {
                    "solution": "proc sum {a b} {\n    expr {$a+$b}\n}\n\nset a [gets stdin]\nset b [gets stdin]\nset res [sum $a $b]\nputs $res\n", 
                    "template": "proc sum {a b} {\n\n}\n\nset a [gets stdin]\nset b [gets stdin]\nset res [sum $a $b]\nputs $res\n"
                }, 
                "clojure": {
                    "solution": "(defn solveMeFirst [x y]    \n    (+ x y))\n\n\n(def a (read-line))\n(def b (read-line))\n\n(println (solveMeFirst (Integer/parseInt a) (Integer/parseInt b)))\n", 
                    "template": "(defn solveMeFirst [x y]    \n    )\n\n\n(def a (read-line))\n(def b (read-line))\n\n(println (solveMeFirst (Integer/parseInt a) (Integer/parseInt b)))\n"
                }
            }, 
            "solved_count": 770137, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:33:59.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Easy", 
            "id": 2532, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 1, 
            "is_solution_unlocked": false, 
            "preview": "This is an easy challenge to help you start coding in your favorite languages!", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Warmup", 
                "taxonomy": 1, 
                "track_slug": "algorithms", 
                "track_id": 3, 
                "track_name": "Algorithms", 
                "id": 43, 
                "rewards_system_enabled": true, 
                "slug": "warmup"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.9950288377707732, 
            "active": true, 
            "max_score": 1, 
            "slug": "solve-me-first", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Solve Me First", 
            "level": 0, 
            "success_ratio": 0.974551027019366, 
            "total_count": 790248, 
            "created_at": "2014-05-17T09:05:03.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 472111, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:56:38.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Easy", 
            "id": 9828, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 10, 
            "is_solution_unlocked": false, 
            "preview": "Calculate the sum of integers in an array. ", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Warmup", 
                "taxonomy": 1, 
                "track_slug": "algorithms", 
                "track_id": 3, 
                "track_name": "Algorithms", 
                "id": 43, 
                "rewards_system_enabled": true, 
                "slug": "warmup"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.9, 
            "active": true, 
            "max_score": 10, 
            "slug": "simple-array-sum", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Simple Array Sum", 
            "level": 3, 
            "success_ratio": 0.9573763510636141, 
            "total_count": 493130, 
            "created_at": "2015-08-16T03:03:06.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 252328, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:57:18.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Easy", 
            "id": 21400, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 10, 
            "is_solution_unlocked": false, 
            "preview": "Compare the elements in two triplets.", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Warmup", 
                "taxonomy": 1, 
                "track_slug": "algorithms", 
                "track_id": 3, 
                "track_name": "Algorithms", 
                "id": 43, 
                "rewards_system_enabled": true, 
                "slug": "warmup"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.9, 
            "active": true, 
            "max_score": 10, 
            "slug": "compare-the-triplets", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Compare the Triplets", 
            "level": 50, 
            "success_ratio": 0.9439209334166295, 
            "total_count": 267319, 
            "created_at": "2016-05-11T15:19:11.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 376486, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:56:28.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Easy", 
            "id": 8781, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 10, 
            "is_solution_unlocked": false, 
            "preview": "Calculate the sum of the values in an array that might exceed the range of int values.", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Warmup", 
                "taxonomy": 1, 
                "track_slug": "algorithms", 
                "track_id": 3, 
                "track_name": "Algorithms", 
                "id": 43, 
                "rewards_system_enabled": true, 
                "slug": "warmup"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.9, 
            "active": true, 
            "max_score": 10, 
            "slug": "a-very-big-sum", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "A Very Big Sum", 
            "level": 4, 
            "success_ratio": 0.9856402711200588, 
            "total_count": 381971, 
            "created_at": "2015-06-16T09:19:23.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 306632, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:56:19.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Easy", 
            "id": 8662, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 10, 
            "is_solution_unlocked": false, 
            "preview": "Calculate the absolute difference of sums across the two diagonals of a square matrix.", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Warmup", 
                "taxonomy": 1, 
                "track_slug": "algorithms", 
                "track_id": 3, 
                "track_name": "Algorithms", 
                "id": 43, 
                "rewards_system_enabled": true, 
                "slug": "warmup"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.9, 
            "active": true, 
            "max_score": 10, 
            "slug": "diagonal-difference", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Diagonal Difference", 
            "level": 50, 
            "success_ratio": 0.9616810412419633, 
            "total_count": 318850, 
            "created_at": "2015-06-09T10:02:41.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 282521, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:56:14.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Easy", 
            "id": 8654, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 10, 
            "is_solution_unlocked": false, 
            "preview": "Calculate the fraction of positive, negative and zero values in an array.", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Warmup", 
                "taxonomy": 1, 
                "track_slug": "algorithms", 
                "track_id": 3, 
                "track_name": "Algorithms", 
                "id": 43, 
                "rewards_system_enabled": true, 
                "slug": "warmup"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.9, 
            "active": true, 
            "max_score": 10, 
            "slug": "plus-minus", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Plus Minus", 
            "level": 9, 
            "success_ratio": 0.9821283311664384, 
            "total_count": 287662, 
            "created_at": "2015-06-09T07:49:22.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 278367, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:55:58.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Easy", 
            "id": 8636, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 10, 
            "is_solution_unlocked": false, 
            "preview": "Print a right-aligned staircase with n steps.", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Warmup", 
                "taxonomy": 1, 
                "track_slug": "algorithms", 
                "track_id": 3, 
                "track_name": "Algorithms", 
                "id": 43, 
                "rewards_system_enabled": true, 
                "slug": "warmup"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.9, 
            "active": true, 
            "max_score": 10, 
            "slug": "staircase", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Staircase", 
            "level": 4, 
            "success_ratio": 0.9829516764067162, 
            "total_count": 283195, 
            "created_at": "2015-06-08T10:46:55.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 115389, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-05-03T11:12:42.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Easy", 
            "id": 26276, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 10, 
            "is_solution_unlocked": false, 
            "preview": "Find the maximum and minimum values obtained by summing four of five integers.", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Warmup", 
                "taxonomy": 1, 
                "track_slug": "algorithms", 
                "track_id": 3, 
                "track_name": "Algorithms", 
                "id": 43, 
                "rewards_system_enabled": true, 
                "slug": "warmup"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.9, 
            "active": true, 
            "max_score": 10, 
            "slug": "mini-max-sum", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Mini-Max Sum", 
            "level": 50, 
            "success_ratio": 0.9317812931514814, 
            "total_count": 123837, 
            "created_at": "2016-10-06T10:54:23.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 79888, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-06-09T18:41:16.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Easy", 
            "id": 23074, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 10, 
            "is_solution_unlocked": false, 
            "preview": "Determine the number of candles that are blown out.", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Warmup", 
                "taxonomy": 1, 
                "track_slug": "algorithms", 
                "track_id": 3, 
                "track_name": "Algorithms", 
                "id": 43, 
                "rewards_system_enabled": true, 
                "slug": "warmup"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.9, 
            "active": true, 
            "max_score": 10, 
            "slug": "birthday-cake-candles", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Birthday Cake Candles", 
            "level": 50, 
            "success_ratio": 0.9566394041360812, 
            "total_count": 83509, 
            "created_at": "2016-07-20T09:08:23.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }, 
        {
            "onboarding": null, 
            "solved_count": 201761, 
            "preview_format": null, 
            "can_solve": true, 
            "public_test_cases": true, 
            "topics": [], 
            "time_left": null, 
            "updated_at": "2017-07-11T15:56:06.000Z", 
            "has_started": true, 
            "epoch_starttime": null, 
            "difficulty_name": "Easy", 
            "id": 8649, 
            "has_ended": false, 
            "is_custom": false, 
            "compile_and_test": true, 
            "checker_program": null, 
            "submit_disabled": false, 
            "expert_solution_status": false, 
            "company_id": null, 
            "custom": false, 
            "can_be_viewed": true, 
            "deleted": false, 
            "factor": 15, 
            "is_solution_unlocked": false, 
            "preview": "Convert time from an AM/PM format to a 24 hour format.", 
            "is_editorial_available": true, 
            "status": null, 
            "category": "ai", 
            "public_solutions": true, 
            "color": null, 
            "track": {
                "name": "Warmup", 
                "taxonomy": 1, 
                "track_slug": "algorithms", 
                "track_id": 3, 
                "track_name": "Algorithms", 
                "id": 43, 
                "rewards_system_enabled": true, 
                "slug": "warmup"
            }, 
            "dynamic": false, 
            "company": null, 
            "is_text": false, 
            "solved_score": 0.5, 
            "difficulty": 0.9, 
            "active": true, 
            "max_score": 15, 
            "slug": "time-conversion", 
            "contest_slug": "master", 
            "user_score": 0, 
            "kind": "code", 
            "player_count": 2, 
            "name": "Time Conversion", 
            "level": 8, 
            "success_ratio": 0.8848196469685341, 
            "total_count": 228025, 
            "created_at": "2015-06-09T06:22:36.000Z", 
            "epoch_endtime": null, 
            "judgebot": null, 
            "countdown_time": 0, 
            "custom_tabs": null, 
            "judgebot_language": null, 
            "custom_case": true, 
            "requirements_description": null, 
            "is_skip_band_challenge": false, 
            "custom_checker_language": null
        }
    ], 
    "tutorial_signed_up": true, 
    "current_track": {
        "name": "Algorithms", 
        "id": 3, 
        "priority": 14, 
        "descriptions": "The true test of problem solving: when one realizes that time and memory aren't infinite.\n", 
        "rewards_system_enabled": true, 
        "slug": "algorithms"
    }, 
    "total": 10
}