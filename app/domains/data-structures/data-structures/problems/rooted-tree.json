{
    "status": true, 
    "model": {
        "onboarding": null, 
        "tagAncestry": [], 
        "solved_count": 71, 
        "leaderboard_out_of_sync_message": null, 
        "public_test_cases": true, 
        "checker_program": null, 
        "topics": [], 
        "time_left": null, 
        "updated_at": "2017-07-11T15:45:53.000Z", 
        "author_name": "devuy11", 
        "has_started": true, 
        "epoch_starttime": null, 
        "has_all_test_cases_public": false, 
        "difficulty_name": "Hard", 
        "require_unlock": true, 
        "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p><a href=\"https://hr-filepicker.s3.amazonaws.com/101may14/russian/2212-rooted_tree.pdf\">\u0420\u0443\u0441\u0441\u043a\u0438\u0439</a> \\| \n<a href=\"https://hr-filepicker.s3.amazonaws.com/101may14/chinese/2212-rooted_tree.pdf\">\u4e2d\u6587</a><br>\nYou are given a rooted <a href=\"http://en.wikipedia.org/wiki/Tree_%28graph_theory%29\">tree</a> with <em>N</em> nodes and the root of the tree, <em>R</em>, is also given. Each node of the tree contains a value, that is initially empty. You have to mantain the tree under two operations:</p>\n\n<ol>\n<li>Update Operation</li>\n<li>Report Operation</li>\n</ol>\n\n<p><strong>Update Operation</strong> <br>\nEach Update Operation begins with the character <code>U</code>. Character <code>U</code> is followed by 3 integers <em>T, V and K</em>. For every node which is the descendent of the node <em>T</em>, update it's value by adding <em>V + d*K</em>, where <em>V</em> and <em>K</em> are the parameters of the query and <em>d</em> is the distance of the node from <em>T</em>. Note that <em>V</em> is added to node <em>T</em>.  </p>\n\n<p><strong>Report Operation</strong> <br>\nEach Report Operation begins with the character <code>Q</code>. Character <code>Q</code> is followed by 2 integers, <em>A</em> and <em>B</em>. Output the sum of values of nodes in the path from <em>A</em> to <em>B</em> modulo <em>(10<sup>9</sup> + 7)</em>  </p>\n\n<p><strong>Input Format</strong> <br>\nThe first Line consists of 3 space separated integers, <em>N E R</em>, where <em>N</em> is the number of nodes present, <em>E</em> is the total number of queries (update + report), and <em>R</em> is root of the tree.  </p>\n\n<p>Each of the next <em>N-1</em> lines contains 2 space separated integers, <em>X</em> and <em>Y</em> (<em>X</em> and <em>Y</em> are connected by an edge).</p>\n\n<p>Thereafter, <em>E</em> lines follows: each line can represent either the Update Operation or the Report Operation.<br></p>\n\n<ul>\n<li><em>Update Operation</em> is of the form : <em>U T V K</em>.</li>\n<li><em>Report Operation</em> is of the form : <em>Q A B</em>.</li>\n</ul>\n\n<p><strong>Output Format</strong> <br>\nOutput the answer for every given report operation.</p>\n\n<p><strong>Constraints</strong>  </p>\n\n<p>1 \u2264 N, E \u2264 10<sup>5</sup> <br>\n1 \u2264 E \u2264 10<sup>5</sup> <br>\n1 \u2264 R, X, Y, T, A, B \u2264 N <br>\n1 \u2264 V, K \u2264 10<sup>9</sup> <br>\nX \u2260 Y</p>\n\n<p><strong>Sample Input</strong></p>\n\n<pre><code>7 7 1\n1 2\n2 3\n2 4\n2 5\n5 6\n6 7\nU 5 10 2\nU 4 5 3\nQ 1 7\nU 6 7 4\nQ 2 7\nQ 1 4\nQ 2 4\n</code></pre>\n\n<p><strong>Sample Output</strong></p>\n\n<pre><code>36\n54\n5\n5\n</code></pre>\n\n<p><strong>Explanation</strong>  </p>\n\n<ul>\n<li>Values of Nodes after <code>U 5 10 2</code>: <code>[0 0 0 0 10 12 14]</code>.</li>\n<li>Values of Nodes after <code>U 4 5 3</code>: <code>[0 0 0 5 10 12 14]</code>. </li>\n<li>Sum of the Nodes from 1 to 7: 0 + 0 + 10 + 12 + 14 = 36.</li>\n<li>Values of Nodes after <code>U 6 7 4</code>: [0 0 0 5 10 19 25].  </li>\n<li>Sum of the Nodes from 2 to 7: 0 + 10 + 19 + 25 = 54. </li>\n<li>Sum of the Nodes from 1 to 4: 0 + 0 + 5 = 5.</li>\n<li>Sum of the Nodes from 2 to 4: 0 + 5 = 5.</li>\n</ul></div></div></div>", 
        "hacker": {
            "username": "HackerRank", 
            "is_admin": true, 
            "id": 15055, 
            "avatar": "https://hrcdn.net/s3_pub/hr-avatars/4c95f96b-1ff9-46ed-98f8-cb3cb4ed8834/150x150.png"
        }, 
        "id": 2212, 
        "leaderboard_out_of_sync": null, 
        "has_ended": false, 
        "languages": [
            "c", 
            "cpp", 
            "java", 
            "csharp", 
            "php", 
            "ruby", 
            "python", 
            "perl", 
            "haskell", 
            "clojure", 
            "scala", 
            "lua", 
            "go", 
            "javascript", 
            "erlang", 
            "d", 
            "ocaml", 
            "pascal", 
            "python3", 
            "groovy", 
            "objectivec", 
            "fsharp", 
            "visualbasic", 
            "lolcode", 
            "smalltalk", 
            "tcl", 
            "whitespace", 
            "sbcl", 
            "java8", 
            "octave", 
            "racket", 
            "rust", 
            "bash", 
            "r", 
            "swift", 
            "fortran", 
            "cpp14", 
            "coffeescript", 
            "ada", 
            "pypy", 
            "pypy3", 
            "elixir", 
            "kotlin", 
            "julia"
        ], 
        "is_custom": false, 
        "compile_and_test": true, 
        "default_language": null, 
        "migrated_resource": null, 
        "submit_disabled": null, 
        "expert_solution_status": false, 
        "can_solve": true, 
        "company_id": null, 
        "custom": null, 
        "can_be_viewed": true, 
        "track": {
            "name": "Advanced", 
            "taxonomy": 1, 
            "track_slug": "data-structures", 
            "track_id": 17, 
            "track_name": "Data Structures", 
            "id": 32, 
            "rewards_system_enabled": null, 
            "slug": "data-structures"
        }, 
        "primary_contest": {
            "migration_status": null, 
            "contest_broadcast": null, 
            "hacker_timelimit": null, 
            "notification": null, 
            "qualification_rule_value": null, 
            "leaderboard_backend": null, 
            "expose_stats": null, 
            "updated_at": "2016-05-06T21:52:14.000Z", 
            "custom_leaderboard_column_name": null, 
            "organization_type": null, 
            "ended": true, 
            "epoch_starttime": 1401554700, 
            "timezone": "PST", 
            "disable_forum": null, 
            "id": 872, 
            "primary_track_id": 3, 
            "limited_participants": null, 
            "school_leaderboard_enabled": false, 
            "time_limited_contest": false, 
            "archived": true, 
            "rated": true, 
            "parent_contest_id": null, 
            "leaderboard_out_of_sync_message": null, 
            "leaderboard_type": "country", 
            "tagline": "5 challenges in 2 hours", 
            "effective_epoch_endtime": 1401561900, 
            "show_participants_info": null, 
            "homepage_background_color": "", 
            "organization_name": null, 
            "track": {
                "name": "Algorithms", 
                "id": 3, 
                "priority": 14, 
                "descriptions": "The true test of problem solving: when one realizes that time and memory aren't infinite.\n", 
                "rewards_system_enabled": true, 
                "slug": "algorithms"
            }, 
            "primary_tag_id": 3081, 
            "hide_navigation": null, 
            "show_penalty": null, 
            "effective_time_left": -101793901.04452063, 
            "hidden": null, 
            "homepage": "", 
            "public": true, 
            "testers_contest": null, 
            "description": "101 Hack contest is back with its May edition! It's all about speed, accuracy and efficiency. Inside the contest are 5 challenges. You have exactly 120 minutes to solve them. Every second counts. \n\nHackerRank invites you to join the contest to compete against hackers from across the globe. ", 
            "hide_difficulty": null, 
            "started": true, 
            "time_left": -101793901.04139182, 
            "challenges_count": 5, 
            "qualification_rule_msg": null, 
            "leaderboard_out_of_sync": null, 
            "team_event": false, 
            "disable_fsi": null, 
            "hide_submissions": null, 
            "leaderboard_format": "", 
            "leaderboard_broadcast_message": null, 
            "has_tracks": null, 
            "college_public": null, 
            "endtime": "2014-05-31T18:45:00.000Z", 
            "qualification_rule_type": null, 
            "slug": "101may14", 
            "hide_leaderboard": null, 
            "kind": null, 
            "comment_live_sync": null, 
            "name": "101 Hack May", 
            "is_multi_round": false, 
            "created_at": "2014-04-28T13:04:47.000Z", 
            "epoch_endtime": 1401561900, 
            "company_associated_contest": null, 
            "rating_category": "101 Hack", 
            "has_codesprint_reg_page": null, 
            "starttime": "2014-05-31T16:45:00.000Z", 
            "is_rating_updated": true, 
            "leaderboard_freeze_time": null, 
            "migration_disabled": null, 
            "template_id": 146
        }, 
        "factor": 150, 
        "is_solution_unlocked": false, 
        "preview": "Maintain the given tree under Update and Query operations.", 
        "is_editorial_available": true, 
        "status": null, 
        "category": "ai", 
        "public_solutions": true, 
        "color": null, 
        "deleted": false, 
        "dynamic": true, 
        "company": null, 
        "moderator_or_support": false, 
        "is_text": false, 
        "solved_score": 0.5, 
        "difficulty_score": "0.658", 
        "difficulty": 0.423728813559322, 
        "active": true, 
        "show_skeliton": null, 
        "max_score": 150, 
        "slug": "rooted-tree", 
        "contest_slug": "master", 
        "user_score": 0, 
        "real_dynamic": false, 
        "kind": "code", 
        "player_count": 2, 
        "submitted_hackers_count": 191, 
        "name": "Rooted Tree", 
        "is_preview_contest": false, 
        "level": 97, 
        "success_ratio": 0.3717277486910995, 
        "total_count": 191, 
        "created_at": "2014-03-23T14:11:05.000Z", 
        "epoch_endtime": null, 
        "judgebot": null, 
        "available_translations": [], 
        "codechecker_handle": null, 
        "countdown_time": 0, 
        "author_avatar": "https://d3rpyts3de3lx8.cloudfront.net/hackerrank/assets/gravatar.jpg", 
        "custom_tabs": null, 
        "judgebot_language": null, 
        "custom_case": true, 
        "requirements_description": null, 
        "is_skip_band_challenge": false, 
        "custom_checker_language": null
    }
}