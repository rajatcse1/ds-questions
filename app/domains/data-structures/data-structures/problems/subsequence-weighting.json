{
    "status": true, 
    "model": {
        "onboarding": null, 
        "tagAncestry": [], 
        "solved_count": 514, 
        "leaderboard_out_of_sync_message": null, 
        "public_test_cases": true, 
        "checker_program": null, 
        "topics": [], 
        "time_left": null, 
        "updated_at": "2017-07-11T15:41:27.000Z", 
        "author_name": "HackerRank", 
        "has_started": true, 
        "epoch_starttime": null, 
        "has_all_test_cases_public": false, 
        "difficulty_name": "Advanced", 
        "require_unlock": true, 
        "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>A subsequence of a sequence is a sequence which is obtained by deleting zero or more elements from the sequence.&nbsp;</p>\n\n<p>You are given a sequence <code>A</code> in which every element is a pair of integers &nbsp;i.e &nbsp;<code>A</code> = <em>[(a<sub>1</sub>, w<sub>1</sub>), (a<sub>2</sub>, w<sub>2</sub>),..., (a<sub>N</sub>, w<sub>N</sub>)]</em>.</p>\n\n<p>For a subseqence <code>B</code> = <em>[(b<sub>1</sub>, v<sub>1</sub>), (b<sub>2</sub>, v<sub>2</sub>), ...., (b<sub>M</sub>, v<sub>M</sub>)]</em> of the given sequence :&nbsp;</p>\n\n<ul>\n<li>We call it increasing if for every <em>i</em> (1 &lt;= <em>i</em> &lt; <em>M</em> ) , <em>b<sub>i</sub> &lt; b<sub>i+1</sub></em>.</li>\n<li><em>Weight(B) = v<sub>1</sub> + v<sub>2</sub> + ... + v<sub>M</sub></em>.  </li>\n</ul>\n\n<p><strong>Task:</strong> <br>\nGiven a sequence, output the maximum weight formed by an increasing subsequence.</p>\n\n<p><strong>Input:</strong> <br>\nThe first line of input contains a single integer <em>T</em>. <em>T</em> test-cases follow. The first line of each test-case contains an integer <em>N</em>. The next line contains <em>a<sub>1</sub>, a<sub>2</sub> ,... , a<sub>N</sub></em>&nbsp;separated by a single space. The next line contains <em>w<sub>1</sub>, w<sub>2</sub>, ..., w<sub>N</sub></em>&nbsp;separated by a single space.</p>\n\n<p><strong>Output:</strong> <br>\nFor each test-case output a single integer: The maximum weight of increasing subsequences of the given sequence.  </p>\n\n<p><strong>Constraints:</strong> <br>\n1 &lt;= <em>T</em> &lt;= 5 <br>\n1 &lt;= <em>N</em> &lt;= 150000 <br>\n1 &lt;= <em>a<sub>i</sub></em> &lt;= 10<sup>9</sup>, where <em>i \u2208 [1..N]</em> <br>\n1 &lt;= <em>w<sub>i</sub></em> &lt;= 10<sup>9</sup>, where <em>i \u2208 [1..N]</em>  </p>\n\n<p><strong>Sample Input:</strong></p>\n\n<pre><code>2  \n4  \n1 2 3 4  \n10 20 30 40  \n8  \n1 2 3 4 1 2 3 4  \n10 20 30 40 15 15 15 50\n</code></pre>\n\n<p><strong>Sample Output:</strong></p>\n\n<pre><code>100  \n110\n</code></pre>\n\n<p><strong>Explanation:</strong> <br>\nIn the first sequence, the maximum size increasing subsequence is 4, and there's only one of them. We choose <code>B = [(1, 10), (2, 20), (3, 30), (4, 40)]</code>, and we have <code>Weight(B) = 100</code>.</p>\n\n<p>In the second sequence, the maximum size increasing subsequence is still 4, but there are now 5 possible subsequences:</p>\n\n<pre><code>1 2 3 4  \n10 20 30 40\n\n1 2 3 4  \n10 20 30 50\n\n1 2 3 4  \n10 20 15 50\n\n1 2 3 4  \n10 15 15 50\n\n1 2 3 4  \n15 15 15 50\n</code></pre>\n\n<p>Of those, the one with the greatest weight is <code>B = [(1, 10), (2, 20), (3, 30), (4, 50)]</code>, with <code>Weight(B) = 110</code>.</p>\n\n<p>Please note that this is not the maximum weight generated from picking the highest value element of each index. That value, 115, comes from&nbsp;[(1, 15), (2, 20), (3, 30), (4, 50)], which is not a valid subsequence because it cannot be created by only deleting elements in the original sequence.</p></div></div></div>", 
        "hacker": {
            "username": "HackerRank", 
            "is_admin": true, 
            "id": 15055, 
            "avatar": "https://hrcdn.net/s3_pub/hr-avatars/4c95f96b-1ff9-46ed-98f8-cb3cb4ed8834/150x150.png"
        }, 
        "id": 73, 
        "leaderboard_out_of_sync": null, 
        "has_ended": false, 
        "languages": [
            "c", 
            "cpp", 
            "java", 
            "csharp", 
            "php", 
            "ruby", 
            "python", 
            "perl", 
            "haskell", 
            "clojure", 
            "scala", 
            "lua", 
            "go", 
            "javascript", 
            "erlang", 
            "d", 
            "ocaml", 
            "pascal", 
            "python3", 
            "groovy", 
            "objectivec", 
            "fsharp", 
            "visualbasic", 
            "lolcode", 
            "smalltalk", 
            "tcl", 
            "whitespace", 
            "sbcl", 
            "java8", 
            "octave", 
            "racket", 
            "rust", 
            "bash", 
            "r", 
            "swift", 
            "fortran", 
            "cpp14", 
            "coffeescript", 
            "ada", 
            "pypy", 
            "pypy3", 
            "elixir", 
            "kotlin", 
            "julia"
        ], 
        "is_custom": false, 
        "compile_and_test": true, 
        "default_language": null, 
        "migrated_resource": null, 
        "submit_disabled": null, 
        "expert_solution_status": false, 
        "can_solve": true, 
        "company_id": null, 
        "custom": null, 
        "can_be_viewed": true, 
        "track": {
            "name": "Advanced", 
            "taxonomy": 1, 
            "track_slug": "data-structures", 
            "track_id": 17, 
            "track_name": "Data Structures", 
            "id": 32, 
            "rewards_system_enabled": null, 
            "slug": "data-structures"
        }, 
        "primary_contest": null, 
        "factor": 60, 
        "is_solution_unlocked": false, 
        "preview": "You are given a sequence of integer pairs (a, w). You need to find a subsequence in which a always increases, but you want the maximum total w value.", 
        "is_editorial_available": false, 
        "status": null, 
        "category": "algorithm", 
        "public_solutions": true, 
        "color": null, 
        "deleted": false, 
        "dynamic": true, 
        "company": null, 
        "moderator_or_support": false, 
        "is_text": false, 
        "solved_score": 0.5, 
        "difficulty_score": "0.613", 
        "difficulty": 0.3947826086956522, 
        "active": true, 
        "show_skeliton": null, 
        "max_score": 60, 
        "slug": "subsequence-weighting", 
        "contest_slug": "master", 
        "user_score": 0, 
        "real_dynamic": false, 
        "kind": "code", 
        "player_count": 2, 
        "submitted_hackers_count": 1211, 
        "name": "Subsequence Weighting", 
        "is_preview_contest": false, 
        "level": 52, 
        "success_ratio": 0.4244426094137077, 
        "total_count": 1211, 
        "created_at": "2013-01-04T20:26:52.000Z", 
        "epoch_endtime": null, 
        "judgebot": null, 
        "available_translations": [], 
        "codechecker_handle": "", 
        "countdown_time": 0, 
        "author_avatar": "https://hrcdn.net/s3_pub/hr-avatars/4c95f96b-1ff9-46ed-98f8-cb3cb4ed8834/150x150.png", 
        "custom_tabs": null, 
        "judgebot_language": null, 
        "custom_case": true, 
        "requirements_description": null, 
        "is_skip_band_challenge": false, 
        "custom_checker_language": null
    }
}