{
    "status": true, 
    "model": {
        "onboarding": null, 
        "tagAncestry": [], 
        "solved_count": 129, 
        "leaderboard_out_of_sync_message": null, 
        "public_test_cases": true, 
        "checker_program": null, 
        "topics": [], 
        "time_left": null, 
        "updated_at": "2017-07-11T15:46:00.000Z", 
        "author_name": "zxqfd555", 
        "has_started": true, 
        "epoch_starttime": null, 
        "has_all_test_cases_public": false, 
        "difficulty_name": "Advanced", 
        "require_unlock": true, 
        "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><div class='hackdown-content'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>Consider a binary search tree <em>T</em> which is initially empty. Also, consider the first <code>N</code> positive integers {1, 2, 3, 4, 5, ....., N} and its permutation P {<em>a</em><sub>1</sub>, <em>a</em><sub>2</sub>, ..., <em>a</em><sub>N</sub>}. </p>\n\n<p>If we start adding these numbers to the binary search tree <em>T</em>, starting from <em>a</em><sub>1</sub>, continuing with <em>a</em><sub>2</sub>, ... (and so on) ..., ending with <em>a</em><sub>N</sub>. After every addition we ask you to output the sum of distances between every pair of <em>T</em>'s nodes.</p>\n\n<p><strong>Input Format</strong> <br>\nThe first line of the input consists of the single integer <strong>N</strong>, the size of the list. <br>\nThe second line of the input contains <strong>N</strong> single space separated numbers the permutation <em>a</em><sub>1</sub>, <em>a</em><sub>2</sub>, ..., <em>a</em><sub>N</sub> itself.</p>\n\n<p><strong>Constraints</strong> <br>\n1 \u2264 <em>N</em> \u2264 250000  </p>\n\n<p><strong>Output Format</strong> <br>\nOutput <em>N</em> lines. <br>\nOn the <em>i</em><sup>th</sup> line output the sum of distances between every pair of nodes after adding the first <em>i</em> numbers from the permutation to the binary search tree <em>T</em>  </p>\n\n<p><strong>Sample Input #00</strong></p>\n\n<pre><code>8\n4 7 3 1 8 2 6 5\n</code></pre>\n\n<p><strong>Sample Output #00</strong></p>\n\n<pre><code>0\n1\n4\n10\n20\n35\n52\n76\n</code></pre>\n\n<p><strong>Explanation #00</strong>  </p>\n\n<p>After adding the first element, the distance is <code>0</code> as there is only 1 element </p>\n\n<pre><code>4\n</code></pre>\n\n<p>After adding the second element, the distance between 2 nodes is <code>1</code>.  </p>\n\n<pre><code>4\n \\\n  7\n</code></pre>\n\n<p>After adding the third element, the distance between every pair of elements is <code>2+1+1=4</code></p>\n\n<pre><code>  4\n / \\\n3   7    \n</code></pre>\n\n<p>After adding the fourth element, the distance between every pair of elements is <code>3 + 2 + 1 + 2 + 1 + 1 = 10</code></p>\n\n<pre><code>    4\n   / \\\n  3   7    \n /\n1\n</code></pre>\n\n<p>After adding the fifth element, the distance between every pair of elements is <code>4 + 3 + 2 + 1 + 3 + 2 + 1 + 2 + 1 + 1 = 20</code></p>\n\n<pre><code>    4\n   / \\\n  3   7    \n /     \\\n1       8\n</code></pre>\n\n<p>After adding the sixth element, the distance between every pair of elements is <code>5 + 4 + 3 + 2 + 1 + 4 + 3 + 2 + 1 + 3 + 2 + 1 + 2 + 1 + 1 = 35</code></p>\n\n<pre><code>    4\n   / \\\n  3   7    \n /     \\\n1       8\n \\\n  2\n</code></pre>\n\n<p>After adding the seventh element, the distance between every pair of elements is <code>5+5+4+3+2+1+4+4+3+2+1+3+3+2+1+2+2+1+1+1+2=52</code></p>\n\n<pre><code>    4\n   / \\\n  3   7    \n /   / \\\n1   6   8\n \\\n  2\n</code></pre>\n\n<p>After adding the final element, the distance between every pair of elements is <code>6+5+5+4+3+2+1+5+4+4+3+2+1+4+3+3+2+1+3+2+2+1+2+1+1+2+1+3=76</code></p>\n\n<pre><code>        4\n      /   \\\n    3      7   \n  /      /   \\\n 1      6     8\n  \\    /\n   2  5\n</code></pre></div></div></div>", 
        "hacker": {
            "username": "HackerRank", 
            "is_admin": true, 
            "id": 15055, 
            "avatar": "https://hrcdn.net/s3_pub/hr-avatars/4c95f96b-1ff9-46ed-98f8-cb3cb4ed8834/150x150.png"
        }, 
        "id": 2297, 
        "leaderboard_out_of_sync": null, 
        "has_ended": false, 
        "languages": [
            "c", 
            "cpp", 
            "java", 
            "csharp", 
            "php", 
            "ruby", 
            "python", 
            "perl", 
            "haskell", 
            "clojure", 
            "scala", 
            "lua", 
            "go", 
            "javascript", 
            "erlang", 
            "d", 
            "ocaml", 
            "pascal", 
            "python3", 
            "groovy", 
            "objectivec", 
            "fsharp", 
            "visualbasic", 
            "lolcode", 
            "smalltalk", 
            "tcl", 
            "whitespace", 
            "sbcl", 
            "java8", 
            "octave", 
            "racket", 
            "rust", 
            "bash", 
            "r", 
            "swift", 
            "fortran", 
            "cpp14", 
            "coffeescript", 
            "ada", 
            "pypy", 
            "pypy3", 
            "elixir", 
            "kotlin", 
            "julia"
        ], 
        "is_custom": false, 
        "compile_and_test": true, 
        "default_language": null, 
        "migrated_resource": null, 
        "submit_disabled": null, 
        "expert_solution_status": false, 
        "can_solve": true, 
        "company_id": null, 
        "custom": null, 
        "can_be_viewed": true, 
        "track": {
            "name": "Advanced", 
            "taxonomy": 1, 
            "track_slug": "data-structures", 
            "track_id": 17, 
            "track_name": "Data Structures", 
            "id": 32, 
            "rewards_system_enabled": null, 
            "slug": "data-structures"
        }, 
        "primary_contest": {
            "migration_status": null, 
            "contest_broadcast": null, 
            "hacker_timelimit": null, 
            "notification": null, 
            "qualification_rule_value": null, 
            "leaderboard_backend": null, 
            "expose_stats": null, 
            "updated_at": "2016-05-06T21:51:51.000Z", 
            "custom_leaderboard_column_name": null, 
            "organization_type": null, 
            "ended": true, 
            "epoch_starttime": 1398096000, 
            "timezone": "PST", 
            "disable_forum": null, 
            "id": 815, 
            "primary_track_id": 3, 
            "limited_participants": null, 
            "school_leaderboard_enabled": false, 
            "time_limited_contest": false, 
            "archived": true, 
            "rated": true, 
            "parent_contest_id": null, 
            "leaderboard_out_of_sync_message": null, 
            "leaderboard_type": "country", 
            "tagline": "1 challenge every day! ", 
            "effective_epoch_endtime": 1398700800, 
            "show_participants_info": null, 
            "homepage_background_color": "", 
            "organization_name": null, 
            "track": {
                "name": "Algorithms", 
                "id": 3, 
                "priority": 14, 
                "descriptions": "The true test of problem solving: when one realizes that time and memory aren't infinite.\n", 
                "rewards_system_enabled": true, 
                "slug": "algorithms"
            }, 
            "primary_tag_id": 3081, 
            "hide_navigation": null, 
            "show_penalty": null, 
            "effective_time_left": -104654985.23604451, 
            "hidden": null, 
            "homepage": "", 
            "public": true, 
            "testers_contest": null, 
            "description": "This is our 1st Week of daily challenges. Each day you get to solve a challenge and the difficulty increases as the week progresses! <br />\n\nYou have an entire weekend to solve the final challenge. <br />\n\nThere are 5 challenges in total!!  <br />\n\nRead more about this contest  <a href=\"/blog/daily-challenge\">here</a>. ", 
            "hide_difficulty": null, 
            "started": true, 
            "time_left": -104654985.22886291, 
            "challenges_count": 5, 
            "qualification_rule_msg": null, 
            "leaderboard_out_of_sync": null, 
            "team_event": false, 
            "disable_fsi": null, 
            "hide_submissions": null, 
            "leaderboard_format": "", 
            "leaderboard_broadcast_message": null, 
            "has_tracks": null, 
            "college_public": null, 
            "endtime": "2014-04-28T16:00:00.000Z", 
            "qualification_rule_type": null, 
            "slug": "w1", 
            "hide_leaderboard": null, 
            "kind": null, 
            "comment_live_sync": null, 
            "name": "Daily Challenges - Week 1", 
            "is_multi_round": false, 
            "created_at": "2014-03-31T19:37:47.000Z", 
            "epoch_endtime": 1398700800, 
            "company_associated_contest": null, 
            "rating_category": "Weekly", 
            "has_codesprint_reg_page": null, 
            "starttime": "2014-04-21T16:00:00.000Z", 
            "is_rating_updated": true, 
            "leaderboard_freeze_time": null, 
            "migration_disabled": null, 
            "template_id": 103
        }, 
        "factor": 140, 
        "is_solution_unlocked": false, 
        "preview": "Calculate the sum of distances between all the pairs of nodes of a binary search tree after every \"insert\" operation.", 
        "is_editorial_available": true, 
        "status": null, 
        "category": "ai", 
        "public_solutions": true, 
        "color": null, 
        "deleted": false, 
        "dynamic": true, 
        "company": null, 
        "moderator_or_support": false, 
        "is_text": false, 
        "solved_score": 0.5, 
        "difficulty_score": "0.741", 
        "difficulty": 0.29901960784313725, 
        "active": true, 
        "show_skeliton": null, 
        "max_score": 140, 
        "slug": "bst-maintenance", 
        "contest_slug": "master", 
        "user_score": 0, 
        "real_dynamic": false, 
        "kind": "code", 
        "player_count": 2, 
        "submitted_hackers_count": 415, 
        "name": "BST maintenance", 
        "is_preview_contest": false, 
        "level": 93, 
        "success_ratio": 0.3108433734939759, 
        "total_count": 415, 
        "created_at": "2014-04-01T19:10:09.000Z", 
        "epoch_endtime": null, 
        "judgebot": null, 
        "available_translations": [
            {
                "body": "\u4e00\u4e2a\u521d\u59cb\u4e3a\u7a7a\u7684\u4e8c\u53c9\u641c\u7d22\u6811 *T* \uff0c\u4ee5\u53ca{1, 2, 3, ..., N}\u7684\u4e00\u4e2a\u6392\u5217P: {*a*<sub>1</sub>, *a*<sub>2</sub>, ..., *a*<sub>N</sub>}\u3002 \n\n\u5982\u679c\u6211\u4eec\u5f00\u59cb\u5411\u8fd9\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811 *T* \u6dfb\u52a0\u8fd9\u4e9b\u6570\uff0c\u4ece *a*<sub>1</sub> \u5f00\u59cb, \u63a5\u4e0b\u6765\u662f *a*<sub>2</sub>, ...\uff0c \u4ee5 *a*<sub>N</sub> \u7ed3\u675f\u3002\u5728\u6bcf\u4e00\u4e2a\u6dfb\u52a0\u64cd\u4f5c\u540e\uff0c\u8f93\u51fa *T* \u4e0a\u6bcf\u5bf9\u8282\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e4b\u548c\u3002\n\n**\u8f93\u5165\u683c\u5f0f**\n\n\u7b2c\u4e00\u884c\u5305\u542b **N**<br>\n\u7b2c\u4e8c\u884c\u5305\u542b\u4e00\u4e2a1\u5230N\u7684\u6392\u5217\uff0c*a*<sub>1</sub>  *a*<sub>2</sub>  ...  *a*<sub>N</sub><br>\n\n**\u6570\u636e\u8303\u56f4**\n\n1 &le; *N* &le; 250000  \n\n**\u8f93\u51fa\u683c\u5f0f**\n\n\u8f93\u51fa *N* \u884c<br>\n\u7b2c *i* \u884c\u8f93\u51fa\u5f53\u7b2c *i* \u4e2a\u6570\u52a0\u8fdb\u4e8c\u53c9\u641c\u7d22\u6811 *T* \u540e\uff0c\u6240\u6709\u8282\u70b9\u5bf9\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e4b\u548c\u3002\n\n**\u6837\u4f8b\u8f93\u5165 #00**\n\n    8\n    4 7 3 1 8 2 6 5\n\n**\u6837\u4f8b\u8f93\u51fa #00**\n\n    0\n    1\n    4\n    10\n    20\n    35\n    52\n    76\n\n**\u6837\u4f8b\u89e3\u91ca #00**  \n\n\u52a0\u5165\u7b2c\u4e00\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u8ddd\u79bb\u4e3a `0`, \u56e0\u4e3a\u53ea\u6709\u4e00\u4e2a\u8282\u70b9 \n\n    4\n\n\u52a0\u5165\u7b2c\u4e8c\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u4e24\u4e2a\u8282\u70b9\u8ddd\u79bb\u4e3a `1` \n\n    4\n     \\\n      7\n\n\n\u52a0\u5165\u7b2c\u4e09\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u4e24\u4e24\u4e4b\u95f4\u7684\u8ddd\u79bb\u548c\u4e3a `2 + 1 + 1 = 4`\n\n      4\n     / \\\n    3   7    \n\n\u52a0\u5165\u7b2c\u56db\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u4e24\u4e24\u4e4b\u95f4\u7684\u8ddd\u79bb\u548c\u4e3a `3 + 2 + 1 + 2 + 1 + 1 = 10`\n\n        4\n       / \\\n      3   7    \n     /\n    1\n\n\u52a0\u5165\u7b2c\u4e94\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u4e24\u4e24\u4e4b\u95f4\u7684\u8ddd\u79bb\u548c\u4e3a `4 + 3 + 2 + 1 + 3 + 2 + 1 + 2 + 1 + 1 = 20`\n\n        4\n       / \\\n      3   7    \n     /     \\\n    1       8\n\n\n\u52a0\u5165\u7b2c\u516d\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u4e24\u4e24\u4e4b\u95f4\u7684\u8ddd\u79bb\u548c\u4e3a `5 + 4 + 3 + 2 + 1 + 4 + 3 + 2 + 1 + 3 + 2 + 1 + 2 + 1 + 1 = 35`\n\n        4\n       / \\\n      3   7    \n     /     \\\n    1       8\n     \\\n      2\n\n\u52a0\u5165\u7b2c\u4e03\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u4e24\u4e24\u4e4b\u95f4\u7684\u8ddd\u79bb\u548c\u4e3a `5+5+4+3+2+1+4+4+3+2+1+3+3+2+1+2+2+1+1+1+2=52`\n\n        4\n       / \\\n      3   7    \n     /   / \\\n    1   6   8\n     \\\n      2\n\n\u52a0\u5165\u7b2c\u516b\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u4e24\u4e24\u4e4b\u95f4\u7684\u8ddd\u79bb\u548c\u4e3a `6+5+5+4+3+2+1+5+4+4+3+2+1+4+3+3+2+1+3+2+2+1+2+1+1+2+1+3=76`\n\n            4\n          /   \\\n        3      7   \n      /      /   \\\n     1      6     8\n      \\    /\n       2  5\n", 
                "problem_statement_fields": {
                    "sample_output": " ", 
                    "problem_statement": "\u4e00\u4e2a\u521d\u59cb\u4e3a\u7a7a\u7684\u4e8c\u53c9\u641c\u7d22\u6811 *T* \uff0c\u4ee5\u53ca{1, 2, 3, ..., N}\u7684\u4e00\u4e2a\u6392\u5217P: {*a*<sub>1</sub>, *a*<sub>2</sub>, ..., *a*<sub>N</sub>}\u3002 \n\n\u5982\u679c\u6211\u4eec\u5f00\u59cb\u5411\u8fd9\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811 *T* \u6dfb\u52a0\u8fd9\u4e9b\u6570\uff0c\u4ece *a*<sub>1</sub> \u5f00\u59cb, \u63a5\u4e0b\u6765\u662f *a*<sub>2</sub>, ...\uff0c \u4ee5 *a*<sub>N</sub> \u7ed3\u675f\u3002\u5728\u6bcf\u4e00\u4e2a\u6dfb\u52a0\u64cd\u4f5c\u540e\uff0c\u8f93\u51fa *T* \u4e0a\u6bcf\u5bf9\u8282\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e4b\u548c\u3002\n\n**\u8f93\u5165\u683c\u5f0f**\n\n\u7b2c\u4e00\u884c\u5305\u542b **N**<br>\n\u7b2c\u4e8c\u884c\u5305\u542b\u4e00\u4e2a1\u5230N\u7684\u6392\u5217\uff0c*a*<sub>1</sub>  *a*<sub>2</sub>  ...  *a*<sub>N</sub><br>\n\n**\u6570\u636e\u8303\u56f4**\n\n1 &le; *N* &le; 250000  \n\n**\u8f93\u51fa\u683c\u5f0f**\n\n\u8f93\u51fa *N* \u884c<br>\n\u7b2c *i* \u884c\u8f93\u51fa\u5f53\u7b2c *i* \u4e2a\u6570\u52a0\u8fdb\u4e8c\u53c9\u641c\u7d22\u6811 *T* \u540e\uff0c\u6240\u6709\u8282\u70b9\u5bf9\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e4b\u548c\u3002\n\n**\u6837\u4f8b\u8f93\u5165 #00**\n\n    8\n    4 7 3 1 8 2 6 5\n\n**\u6837\u4f8b\u8f93\u51fa #00**\n\n    0\n    1\n    4\n    10\n    20\n    35\n    52\n    76\n\n**\u6837\u4f8b\u89e3\u91ca #00**  \n\n\u52a0\u5165\u7b2c\u4e00\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u8ddd\u79bb\u4e3a `0`, \u56e0\u4e3a\u53ea\u6709\u4e00\u4e2a\u8282\u70b9 \n\n    4\n\n\u52a0\u5165\u7b2c\u4e8c\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u4e24\u4e2a\u8282\u70b9\u8ddd\u79bb\u4e3a `1` \n\n    4\n     \\\n      7\n\n\n\u52a0\u5165\u7b2c\u4e09\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u4e24\u4e24\u4e4b\u95f4\u7684\u8ddd\u79bb\u548c\u4e3a `2 + 1 + 1 = 4`\n\n      4\n     / \\\n    3   7    \n\n\u52a0\u5165\u7b2c\u56db\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u4e24\u4e24\u4e4b\u95f4\u7684\u8ddd\u79bb\u548c\u4e3a `3 + 2 + 1 + 2 + 1 + 1 = 10`\n\n        4\n       / \\\n      3   7    \n     /\n    1\n\n\u52a0\u5165\u7b2c\u4e94\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u4e24\u4e24\u4e4b\u95f4\u7684\u8ddd\u79bb\u548c\u4e3a `4 + 3 + 2 + 1 + 3 + 2 + 1 + 2 + 1 + 1 = 20`\n\n        4\n       / \\\n      3   7    \n     /     \\\n    1       8\n\n\n\u52a0\u5165\u7b2c\u516d\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u4e24\u4e24\u4e4b\u95f4\u7684\u8ddd\u79bb\u548c\u4e3a `5 + 4 + 3 + 2 + 1 + 4 + 3 + 2 + 1 + 3 + 2 + 1 + 2 + 1 + 1 = 35`\n\n        4\n       / \\\n      3   7    \n     /     \\\n    1       8\n     \\\n      2\n\n\u52a0\u5165\u7b2c\u4e03\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u4e24\u4e24\u4e4b\u95f4\u7684\u8ddd\u79bb\u548c\u4e3a `5+5+4+3+2+1+4+4+3+2+1+3+3+2+1+2+2+1+1+1+2=52`\n\n        4\n       / \\\n      3   7    \n     /   / \\\n    1   6   8\n     \\\n      2\n\n\u52a0\u5165\u7b2c\u516b\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u4e24\u4e24\u4e4b\u95f4\u7684\u8ddd\u79bb\u548c\u4e3a `6+5+5+4+3+2+1+5+4+4+3+2+1+4+3+3+2+1+3+2+2+1+2+1+1+2+1+3=76`\n\n            4\n          /   \\\n        3      7   \n      /      /   \\\n     1      6     8\n      \\    /\n       2  5\n", 
                    "input_format": " ", 
                    "explanation": " ", 
                    "sample_input": " ", 
                    "output_format": " "
                }, 
                "name": "BST maintenance", 
                "language": "Chinese", 
                "challenge_id": 2297, 
                "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>\u4e00\u4e2a\u521d\u59cb\u4e3a\u7a7a\u7684\u4e8c\u53c9\u641c\u7d22\u6811 <em>T</em> \uff0c\u4ee5\u53ca{1, 2, 3, ..., N}\u7684\u4e00\u4e2a\u6392\u5217P: {<em>a</em><sub>1</sub>, <em>a</em><sub>2</sub>, ..., <em>a</em><sub>N</sub>}\u3002 </p>\n\n<p>\u5982\u679c\u6211\u4eec\u5f00\u59cb\u5411\u8fd9\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811 <em>T</em> \u6dfb\u52a0\u8fd9\u4e9b\u6570\uff0c\u4ece <em>a</em><sub>1</sub> \u5f00\u59cb, \u63a5\u4e0b\u6765\u662f <em>a</em><sub>2</sub>, ...\uff0c \u4ee5 <em>a</em><sub>N</sub> \u7ed3\u675f\u3002\u5728\u6bcf\u4e00\u4e2a\u6dfb\u52a0\u64cd\u4f5c\u540e\uff0c\u8f93\u51fa <em>T</em> \u4e0a\u6bcf\u5bf9\u8282\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e4b\u548c\u3002</p>\n\n<p><strong>\u8f93\u5165\u683c\u5f0f</strong></p>\n\n<p>\u7b2c\u4e00\u884c\u5305\u542b <strong>N</strong><br>\n\u7b2c\u4e8c\u884c\u5305\u542b\u4e00\u4e2a1\u5230N\u7684\u6392\u5217\uff0c<em>a</em><sub>1</sub>  <em>a</em><sub>2</sub>  ...  <em>a</em><sub>N</sub><br></p>\n\n<p><strong>\u6570\u636e\u8303\u56f4</strong></p>\n\n<p>1 \u2264 <em>N</em> \u2264 250000  </p>\n\n<p><strong>\u8f93\u51fa\u683c\u5f0f</strong></p>\n\n<p>\u8f93\u51fa <em>N</em> \u884c<br>\n\u7b2c <em>i</em> \u884c\u8f93\u51fa\u5f53\u7b2c <em>i</em> \u4e2a\u6570\u52a0\u8fdb\u4e8c\u53c9\u641c\u7d22\u6811 <em>T</em> \u540e\uff0c\u6240\u6709\u8282\u70b9\u5bf9\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e4b\u548c\u3002</p>\n\n<p><strong>\u6837\u4f8b\u8f93\u5165 #00</strong></p>\n\n<pre><code>8\n4 7 3 1 8 2 6 5\n</code></pre>\n\n<p><strong>\u6837\u4f8b\u8f93\u51fa #00</strong></p>\n\n<pre><code>0\n1\n4\n10\n20\n35\n52\n76\n</code></pre>\n\n<p><strong>\u6837\u4f8b\u89e3\u91ca #00</strong>  </p>\n\n<p>\u52a0\u5165\u7b2c\u4e00\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u8ddd\u79bb\u4e3a <code>0</code>, \u56e0\u4e3a\u53ea\u6709\u4e00\u4e2a\u8282\u70b9 </p>\n\n<pre><code>4\n</code></pre>\n\n<p>\u52a0\u5165\u7b2c\u4e8c\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u4e24\u4e2a\u8282\u70b9\u8ddd\u79bb\u4e3a <code>1</code> </p>\n\n<pre><code>4\n \\\n  7\n</code></pre>\n\n<p>\u52a0\u5165\u7b2c\u4e09\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u4e24\u4e24\u4e4b\u95f4\u7684\u8ddd\u79bb\u548c\u4e3a <code>2 + 1 + 1 = 4</code></p>\n\n<pre><code>  4\n / \\\n3   7    \n</code></pre>\n\n<p>\u52a0\u5165\u7b2c\u56db\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u4e24\u4e24\u4e4b\u95f4\u7684\u8ddd\u79bb\u548c\u4e3a <code>3 + 2 + 1 + 2 + 1 + 1 = 10</code></p>\n\n<pre><code>    4\n   / \\\n  3   7    \n /\n1\n</code></pre>\n\n<p>\u52a0\u5165\u7b2c\u4e94\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u4e24\u4e24\u4e4b\u95f4\u7684\u8ddd\u79bb\u548c\u4e3a <code>4 + 3 + 2 + 1 + 3 + 2 + 1 + 2 + 1 + 1 = 20</code></p>\n\n<pre><code>    4\n   / \\\n  3   7    \n /     \\\n1       8\n</code></pre>\n\n<p>\u52a0\u5165\u7b2c\u516d\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u4e24\u4e24\u4e4b\u95f4\u7684\u8ddd\u79bb\u548c\u4e3a <code>5 + 4 + 3 + 2 + 1 + 4 + 3 + 2 + 1 + 3 + 2 + 1 + 2 + 1 + 1 = 35</code></p>\n\n<pre><code>    4\n   / \\\n  3   7    \n /     \\\n1       8\n \\\n  2\n</code></pre>\n\n<p>\u52a0\u5165\u7b2c\u4e03\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u4e24\u4e24\u4e4b\u95f4\u7684\u8ddd\u79bb\u548c\u4e3a <code>5+5+4+3+2+1+4+4+3+2+1+3+3+2+1+2+2+1+1+1+2=52</code></p>\n\n<pre><code>    4\n   / \\\n  3   7    \n /   / \\\n1   6   8\n \\\n  2\n</code></pre>\n\n<p>\u52a0\u5165\u7b2c\u516b\u4e2a\u6570\u7684\u65f6\u5019\uff0c\u4e24\u4e24\u4e4b\u95f4\u7684\u8ddd\u79bb\u548c\u4e3a <code>6+5+5+4+3+2+1+5+4+4+3+2+1+4+3+3+2+1+3+2+2+1+2+1+1+2+1+3=76</code></p>\n\n<pre><code>        4\n      /   \\\n    3      7   \n  /      /   \\\n 1      6     8\n  \\    /\n   2  5\n</code></pre></div></div>", 
                "preview": null
            }, 
            {
                "body": "\u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u0435 \u0434\u0435\u0440\u0435\u0432\u043e \u043f\u043e\u0438\u0441\u043a\u0430 **T**. \u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u043e\u043d\u043e \u043f\u0443\u0441\u0442\u043e\u0435.\n\n\u0422\u0430\u043a\u0436\u0435 \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0443, \u0441\u043e\u0441\u0442\u043e\u044f\u0449\u0443\u044e \u0438\u0437 **N** \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0446\u0435\u043b\u044b\u0445 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b, \u043d\u0435 \u043f\u0440\u0435\u0432\u043e\u0441\u0445\u043e\u0434\u044f\u0449\u0438\u0445 **N**: **a**<sub>1</sub>, **a**<sub>2</sub>, ..., **a**<sub>N</sub>. \n\n\u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0447\u0438\u0441\u043b\u0430 \u0438\u0437 \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0432 **T**, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 **a**<sub>1</sub>, \u0434\u0430\u043b\u0435\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043c **a**<sub>2</sub>, ... (\u0438 \u0442\u0430\u043a \u0434\u0430\u043b\u0435\u0435) ..., \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043c \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043c \u0447\u0438\u0441\u043b\u0430 **a**<sub>N</sub>. \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0443\u043c\u043c\u0430\u0440\u043d\u043e\u0435 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 \u0432\u0441\u0435\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0438 \u0432\u0435\u0440\u0448\u0438\u043d \u0434\u0435\u0440\u0435\u0432\u0430 **T** \u043f\u043e\u0441\u043b\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f.\n\n**\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:**\n\n\u041f\u0435\u0440\u0432\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e **N** - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0447\u0438\u0441\u0435\u043b \u0432 \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0435.\n\n\u0412\u0442\u043e\u0440\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 **N** \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b, \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0445 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b: **a**<sub>1</sub>, **a**<sub>2</sub>, ..., **a**<sub>N</sub>.\n\n**\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:**\n\n\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 **N** \u0441\u0442\u0440\u043e\u043a.\n\n\u0412 **i**-\u0439 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0443\u043c\u043c\u0443 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0439 \u043c\u0435\u0436\u0434\u0443 \u0432\u0441\u0435\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0438 \u0432\u0435\u0440\u0448\u0438\u043d \u0434\u0435\u0440\u0435\u0432\u0430 **T** \u043f\u043e\u0441\u043b\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f **i** \u043f\u0435\u0440\u0432\u044b\u0445 \u0447\u0438\u0441\u0435\u043b \u0438\u0437 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438.\n\n**\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:**\n\n<pre>8\n4 7 3 1 8 2 6 5</pre>\n\n**\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:**\n\n<pre>0\n1\n4\n10\n20\n35\n52\n76</pre>\n\n**\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f:**\n\n1 <= **N** <= 250000\n\n\u0412 30% \u0432\u0441\u0435\u0445 \u0442\u0435\u0441\u0442\u043e\u0432 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0442\u0441\u044f \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: 1 <= **N** <= 1000\n", 
                "problem_statement_fields": {
                    "sample_output": " ", 
                    "problem_statement": "\u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u0435 \u0434\u0435\u0440\u0435\u0432\u043e \u043f\u043e\u0438\u0441\u043a\u0430 **T**. \u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u043e\u043d\u043e \u043f\u0443\u0441\u0442\u043e\u0435.\n\n\u0422\u0430\u043a\u0436\u0435 \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0443, \u0441\u043e\u0441\u0442\u043e\u044f\u0449\u0443\u044e \u0438\u0437 **N** \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0446\u0435\u043b\u044b\u0445 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b, \u043d\u0435 \u043f\u0440\u0435\u0432\u043e\u0441\u0445\u043e\u0434\u044f\u0449\u0438\u0445 **N**: **a**<sub>1</sub>, **a**<sub>2</sub>, ..., **a**<sub>N</sub>. \n\n\u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0447\u0438\u0441\u043b\u0430 \u0438\u0437 \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0432 **T**, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 **a**<sub>1</sub>, \u0434\u0430\u043b\u0435\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043c **a**<sub>2</sub>, ... (\u0438 \u0442\u0430\u043a \u0434\u0430\u043b\u0435\u0435) ..., \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043c \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043c \u0447\u0438\u0441\u043b\u0430 **a**<sub>N</sub>. \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0443\u043c\u043c\u0430\u0440\u043d\u043e\u0435 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 \u0432\u0441\u0435\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0438 \u0432\u0435\u0440\u0448\u0438\u043d \u0434\u0435\u0440\u0435\u0432\u0430 **T** \u043f\u043e\u0441\u043b\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f.\n\n**\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:**\n\n\u041f\u0435\u0440\u0432\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e **N** - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0447\u0438\u0441\u0435\u043b \u0432 \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0435.\n\n\u0412\u0442\u043e\u0440\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 **N** \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b, \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0445 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b: **a**<sub>1</sub>, **a**<sub>2</sub>, ..., **a**<sub>N</sub>.\n\n**\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:**\n\n\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 **N** \u0441\u0442\u0440\u043e\u043a.\n\n\u0412 **i**-\u0439 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0443\u043c\u043c\u0443 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0439 \u043c\u0435\u0436\u0434\u0443 \u0432\u0441\u0435\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0438 \u0432\u0435\u0440\u0448\u0438\u043d \u0434\u0435\u0440\u0435\u0432\u0430 **T** \u043f\u043e\u0441\u043b\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f **i** \u043f\u0435\u0440\u0432\u044b\u0445 \u0447\u0438\u0441\u0435\u043b \u0438\u0437 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438.\n\n**\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:**\n\n<pre>8\n4 7 3 1 8 2 6 5</pre>\n\n**\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:**\n\n<pre>0\n1\n4\n10\n20\n35\n52\n76</pre>\n\n**\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f:**\n\n1 <= **N** <= 250000\n\n\u0412 30% \u0432\u0441\u0435\u0445 \u0442\u0435\u0441\u0442\u043e\u0432 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0442\u0441\u044f \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: 1 <= **N** <= 1000\n", 
                    "input_format": " ", 
                    "explanation": " ", 
                    "sample_input": " ", 
                    "output_format": " "
                }, 
                "name": "BST maintenance", 
                "language": "Russian", 
                "challenge_id": 2297, 
                "body_html": "<div class='challenge_problem_statement'><div class='msB challenge_problem_statement_body'><style id=\"MathJax_SVG_styles\">.MathJax_SVG_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}\n.MathJax_SVG .MJX-monospace {font-family: monospace}\n.MathJax_SVG .MJX-sans-serif {font-family: sans-serif}\n.MathJax_SVG {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}\n.MathJax_SVG * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}\n.mjx-svg-href {fill: blue; stroke: blue}\n</style><svg style=\"display: none;\"><defs id=\"MathJax_SVG_glyphs\"></defs></svg><p>\u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u0435 \u0434\u0435\u0440\u0435\u0432\u043e \u043f\u043e\u0438\u0441\u043a\u0430 <strong>T</strong>. \u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u043e\u043d\u043e \u043f\u0443\u0441\u0442\u043e\u0435.</p>\n\n<p>\u0422\u0430\u043a\u0436\u0435 \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0443, \u0441\u043e\u0441\u0442\u043e\u044f\u0449\u0443\u044e \u0438\u0437 <strong>N</strong> \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0446\u0435\u043b\u044b\u0445 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b, \u043d\u0435 \u043f\u0440\u0435\u0432\u043e\u0441\u0445\u043e\u0434\u044f\u0449\u0438\u0445 <strong>N</strong>: <strong>a</strong><sub>1</sub>, <strong>a</strong><sub>2</sub>, ..., <strong>a</strong><sub>N</sub>. </p>\n\n<p>\u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0447\u0438\u0441\u043b\u0430 \u0438\u0437 \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0432 <strong>T</strong>, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 <strong>a</strong><sub>1</sub>, \u0434\u0430\u043b\u0435\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043c <strong>a</strong><sub>2</sub>, ... (\u0438 \u0442\u0430\u043a \u0434\u0430\u043b\u0435\u0435) ..., \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043c \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043c \u0447\u0438\u0441\u043b\u0430 <strong>a</strong><sub>N</sub>. \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0443\u043c\u043c\u0430\u0440\u043d\u043e\u0435 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 \u0432\u0441\u0435\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0438 \u0432\u0435\u0440\u0448\u0438\u043d \u0434\u0435\u0440\u0435\u0432\u0430 <strong>T</strong> \u043f\u043e\u0441\u043b\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f.</p>\n\n<p><strong>\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:</strong></p>\n\n<p>\u041f\u0435\u0440\u0432\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e <strong>N</strong> - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0447\u0438\u0441\u0435\u043b \u0432 \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0435.</p>\n\n<p>\u0412\u0442\u043e\u0440\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 <strong>N</strong> \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b, \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0445 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b: <strong>a</strong><sub>1</sub>, <strong>a</strong><sub>2</sub>, ..., <strong>a</strong><sub>N</sub>.</p>\n\n<p><strong>\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:</strong></p>\n\n<p>\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 <strong>N</strong> \u0441\u0442\u0440\u043e\u043a.</p>\n\n<p>\u0412 <strong>i</strong>-\u0439 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0443\u043c\u043c\u0443 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0439 \u043c\u0435\u0436\u0434\u0443 \u0432\u0441\u0435\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0438 \u0432\u0435\u0440\u0448\u0438\u043d \u0434\u0435\u0440\u0435\u0432\u0430 <strong>T</strong> \u043f\u043e\u0441\u043b\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f <strong>i</strong> \u043f\u0435\u0440\u0432\u044b\u0445 \u0447\u0438\u0441\u0435\u043b \u0438\u0437 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438.</p>\n\n<p><strong>\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:</strong></p>\n\n<pre>8\n4 7 3 1 8 2 6 5</pre>\n\n<p><strong>\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:</strong></p>\n\n<pre>0\n1\n4\n10\n20\n35\n52\n76</pre>\n\n<p><strong>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f:</strong></p>\n\n<p>1 &lt;= <strong>N</strong> &lt;= 250000</p>\n\n<p>\u0412 30% \u0432\u0441\u0435\u0445 \u0442\u0435\u0441\u0442\u043e\u0432 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0442\u0441\u044f \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f: 1 &lt;= <strong>N</strong> &lt;= 1000</p></div></div>", 
                "preview": null
            }
        ], 
        "codechecker_handle": null, 
        "countdown_time": 0, 
        "author_avatar": "https://hrcdn.net/s3_pub/hr-avatars/871a559a-479e-43ee-9348-aac0d68931c2/150x150.png", 
        "custom_tabs": null, 
        "judgebot_language": null, 
        "custom_case": true, 
        "requirements_description": null, 
        "is_skip_band_challenge": false, 
        "custom_checker_language": null
    }
}